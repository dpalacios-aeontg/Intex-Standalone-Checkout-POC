{"version":3,"file":"order-summary-9ce5e306.js","mappings":"uKAaA,QAT8C,SAAC,G,IAAEA,EAAQ,WAAO,OAC5D,0BAAQC,UAAU,eACd,sBAAIA,UAAU,iDACV,gBAACC,EAAA,EAAgB,CAACC,GAAG,uBAExBH,EALuD,E,gDCkDhE,QAnCwF,SAAC,GACrF,IAAAI,EAAa,gBACbC,EAAe,kBACfC,EAAU,aACVC,EAAmB,sBACnBC,EAAS,YACTC,EAAK,QACFC,GAA0B,UAPwD,4FAS/EC,GAAsB,IAAAC,UAAQ,WAAM,OC1B/B,SAA4BJ,GACvC,OAAO,oBACAA,GAAS,CACZK,cAAeL,EAAUK,cAAcC,QAAO,SAACC,GAAS,MAAyB,iBAAlBA,EAAKC,QAAZ,IACxDC,aAAcT,EAAUS,aAAaH,QAAO,SAACC,GAAS,MAAyB,iBAAlBA,EAAKC,QAAZ,KAE9D,CDoB8CE,CAAmBV,EAAnB,GAA+B,CAACA,IAE1E,OACI,2BAASP,UAAU,sCAAqC,YAAW,QAC/D,gBAAC,EAAkB,KAAEK,GAErB,gBAACa,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,MAAOV,KAG9B,gBAACQ,EAAA,EAAmB,KAChB,gBAACG,EAAA,GAAqB,WAAKZ,IAC1BH,GAGL,gBAACY,EAAA,EAAmB,KAChB,gBAACI,EAAA,EAAiB,CACdC,YAAaf,EACbgB,oBAAqBpB,EAAgBqB,KACrCC,kBAAmBvB,EAAcsB,QAKrD,C,wEE1CA,SAAe,E,SAAA,IAN0B,WAAM,OAC3C,uBAAKE,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,mDAF+B,I,0BCS/C,QATA,SAAuBjB,GACnB,MAAO,CACHZ,GAAIY,EAAKZ,GACT8B,SAAUlB,EAAKkB,SACfC,OAAQnB,EAAKoB,kBACbC,KAAMrB,EAAKqB,KAEnB,ECRe,SAASC,EAAyBtB,GAC7C,GAAKA,EAAKuB,SAIV,OAAO,uBAAKC,IAAKxB,EAAKqB,KAAI,YAAY,kBAAkBI,IAAKzB,EAAKuB,UACtE,CCiBA,SAASG,EAA0B1B,GAC/B,OAAKA,EAAK2B,gBAOH,CACHC,OAAQ,qCACRC,QACI,qBAAGC,KAAM9B,EAAK2B,gBAAiBI,IAAI,sBAAsBC,OAAO,UAC5D,gBAAC7C,EAAA,EAAgB,CAACC,GAAG,4BAVtB,CACHwC,OAAQ,4BACRC,QAAS,gBAAC1C,EAAA,EAAgB,CAACC,GAAG,2BAY1C,CAEA,QApCA,SAAwBY,GACpB,MAAO,CACHZ,GAAIY,EAAKZ,GACT8B,SAAUlB,EAAKkB,SACfC,OAAQnB,EAAKoB,kBACba,oBAAqBjC,EAAKkC,kBAC1Bb,KAAMrB,EAAKqB,KACXc,MAAOb,EAAyBtB,GAChCoC,gBAAgB,qBACRpC,EAAKqC,SAAW,IAAIC,KAAI,SAACC,GAAW,OACpCX,OAAQ,2BACRC,QAAS,UAAGU,EAAOlB,KAAI,YAAIkB,EAAOC,OAFE,KAGrC,IACHd,EAA0B1B,K,GAGtC,E,eCHA,QAdA,SAAgCA,GAC5B,MAAO,CACHZ,GAAIY,EAAKZ,GACT8B,SAAU,EACVC,OAAQnB,EAAKmB,OACbE,KAAMrB,EAAKqB,KACXc,MACI,wBAAMjD,UAAU,+BAA8B,YAAW,8BACrD,gBAACuD,EAAA,EAAmB,OAIpC,ECEA,QAhBA,SAAyBzC,GACrB,MAAO,CACHZ,GAAIY,EAAKZ,GACT8B,SAAUlB,EAAKkB,SACfC,OAAQnB,EAAK0C,wBACbT,oBAAqBjC,EAAKkC,kBAC1Bb,KAAMrB,EAAKqB,KACXc,MAAOb,EAAyBtB,GAChC2C,YAAa3C,EAAK4C,aAAe5C,EAAK4C,aAAavB,UAAOwB,EAC1DT,gBAAiBpC,EAAKqC,SAAW,IAAIC,KAAI,SAACC,GAAW,OACjDX,OAAQ,2BACRC,QAAS,UAAGU,EAAOlB,KAAI,YAAIkB,EAAOC,OAFe,IAK7D,E,4CCgEA,SAAe,IAAAM,OA7DoD,SAAC,G,IAChE3B,EAAM,SACNc,EAAmB,sBACnBE,EAAK,QACLd,EAAI,OACJe,EAAc,iBACdlB,EAAQ,WACRyB,EAAW,cACT,OACF,uBAAKzD,UAAU,UAAS,YAAW,aAC/B,0BAAQA,UAAU,iCAAiCiD,GAEnD,uBAAKjD,UAAU,+BACX,sBACIA,UAAU,iDAAgD,YAChD,2BAET,UAAGgC,EAAQ,cAAMG,IAErBe,GAAkBA,EAAeW,OAAS,GACvC,sBACI7D,UAAU,qDAAoD,YACpD,6BAETkD,EAAeE,KAAI,SAACC,EAAQS,GAAU,OACnC,sBAAI9D,UAAU,iBAAgB,YAAYqD,EAAOX,OAAQqB,IAAKD,GACzDT,EAAOV,QAFuB,KAO9Cc,GACG,uBACIzD,UAAU,yDAAwD,YACxD,iCAETyD,IAKb,uBAAKzD,UAAU,kCACX,uBACIA,UAAW,IAAW,gBAAiB,mCAAoC,CACvE,iCACI,IAAAgE,UAASjB,IAAwBA,IAAwBd,IAC/D,YACQ,2BAEV,gBAACgC,EAAA,EAAe,CAAChC,OAAQA,MAG5B,IAAA+B,UAASjB,IAAwBA,IAAwBd,GACtD,uBAAKjC,UAAU,gBAAe,YAAW,0CACrC,gBAACiE,EAAA,EAAe,CAAChC,OAAQc,MA9CvC,IC4FN,QAnGA,YACI,WAAYmB,GAAZ,MACI,YAAMA,IAAM,K,OA0FR,EAAAC,aAA2B,WACvB,IAAAC,EAAe,EAAKC,MAAK,WAEjC,EAAKC,SAAS,CAAEF,YAAaA,GACjC,EA5FI,EAAKC,MAAQ,CACTD,YAAY,G,CAEpB,CA0FJ,OAjGgC,aAS5B,YAAAG,OAAA,WACY,IAAAnD,EAAUoD,KAAKN,MAAK,MACpBE,EAAeI,KAAKH,MAAK,WAEjC,OACI,gCACI,sBACIrE,UAAU,wDAAuD,YACvD,oBAEV,gBAACC,EAAA,EAAgB,CACbwE,KAAM,CAAEC,OAAO,EAAAC,EAAA,GAAcvD,IAC7BlB,GAAG,0BAIX,kCAAc,SAASF,UAAU,gBAC5B,sCACMoB,EAAMR,cACJgE,QACAC,MAAK,SAAC/D,GAAS,OAAAA,EAAKgE,SAAL,IACf1B,IAAI,IAAgB,GACtBhC,EAAM2D,iBAAiBH,QAAQxB,IAAI,IAAuB,GAC1DhC,EAAMJ,aACJ4D,QACAC,MAAK,SAAC/D,GAAS,OAAAA,EAAKgE,SAAL,IACf1B,IAAI,IAAe,IACpBhC,EAAM4D,aAAe,IAAI5B,IAAI,IAAc,GAE9CwB,MAAM,EAAGR,OAAaT,EAhDjB,GAiDLP,KAAI,SAAC6B,GAAqB,OACvB,sBAAIjF,UAAU,8BAA8B+D,IAAKkB,EAAiB/E,IAC9D,gBAAC,GAAgB,WAAK+E,IAFH,KAOlCT,KAAKU,gBAGlB,EAEQ,YAAAA,cAAR,WACY,IAAAd,EAAeI,KAAKH,MAAK,WAEjC,KAAIG,KAAKW,mBAAqB,GAI9B,OACI,uBAAKnF,UAAU,gBACX,0BACIA,UAAU,yEACVoF,QAASZ,KAAKL,aACdkB,KAAK,UAEJjB,EACG,gCACI,gBAACnE,EAAA,EAAgB,CAACC,GAAG,yBACrB,gBAAC,EAAa,OAGlB,gCACI,gBAACD,EAAA,EAAgB,CAACC,GAAG,wBACrB,gBAACoF,EAAA,EAAe,QAMxC,EAEQ,YAAAH,iBAAR,WACY,IAAA/D,EAAUoD,KAAKN,MAAK,MAE5B,OACK9C,EAAM4D,aAAe,IAAInB,OAC1BzC,EAAMR,cAAciD,OACpBzC,EAAMJ,aAAa6C,OACnBzC,EAAM2D,iBAAiBlB,MAE/B,EAOJ,EAjGA,CAAgC,Y,qGC8GhC,QA5FA,uE,OAQI,EAAAQ,MAAQ,CACJkB,WAAW,EACXC,eAAgB,GAmEZ,EAAAC,oBAAqE,SAACC,EAAMC,GACxE,IAAAH,EAAmB,EAAKnB,MAAK,eAErCqB,EAAKE,iBAAiB,gBAAgB,SAAC,GAAQ,WAC5BF,IACX,EAAKpB,SAAS,CACViB,WAAW,EACXC,eAAc,IAElBG,IAER,GACJ,E,CACJ,QA1FgC,aACrB,EAAAE,yBAAP,SAAgC3B,EAA+BG,GAC3D,MAAO,CACHkB,UAAWrB,EAAMjC,SAAWoC,EAAMmB,eAClCA,eAAgBtB,EAAMjC,OAE9B,EAOA,YAAAsC,OAAA,WACU,MASFC,KAAKN,MARLjC,EAAM,SACNlC,EAAQ,WACRC,EAAS,YACT8F,EAAY,eACZC,EAAK,QACLC,EAAW,cACXtD,EAAM,SACNuD,EAAS,YAGLV,EAAcf,KAAKH,MAAK,UAC1B6B,EA5Cd,SAAyBjE,EAAwBgE,GAG7C,OAAI,MAAOhE,EAFa,KAMpBgE,GAAwB,IAAXhE,EACNgE,EAGJhE,CACX,CAgC6BkE,CAAgBlE,EAAQgE,GAE7C,OACI,mCAAgBvD,GACZ,gBAAC,EAAA0D,cAAa,CACVC,eAAgB7B,KAAKiB,oBACrBa,WAAW,kBACXC,GAAIhB,EACJiB,QAAS,CAAC,GAEV,mCACc,SACVxG,UAAW,IACP,iBACA,mCACAA,IAGJ,wBAAMA,UAAU,wBACZ,oCAAgB,oBACX+F,EACA,MAEJD,GACG,wBAAM9F,UAAU,+BACX,WAAI8F,EAAY,QAK7B,wBAAM9F,UAAU,wBACZ,oCAAgB,oBA7D5C,SAAuBkG,GACnB,MAA+B,iBAAjBA,CAClB,CA4DiCO,CAAcP,GACX,gBAAC,IAAe,CAACjE,OAAQiE,IACzB,GAKPF,GACG,mCAAe,gCAAgCA,IAItDjG,IAKrB,EAeJ,EA1FA,CAAgC,EAAA2G,U,kDCjChC,QAN+C,SAAC,G,IAAE3G,EAAQ,WAAO,OAC7D,2BAASC,UAAU,2DACdD,EAFwD,C,8FCuCjE,SAAe,IAAA6D,OA5B4D,SAAC,GACxE,IAAAnC,EAAI,OACJkF,EAAS,YACT1E,EAAM,SACN2E,EAAS,YACNC,GAAI,UALiE,2CAMtE,OACF,gBAACC,EAAA,GAAiB,WACVD,EACCD,GAAa,CACdG,kBAAmB,WAAM,OAAAtF,GAAQmF,EAAUnF,EAAlB,EACzBuF,YAAa,gBAAC/G,EAAA,EAAgB,CAACC,GAAG,wBACpC,CACF+B,QAAS,GAAKA,GAAU,OAErB0E,GAAaA,EAAY,GACxB,wBACI3G,UAAU,4DAA2D,YAC3D,wBAEV,gBAACC,EAAA,EAAgB,CAACC,GAAG,wBACpB,KACD,gBAAC+D,EAAA,EAAe,CAAChC,OAAQ0E,K,ICmFzC,SAAe,IAAA/C,OAhG8D,SAAC,G,IAC1EqD,EAAc,iBACdlC,EAAgB,mBAChBmC,EAAK,QACLC,EAAkB,qBAClBC,EAAc,iBACdC,EAAc,iBACdC,EAAc,iBACdC,EAAiB,oBACjBC,EAAO,UACPC,EAAwB,2BACxBC,EAAe,kBAEf,OACI,gCACI,gBAACZ,EAAA,EAAiB,CACd7E,OAAQoF,EACRrH,UAAU,2BACV+F,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,uBAC5BwC,OAAO,oBAGRyE,GACC,gBAACL,EAAA,EAAiB,CACd7E,OAAQkF,EACRpB,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,4BAC5BwC,OAAO,uBAIf,gBAACoE,EAAA,EAAiB,CACd7E,OAAQmF,EACRrB,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,uBAC5BwC,OAAO,gBACPuD,UAAW,gBAAChG,EAAA,EAAgB,CAACC,GAAG,uBAGjCkH,IAAmBI,GAAW,IAAIpE,KAAI,SAACuE,EAAQ7D,GAAU,OACxD,gBAAC,EAAoB,CACjB7B,OAAQ0F,EAAOC,iBACfnG,KAAMkG,EAAOlG,KACbsC,IAAKD,EACLiC,MAAO4B,EAAOE,YACdjB,UAAWc,EACXhF,OAAO,eAP6C,MAWzDuE,GACC,gBAAC,EAAoB,CACjBhF,OAAQgF,EACRlB,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,uBAC5BwC,OAAO,mBAIbqC,GAAoB,IAAI3B,KAAI,SAAC0E,EAAiBhE,GAAU,OACtD,gBAAC,EAAoB,CACjB7B,OAAQ6F,EAAgBC,KACxBtG,KAAMqG,EAAgBrG,KACtBsC,IAAKD,EACLiC,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,+BAC5B0G,UAAWa,EACXd,UAAWmB,EAAgBnB,UAC3BjE,OAAO,yBAR2C,MAYvD4E,GACC,gBAACR,EAAA,EAAiB,CACd7E,OAAQqF,EACRvB,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,uBAC5BwC,OAAO,mBAIbwE,GAAS,IAAI9D,KAAI,SAAC4E,EAAKlE,GAAU,OAC/B,gBAACgD,EAAA,EAAiB,CACd7E,OAAQ+F,EAAI/F,OACZ8B,IAAKD,EACLiC,MAAOiC,EAAI7F,KACXO,OAAO,cALoB,MAShC6E,GACC,gBAAC,EAAoB,CACjBtF,OAAQsF,EACRxB,MAAO,gBAAC9F,EAAA,EAAgB,CAACC,GAAG,2BAC5BwC,OAAO,sBAK3B,G,mFC9DA,SAAe,QA1C0E,SAAC,G,IACtFlB,EAAmB,sBACnBE,EAAiB,oBACjBH,EAAW,cACX0G,EAAQ,WAEFC,EAAuB1G,IAAwBE,EAC/CqE,EACF,gCACKmC,EACG,gBAAC,IAAgB,CAAChI,GAAG,8BAErB,gBAAC,IAAgB,CAACA,GAAG,oBAExB,YAAKsB,EAAmB,MAIjC,OACI,gCACI,gBAAC,IAAiB,CACdS,OAAQV,EACRvB,UAAU,wBACV+F,MAAOA,EACPC,YAAakC,EAAuB,SAAMvE,EAC1CjB,OAAO,eAEVwF,GAAwBD,GACrB,qBAAGjI,UAAU,4BAA2B,YAAW,8BAC/C,gBAAC,IAAgB,CACbyE,KAAM,CACFjE,MAAOyH,EAASE,gBAAgB5G,GAChCE,KAAMC,GAEVxB,GAAG,6BAM3B,G,kDClDe,SAASyE,EAAc,G,IAClC/D,EAAa,gBACbI,EAAY,eACZ+D,EAAgB,mBAChBC,EAAW,cAOX,OALwB,6BAAIpE,GAAe,GAAGI,GAAc,GAAIgE,GAAe,IAAG,GAAEoD,QAChF,SAAC5H,EAAOM,GAAS,OAACN,EAASM,EAAKkB,QAAf,GACjB,GAGqB+C,EAAiBlB,MAC9C,C,kDCJA,SAAe,E,SAAA,IAN4B,WAAM,OAC7C,uBAAKlC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,iDAFiC,G,kDCIjD,QAN+C,WAAM,OACjD,uBAAKJ,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,0aAFqC,C","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n        {children}\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems items={nonBundledLineItems} />\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummarySubtotals {...orderSummarySubtotalsProps} />\r\n                {additionalLineItems}\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\r\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronUp: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronUp);\r\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        name: item.name,\r\n    };\r\n}\r\n\r\nexport default mapFromCustom;\r\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\r\n    if (!item.imageUrl) {\r\n        return;\r\n    }\r\n\r\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\r\n}\r\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        productOptions: [\r\n            ...(item.options || []).map((option) => ({\r\n                testId: 'cart-item-product-option',\r\n                content: `${option.name} ${option.value}`,\r\n            })),\r\n            getDigitalItemDescription(item),\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\r\n    if (!item.downloadPageUrl) {\r\n        return {\r\n            testId: 'cart-item-digital-product',\r\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\r\n        };\r\n    }\r\n\r\n    return {\r\n        testId: 'cart-item-digital-product-download',\r\n        content: (\r\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <TranslatedString id=\"cart.downloads_action\" />\r\n            </a>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromDigital;\r\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { IconGiftCertificate } from '../ui/icon';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: 1,\r\n        amount: item.amount,\r\n        name: item.name,\r\n        image: (\r\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\r\n                <IconGiftCertificate />\r\n            </span>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromGiftCertificate;\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\r\n        productOptions: (item.options || []).map((option) => ({\r\n            testId: 'cart-item-product-option',\r\n            content: `${option.name} ${option.value}`,\r\n        })),\r\n    };\r\n}\r\n\r\nexport default mapFromPhysical;\r\n","import classNames from 'classnames';\r\nimport { isNumber } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryItemProps {\r\n    id: string | number;\r\n    amount: number;\r\n    quantity: number;\r\n    name: string;\r\n    amountAfterDiscount?: number;\r\n    image?: ReactNode;\r\n    description?: ReactNode;\r\n    productOptions?: OrderSummaryItemOption[];\r\n}\r\n\r\nexport interface OrderSummaryItemOption {\r\n    testId: string;\r\n    content: ReactNode;\r\n}\r\n\r\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\r\n    amount,\r\n    amountAfterDiscount,\r\n    image,\r\n    name,\r\n    productOptions,\r\n    quantity,\r\n    description,\r\n}) => (\r\n    <div className=\"product\" data-test=\"cart-item\">\r\n        <figure className=\"product-column product-figure\">{image}</figure>\r\n\r\n        <div className=\"product-column product-body\">\r\n            <h4\r\n                className=\"product-title optimizedCheckout-contentPrimary\"\r\n                data-test=\"cart-item-product-title\"\r\n            >\r\n                {`${quantity} x ${name}`}\r\n            </h4>\r\n            {productOptions && productOptions.length > 0 && (\r\n                <ul\r\n                    className=\"product-options optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-options\"\r\n                >\r\n                    {productOptions.map((option, index) => (\r\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\r\n                            {option.content}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {description && (\r\n                <div\r\n                    className=\"product-description optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-description\"\r\n                >\r\n                    {description}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n        <div className=\"product-column product-actions\">\r\n            <div\r\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\r\n                    'product-price--beforeDiscount':\r\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\r\n                })}\r\n                data-test=\"cart-item-product-price\"\r\n            >\r\n                <ShopperCurrency amount={amount} />\r\n            </div>\r\n\r\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\r\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\r\n                    <ShopperCurrency amount={amountAfterDiscount} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default memo(OrderSummaryItem);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport mapFromCustom from './mapFromCustom';\r\nimport mapFromDigital from './mapFromDigital';\r\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\r\nimport mapFromPhysical from './mapFromPhysical';\r\nimport OrderSummaryItem from './OrderSummaryItem';\r\n\r\nconst COLLAPSED_ITEMS_LIMIT = 4;\r\n\r\nexport interface OrderSummaryItemsProps {\r\n    items: LineItemMap;\r\n}\r\n\r\ninterface OrderSummaryItemsState {\r\n    isExpanded: boolean;\r\n}\r\n\r\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\r\n    constructor(props: OrderSummaryItemsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n        };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { items } = this.props;\r\n        const { isExpanded } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <h3\r\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\r\n                    data-test=\"cart-count-total\"\r\n                >\r\n                    <TranslatedString\r\n                        data={{ count: getItemsCount(items) }}\r\n                        id=\"cart.item_count_text\"\r\n                    />\r\n                </h3>\r\n\r\n                <ul aria-live=\"polite\" className=\"productList\">\r\n                    {[\r\n                        ...items.physicalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromPhysical),\r\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\r\n                        ...items.digitalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromDigital),\r\n                        ...(items.customItems || []).map(mapFromCustom),\r\n                    ]\r\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\r\n                        .map((summaryItemProps) => (\r\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\r\n                                <OrderSummaryItem {...summaryItemProps} />\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n\r\n                {this.renderActions()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderActions(): ReactNode {\r\n        const { isExpanded } = this.state;\r\n\r\n        if (this.getLineItemCount() < 5) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"cart-actions\">\r\n                <button\r\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\r\n                    onClick={this.handleToggle}\r\n                    type=\"button\"\r\n                >\r\n                    {isExpanded ? (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_less_action\" />\r\n                            <IconChevronUp />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_all_action\" />\r\n                            <IconChevronDown />\r\n                        </>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getLineItemCount(): number {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            (items.customItems || []).length +\r\n            items.physicalItems.length +\r\n            items.digitalItems.length +\r\n            items.giftCertificates.length\r\n        );\r\n    }\r\n\r\n    private handleToggle: () => void = () => {\r\n        const { isExpanded } = this.state;\r\n\r\n        this.setState({ isExpanded: !isExpanded });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryItems;\r\n","import classNames from 'classnames';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryPriceProps {\r\n    label: ReactNode;\r\n    amount?: number | null;\r\n    zeroLabel?: ReactNode;\r\n    className?: string;\r\n    testId?: string;\r\n    currencyCode?: string;\r\n    superscript?: string;\r\n    actionLabel?: ReactNode;\r\n    onActionTriggered?(): void;\r\n}\r\n\r\nexport interface OrderSummaryPriceState {\r\n    highlight: boolean;\r\n    previousAmount?: number;\r\n}\r\n\r\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\r\n    const notYetSetSymbol = '--';\r\n\r\n    if (typeof amount === 'undefined' || amount === null) {\r\n        return notYetSetSymbol;\r\n    }\r\n\r\n    if (zeroLabel && amount === 0) {\r\n        return zeroLabel;\r\n    }\r\n\r\n    return amount;\r\n}\r\n\r\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\r\n    return typeof displayValue === 'number';\r\n}\r\n\r\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\r\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\r\n        return {\r\n            highlight: props.amount !== state.previousAmount,\r\n            previousAmount: props.amount,\r\n        };\r\n    }\r\n\r\n    state = {\r\n        highlight: false,\r\n        previousAmount: 0,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const {\r\n            amount,\r\n            children,\r\n            className,\r\n            currencyCode,\r\n            label,\r\n            superscript,\r\n            testId,\r\n            zeroLabel,\r\n        } = this.props;\r\n\r\n        const { highlight } = this.state;\r\n        const displayValue = getDisplayValue(amount, zeroLabel);\r\n\r\n        return (\r\n            <div data-test={testId}>\r\n                <CSSTransition\r\n                    addEndListener={this.handleTransitionEnd}\r\n                    classNames=\"changeHighlight\"\r\n                    in={highlight}\r\n                    timeout={{}}\r\n                >\r\n                    <div\r\n                        aria-live=\"polite\"\r\n                        className={classNames(\r\n                            'cart-priceItem',\r\n                            'optimizedCheckout-contentPrimary',\r\n                            className,\r\n                        )}\r\n                    >\r\n                        <span className=\"cart-priceItem-label\">\r\n                            <span data-test=\"cart-price-label\">\r\n                                {label}\r\n                                {'  '}\r\n                            </span>\r\n                            {currencyCode && (\r\n                                <span className=\"cart-priceItem-currencyCode\">\r\n                                    {`(${currencyCode}) `}\r\n                                </span>\r\n                            )}\r\n                        </span>\r\n\r\n                        <span className=\"cart-priceItem-value\">\r\n                            <span data-test=\"cart-price-value\">\r\n                                {isNumberValue(displayValue) ? (\r\n                                    <ShopperCurrency amount={displayValue} />\r\n                                ) : (\r\n                                    displayValue\r\n                                )}\r\n                            </span>\r\n\r\n                            {superscript && (\r\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\r\n                            )}\r\n                        </span>\r\n\r\n                        {children}\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        const { previousAmount } = this.state;\r\n\r\n        node.addEventListener('animationend', ({ target }) => {\r\n            if (target === node) {\r\n                this.setState({\r\n                    highlight: false,\r\n                    previousAmount,\r\n                });\r\n                done();\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryPrice;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\r\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default OrderSummarySection;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\r\n    remaining?: number;\r\n    code?: string;\r\n    onRemoved?(code: string): void;\r\n}\r\n\r\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\r\n    code,\r\n    remaining,\r\n    amount,\r\n    onRemoved,\r\n    ...rest\r\n}) => (\r\n    <OrderSummaryPrice\r\n        {...rest}\r\n        {...(onRemoved && {\r\n            onActionTriggered: () => code && onRemoved(code),\r\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\r\n        })}\r\n        amount={-1 * (amount || 0)}\r\n    >\r\n        {!!remaining && remaining > 0 && (\r\n            <span\r\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\r\n                data-test=\"cart-price-remaining\"\r\n            >\r\n                <TranslatedString id=\"cart.remaining_text\" />\r\n                {': '}\r\n                <ShopperCurrency amount={remaining} />\r\n            </span>\r\n        )}\r\n    </OrderSummaryPrice>\r\n);\r\n\r\nexport default memo(OrderSummaryDiscount);\r\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummarySubtotalsProps {\r\n    coupons: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    discountAmount?: number;\r\n    taxes?: Tax[];\r\n    giftWrappingAmount?: number;\r\n    shippingAmount?: number;\r\n    handlingAmount?: number;\r\n    storeCreditAmount?: number;\r\n    subtotalAmount: number;\r\n    onRemovedGiftCertificate?(code: string): void;\r\n    onRemovedCoupon?(code: string): void;\r\n}\r\n\r\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\r\n    discountAmount,\r\n    giftCertificates,\r\n    taxes,\r\n    giftWrappingAmount,\r\n    shippingAmount,\r\n    subtotalAmount,\r\n    handlingAmount,\r\n    storeCreditAmount,\r\n    coupons,\r\n    onRemovedGiftCertificate,\r\n    onRemovedCoupon,\r\n}) => {\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={subtotalAmount}\r\n                className=\"cart-priceItem--subtotal\"\r\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\r\n                testId=\"cart-subtotal\"\r\n            />\r\n\r\n            {!!giftWrappingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={giftWrappingAmount}\r\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\r\n                    testId=\"cart-gift-wrapping\"\r\n                />\r\n            )}\r\n\r\n            <OrderSummaryPrice\r\n                amount={shippingAmount}\r\n                label={<TranslatedString id=\"cart.shipping_text\" />}\r\n                testId=\"cart-shipping\"\r\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\r\n            />\r\n\r\n            {!!shippingAmount && (coupons || []).map((coupon, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={coupon.discountedAmount}\r\n                    code={coupon.code}\r\n                    key={index}\r\n                    label={coupon.displayName}\r\n                    onRemoved={onRemovedCoupon}\r\n                    testId=\"cart-coupon\"\r\n                />\r\n            ))}\r\n\r\n            {!!discountAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={discountAmount}\r\n                    label={<TranslatedString id=\"cart.discount_text\" />}\r\n                    testId=\"cart-discount\"\r\n                />\r\n            )}\r\n\r\n            {(giftCertificates || []).map((giftCertificate, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={giftCertificate.used}\r\n                    code={giftCertificate.code}\r\n                    key={index}\r\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\r\n                    onRemoved={onRemovedGiftCertificate}\r\n                    remaining={giftCertificate.remaining}\r\n                    testId=\"cart-gift-certificate\"\r\n                />\r\n            ))}\r\n\r\n            {!!handlingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={handlingAmount}\r\n                    label={<TranslatedString id=\"cart.handling_text\" />}\r\n                    testId=\"cart-handling\"\r\n                />\r\n            )}\r\n\r\n            {(taxes || []).map((tax, index) => (\r\n                <OrderSummaryPrice\r\n                    amount={tax.amount}\r\n                    key={index}\r\n                    label={tax.name}\r\n                    testId=\"cart-taxes\"\r\n                />\r\n            ))}\r\n\r\n            {!!storeCreditAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={storeCreditAmount}\r\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\r\n                    testId=\"cart-store-credit\"\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(OrderSummarySubtotals);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '../locale';\r\n\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryTotalProps {\r\n    orderAmount: number;\r\n    shopperCurrencyCode: string;\r\n    storeCurrencyCode: string;\r\n}\r\n\r\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\r\n    shopperCurrencyCode,\r\n    storeCurrencyCode,\r\n    orderAmount,\r\n    currency,\r\n}) => {\r\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\r\n    const label = (\r\n        <>\r\n            {hasDifferentCurrency ? (\r\n                <TranslatedString id=\"cart.estimated_total_text\" />\r\n            ) : (\r\n                <TranslatedString id=\"cart.total_text\" />\r\n            )}\r\n            {` (${shopperCurrencyCode})`}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={orderAmount}\r\n                className=\"cart-priceItem--total\"\r\n                label={label}\r\n                superscript={hasDifferentCurrency ? '*' : undefined}\r\n                testId=\"cart-total\"\r\n            />\r\n            {hasDifferentCurrency && currency && (\r\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\r\n                    <TranslatedString\r\n                        data={{\r\n                            total: currency.toStoreCurrency(orderAmount),\r\n                            code: storeCurrencyCode,\r\n                        }}\r\n                        id=\"cart.billed_amount_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withCurrency(OrderSummaryTotal);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\r\n        (total, item) => (total += item.quantity),\r\n        0,\r\n    );\r\n\r\n    return totalItemsCount + giftCertificates.length;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronDown: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronDown);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst IconGiftCertificate: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default IconGiftCertificate;\r\n"],"names":["children","className","TranslatedString","id","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","physicalItems","filter","item","parentId","digitalItems","removeBundledItems","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","height","viewBox","width","xmlns","d","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","undefined","memo","length","index","key","isNumber","ShopperCurrency","props","handleToggle","isExpanded","state","setState","render","this","data","count","getItemsCount","slice","sort","variantId","giftCertificates","customItems","summaryItemProps","renderActions","getLineItemCount","onClick","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","currencyCode","label","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","discountAmount","taxes","giftWrappingAmount","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","discountedAmount","displayName","giftCertificate","used","tax","currency","hasDifferentCurrency","toStoreCurrency","reduce"],"sourceRoot":""}