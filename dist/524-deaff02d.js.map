{"version":3,"file":"524-deaff02d.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx"],"sourcesContent":["import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo, } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { withLanguage, WithLanguageProps } from '../locale';\n\r\nimport { AppliedRedeemablesProps } from './AppliedRedeemables';\r\n\r\nexport interface RedeemableFormValues {\r\n    redeemableCode: string;\r\n}\r\n\r\nexport type ReedemableChildrenProps = Pick<\r\n    RedeemableProps,\r\n    | 'onRemovedCoupon'\r\n    | 'onRemovedGiftCertificate'\r\n    | 'isRemovingGiftCertificate'\r\n    | 'isRemovingCoupon'\r\n    | 'coupons'\r\n    | 'giftCertificates'\r\n>;\r\n\r\nexport type RedeemableProps = {\r\n    appliedRedeemableError?: RequestError;\r\n    isApplyingRedeemable?: boolean;\r\n    isRemovingRedeemable?: boolean;\r\n    removedRedeemableError?: RequestError;\r\n    showAppliedRedeemables?: boolean;\r\n    shouldCollapseCouponCode?: boolean;\r\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\r\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\r\n    clearError(error: Error): void;\r\n} & AppliedRedeemablesProps;\r\n\r\nconst Redeemable: FunctionComponent<\r\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\r\n> = (/* { ...formProps } */) => {\r\n\r\n    // if(formProps?.coupons?.length === 0){\r\n    //     (async () => {\r\n    //         await formProps.applyCoupon('SHIPPINGTEST');\r\n    //     })()\r\n    // }\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default withLanguage(\r\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\r\n        mapPropsToValues() {\r\n            return {\r\n                redeemableCode: '',\r\n            };\r\n        },\r\n\r\n        async handleSubmit(\r\n            { redeemableCode },\r\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\r\n        ) {\r\n            const code = redeemableCode.trim();\r\n\r\n            try {\r\n                await applyGiftCertificate(code);\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    clearError(error);\r\n                }\r\n\r\n                applyCoupon(code);\r\n            }\r\n        },\r\n\r\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\r\n            return object({\r\n                redeemableCode: string().required(\r\n                    language.translate('redeemable.code_required_error'),\r\n                ),\r\n            });\r\n        },\r\n    })(memo(Redeemable)),\r\n);\r\n","import { CheckoutContextProps } from '../checkout';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToRedeemableProps from './mapToRedeemableProps';\r\n\r\nexport default function mapToCartSummaryProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutCartSummaryProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getConfig, getCustomer, getCheckout },\r\n        },\r\n    } = context;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n    const customer = getCustomer();\r\n    const redeemableProps = mapToRedeemableProps(context);\r\n\r\n    if (!checkout || !config || !redeemableProps || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const { isStoreCreditApplied, grandTotal } = checkout;\r\n    const { storeCredit } = customer;\r\n\r\n    return {\r\n        checkout,\r\n        shopperCurrency: config.shopperCurrency,\r\n        cartUrl: config.links.cartLink,\r\n        storeCurrency: config.currency,\r\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\r\n        ...redeemableProps,\r\n    };\r\n}\r\n","import { CheckoutContextProps } from '../checkout';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { RedeemableProps } from './Redeemable';\r\n\r\nexport default function mapToRedeemableProps(\r\n    context: CheckoutContextProps,\r\n): RedeemableProps | null {\r\n    const {\r\n        checkoutService,\r\n        checkoutState: {\r\n            data: { getConfig, getCoupons, getGiftCertificates },\r\n            statuses: {\r\n                isApplyingCoupon,\r\n                isApplyingGiftCertificate,\r\n                isRemovingCoupon,\r\n                isRemovingGiftCertificate,\r\n            },\r\n            errors: {\r\n                getApplyCouponError,\r\n                getApplyGiftCertificateError,\r\n                getRemoveCouponError,\r\n                getRemoveGiftCertificateError,\r\n            },\r\n        },\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n\r\n    if (!config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\r\n        applyCoupon: checkoutService.applyCoupon,\r\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\r\n        clearError: checkoutService.clearError,\r\n        coupons: getCoupons() || EMPTY_ARRAY,\r\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\r\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\r\n        isRemovingCoupon: isRemovingCoupon(),\r\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\r\n        onRemovedCoupon: checkoutService.removeCoupon,\r\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\r\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\r\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\r\n    };\r\n}\r\n","import React, { ComponentType, FunctionComponent } from 'react';\r\n\r\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport Redeemable from './Redeemable';\r\n\r\nexport default function withRedeemable(\r\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\r\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\r\n    return (props) => {\r\n        const {\r\n            checkout,\r\n            storeCurrency,\r\n            shopperCurrency,\r\n            headerLink,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            storeCreditAmount,\r\n            ...redeemableProps\r\n        } = props;\r\n\r\n        return (\r\n            <OriginalComponent\r\n                {...mapToOrderSummarySubtotalsProps(checkout)}\r\n                additionalLineItems={\r\n                    <Redeemable\r\n                        {...{\r\n                            ...redeemableProps,\r\n                            onRemovedCoupon,\r\n                            onRemovedGiftCertificate,\r\n                        }}\r\n                    />\r\n                }\r\n                headerLink={headerLink}\r\n                lineItems={checkout.cart.lineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                total={checkout.outstandingBalance}\r\n            />\r\n        );\r\n    };\r\n}\r\n","import { Checkout } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummarySubtotalsProps } from '../order';\r\nimport { hasSelectedShippingOptions } from '../shipping';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    subtotal,\r\n    cart: { discountAmount },\r\n    giftCertificates,\r\n    consignments,\r\n    handlingCostTotal,\r\n    shippingCostBeforeDiscount,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n}: Checkout): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: subtotal,\r\n        discountAmount,\r\n        giftCertificates,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        shippingAmount: hasSelectedShippingOptions(consignments)\r\n            ? shippingCostBeforeDiscount\r\n            : undefined,\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        taxes,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronUp: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronUp);\r\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        name: item.name,\r\n    };\r\n}\r\n\r\nexport default mapFromCustom;\r\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\r\n    if (!item.imageUrl) {\r\n        return;\r\n    }\r\n\r\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\r\n}\r\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        productOptions: [\r\n            ...(item.options || []).map((option) => ({\r\n                testId: 'cart-item-product-option',\r\n                content: `${option.name} ${option.value}`,\r\n            })),\r\n            getDigitalItemDescription(item),\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\r\n    if (!item.downloadPageUrl) {\r\n        return {\r\n            testId: 'cart-item-digital-product',\r\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\r\n        };\r\n    }\r\n\r\n    return {\r\n        testId: 'cart-item-digital-product-download',\r\n        content: (\r\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <TranslatedString id=\"cart.downloads_action\" />\r\n            </a>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromDigital;\r\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { IconGiftCertificate } from '../ui/icon';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: 1,\r\n        amount: item.amount,\r\n        name: item.name,\r\n        image: (\r\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\r\n                <IconGiftCertificate />\r\n            </span>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromGiftCertificate;\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\r\n        productOptions: (item.options || []).map((option) => ({\r\n            testId: 'cart-item-product-option',\r\n            content: `${option.name} ${option.value}`,\r\n        })),\r\n    };\r\n}\r\n\r\nexport default mapFromPhysical;\r\n","import classNames from 'classnames';\r\nimport { isNumber } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryItemProps {\r\n    id: string | number;\r\n    amount: number;\r\n    quantity: number;\r\n    name: string;\r\n    amountAfterDiscount?: number;\r\n    image?: ReactNode;\r\n    description?: ReactNode;\r\n    productOptions?: OrderSummaryItemOption[];\r\n}\r\n\r\nexport interface OrderSummaryItemOption {\r\n    testId: string;\r\n    content: ReactNode;\r\n}\r\n\r\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\r\n    amount,\r\n    amountAfterDiscount,\r\n    image,\r\n    name,\r\n    productOptions,\r\n    quantity,\r\n    description,\r\n}) => (\r\n    <div className=\"product\" data-test=\"cart-item\">\r\n        <figure className=\"product-column product-figure\">{image}</figure>\r\n\r\n        <div className=\"product-column product-body\">\r\n            <h4\r\n                className=\"product-title optimizedCheckout-contentPrimary\"\r\n                data-test=\"cart-item-product-title\"\r\n            >\r\n                {`${quantity} x ${name}`}\r\n            </h4>\r\n            {productOptions && productOptions.length > 0 && (\r\n                <ul\r\n                    className=\"product-options optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-options\"\r\n                >\r\n                    {productOptions.map((option, index) => (\r\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\r\n                            {option.content}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {description && (\r\n                <div\r\n                    className=\"product-description optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-description\"\r\n                >\r\n                    {description}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n        <div className=\"product-column product-actions\">\r\n            <div\r\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\r\n                    'product-price--beforeDiscount':\r\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\r\n                })}\r\n                data-test=\"cart-item-product-price\"\r\n            >\r\n                <ShopperCurrency amount={amount} />\r\n            </div>\r\n\r\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\r\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\r\n                    <ShopperCurrency amount={amountAfterDiscount} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default memo(OrderSummaryItem);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport mapFromCustom from './mapFromCustom';\r\nimport mapFromDigital from './mapFromDigital';\r\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\r\nimport mapFromPhysical from './mapFromPhysical';\r\nimport OrderSummaryItem from './OrderSummaryItem';\r\n\r\nconst COLLAPSED_ITEMS_LIMIT = 4;\r\n\r\nexport interface OrderSummaryItemsProps {\r\n    items: LineItemMap;\r\n}\r\n\r\ninterface OrderSummaryItemsState {\r\n    isExpanded: boolean;\r\n}\r\n\r\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\r\n    constructor(props: OrderSummaryItemsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n        };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { items } = this.props;\r\n        const { isExpanded } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <h3\r\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\r\n                    data-test=\"cart-count-total\"\r\n                >\r\n                    <TranslatedString\r\n                        data={{ count: getItemsCount(items) }}\r\n                        id=\"cart.item_count_text\"\r\n                    />\r\n                </h3>\r\n\r\n                <ul aria-live=\"polite\" className=\"productList\">\r\n                    {[\r\n                        ...items.physicalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromPhysical),\r\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\r\n                        ...items.digitalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromDigital),\r\n                        ...(items.customItems || []).map(mapFromCustom),\r\n                    ]\r\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\r\n                        .map((summaryItemProps) => (\r\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\r\n                                <OrderSummaryItem {...summaryItemProps} />\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n\r\n                {this.renderActions()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderActions(): ReactNode {\r\n        const { isExpanded } = this.state;\r\n\r\n        if (this.getLineItemCount() < 5) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"cart-actions\">\r\n                <button\r\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\r\n                    onClick={this.handleToggle}\r\n                    type=\"button\"\r\n                >\r\n                    {isExpanded ? (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_less_action\" />\r\n                            <IconChevronUp />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_all_action\" />\r\n                            <IconChevronDown />\r\n                        </>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getLineItemCount(): number {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            (items.customItems || []).length +\r\n            items.physicalItems.length +\r\n            items.digitalItems.length +\r\n            items.giftCertificates.length\r\n        );\r\n    }\r\n\r\n    private handleToggle: () => void = () => {\r\n        const { isExpanded } = this.state;\r\n\r\n        this.setState({ isExpanded: !isExpanded });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryItems;\r\n","import classNames from 'classnames';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryPriceProps {\r\n    label: ReactNode;\r\n    amount?: number | null;\r\n    zeroLabel?: ReactNode;\r\n    className?: string;\r\n    testId?: string;\r\n    currencyCode?: string;\r\n    superscript?: string;\r\n    actionLabel?: ReactNode;\r\n    onActionTriggered?(): void;\r\n}\r\n\r\nexport interface OrderSummaryPriceState {\r\n    highlight: boolean;\r\n    previousAmount?: number;\r\n}\r\n\r\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\r\n    const notYetSetSymbol = '--';\r\n\r\n    if (typeof amount === 'undefined' || amount === null) {\r\n        return notYetSetSymbol;\r\n    }\r\n\r\n    if (zeroLabel && amount === 0) {\r\n        return zeroLabel;\r\n    }\r\n\r\n    return amount;\r\n}\r\n\r\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\r\n    return typeof displayValue === 'number';\r\n}\r\n\r\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\r\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\r\n        return {\r\n            highlight: props.amount !== state.previousAmount,\r\n            previousAmount: props.amount,\r\n        };\r\n    }\r\n\r\n    state = {\r\n        highlight: false,\r\n        previousAmount: 0,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const {\r\n            amount,\r\n            children,\r\n            className,\r\n            currencyCode,\r\n            label,\r\n            superscript,\r\n            testId,\r\n            zeroLabel,\r\n        } = this.props;\r\n\r\n        const { highlight } = this.state;\r\n        const displayValue = getDisplayValue(amount, zeroLabel);\r\n\r\n        return (\r\n            <div data-test={testId}>\r\n                <CSSTransition\r\n                    addEndListener={this.handleTransitionEnd}\r\n                    classNames=\"changeHighlight\"\r\n                    in={highlight}\r\n                    timeout={{}}\r\n                >\r\n                    <div\r\n                        aria-live=\"polite\"\r\n                        className={classNames(\r\n                            'cart-priceItem',\r\n                            'optimizedCheckout-contentPrimary',\r\n                            className,\r\n                        )}\r\n                    >\r\n                        <span className=\"cart-priceItem-label\">\r\n                            <span data-test=\"cart-price-label\">\r\n                                {label}\r\n                                {'  '}\r\n                            </span>\r\n                            {currencyCode && (\r\n                                <span className=\"cart-priceItem-currencyCode\">\r\n                                    {`(${currencyCode}) `}\r\n                                </span>\r\n                            )}\r\n                        </span>\r\n\r\n                        <span className=\"cart-priceItem-value\">\r\n                            <span data-test=\"cart-price-value\">\r\n                                {isNumberValue(displayValue) ? (\r\n                                    <ShopperCurrency amount={displayValue} />\r\n                                ) : (\r\n                                    displayValue\r\n                                )}\r\n                            </span>\r\n\r\n                            {superscript && (\r\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\r\n                            )}\r\n                        </span>\r\n\r\n                        {children}\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        const { previousAmount } = this.state;\r\n\r\n        node.addEventListener('animationend', ({ target }) => {\r\n            if (target === node) {\r\n                this.setState({\r\n                    highlight: false,\r\n                    previousAmount,\r\n                });\r\n                done();\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryPrice;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\r\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default OrderSummarySection;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\r\n    remaining?: number;\r\n    code?: string;\r\n    onRemoved?(code: string): void;\r\n}\r\n\r\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\r\n    code,\r\n    remaining,\r\n    amount,\r\n    onRemoved,\r\n    ...rest\r\n}) => (\r\n    <OrderSummaryPrice\r\n        {...rest}\r\n        {...(onRemoved && {\r\n            onActionTriggered: () => code && onRemoved(code),\r\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\r\n        })}\r\n        amount={-1 * (amount || 0)}\r\n    >\r\n        {!!remaining && remaining > 0 && (\r\n            <span\r\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\r\n                data-test=\"cart-price-remaining\"\r\n            >\r\n                <TranslatedString id=\"cart.remaining_text\" />\r\n                {': '}\r\n                <ShopperCurrency amount={remaining} />\r\n            </span>\r\n        )}\r\n    </OrderSummaryPrice>\r\n);\r\n\r\nexport default memo(OrderSummaryDiscount);\r\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummarySubtotalsProps {\r\n    coupons: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    discountAmount?: number;\r\n    taxes?: Tax[];\r\n    giftWrappingAmount?: number;\r\n    shippingAmount?: number;\r\n    handlingAmount?: number;\r\n    storeCreditAmount?: number;\r\n    subtotalAmount: number;\r\n    onRemovedGiftCertificate?(code: string): void;\r\n    onRemovedCoupon?(code: string): void;\r\n}\r\n\r\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\r\n    discountAmount,\r\n    giftCertificates,\r\n    taxes,\r\n    giftWrappingAmount,\r\n    shippingAmount,\r\n    subtotalAmount,\r\n    handlingAmount,\r\n    storeCreditAmount,\r\n    coupons,\r\n    onRemovedGiftCertificate,\r\n    onRemovedCoupon,\r\n}) => {\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={subtotalAmount}\r\n                className=\"cart-priceItem--subtotal\"\r\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\r\n                testId=\"cart-subtotal\"\r\n            />\r\n\r\n            {!!giftWrappingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={giftWrappingAmount}\r\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\r\n                    testId=\"cart-gift-wrapping\"\r\n                />\r\n            )}\r\n\r\n            <OrderSummaryPrice\r\n                amount={shippingAmount}\r\n                label={<TranslatedString id=\"cart.shipping_text\" />}\r\n                testId=\"cart-shipping\"\r\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\r\n            />\r\n\r\n            {!!shippingAmount && (coupons || []).map((coupon, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={coupon.discountedAmount}\r\n                    code={coupon.code}\r\n                    key={index}\r\n                    label={coupon.displayName}\r\n                    onRemoved={onRemovedCoupon}\r\n                    testId=\"cart-coupon\"\r\n                />\r\n            ))}\r\n\r\n            {!!discountAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={discountAmount}\r\n                    label={<TranslatedString id=\"cart.discount_text\" />}\r\n                    testId=\"cart-discount\"\r\n                />\r\n            )}\r\n\r\n            {(giftCertificates || []).map((giftCertificate, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={giftCertificate.used}\r\n                    code={giftCertificate.code}\r\n                    key={index}\r\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\r\n                    onRemoved={onRemovedGiftCertificate}\r\n                    remaining={giftCertificate.remaining}\r\n                    testId=\"cart-gift-certificate\"\r\n                />\r\n            ))}\r\n\r\n            {!!handlingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={handlingAmount}\r\n                    label={<TranslatedString id=\"cart.handling_text\" />}\r\n                    testId=\"cart-handling\"\r\n                />\r\n            )}\r\n\r\n            {(taxes || []).map((tax, index) => (\r\n                <OrderSummaryPrice\r\n                    amount={tax.amount}\r\n                    key={index}\r\n                    label={tax.name}\r\n                    testId=\"cart-taxes\"\r\n                />\r\n            ))}\r\n\r\n            {!!storeCreditAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={storeCreditAmount}\r\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\r\n                    testId=\"cart-store-credit\"\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(OrderSummarySubtotals);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '../locale';\r\n\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryTotalProps {\r\n    orderAmount: number;\r\n    shopperCurrencyCode: string;\r\n    storeCurrencyCode: string;\r\n}\r\n\r\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\r\n    shopperCurrencyCode,\r\n    storeCurrencyCode,\r\n    orderAmount,\r\n    currency,\r\n}) => {\r\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\r\n    const label = (\r\n        <>\r\n            {hasDifferentCurrency ? (\r\n                <TranslatedString id=\"cart.estimated_total_text\" />\r\n            ) : (\r\n                <TranslatedString id=\"cart.total_text\" />\r\n            )}\r\n            {` (${shopperCurrencyCode})`}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={orderAmount}\r\n                className=\"cart-priceItem--total\"\r\n                label={label}\r\n                superscript={hasDifferentCurrency ? '*' : undefined}\r\n                testId=\"cart-total\"\r\n            />\r\n            {hasDifferentCurrency && currency && (\r\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\r\n                    <TranslatedString\r\n                        data={{\r\n                            total: currency.toStoreCurrency(orderAmount),\r\n                            code: storeCurrencyCode,\r\n                        }}\r\n                        id=\"cart.billed_amount_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withCurrency(OrderSummaryTotal);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\r\n        (total, item) => (total += item.quantity),\r\n        0,\r\n    );\r\n\r\n    return totalItemsCount + giftCertificates.length;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronDown: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronDown);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst IconGiftCertificate: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default IconGiftCertificate;\r\n"],"names":["withFormik","mapPropsToValues","redeemableCode","handleSubmit","props","applyCoupon","applyGiftCertificate","clearError","code","trim","Error","validationSchema","language","required","translate","memo","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","shopperCurrency","cartUrl","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","isRemovingCoupon","isRemovingGiftCertificate","errors","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","appliedRedeemableError","coupons","giftCertificates","isApplyingRedeemable","onRemovedCoupon","removeCoupon","onRemovedGiftCertificate","removeGiftCertificate","removedRedeemableError","shouldCollapseCouponCode","checkoutSettings","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","discountAmount","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","headerLink","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","additionalLineItems","Redeemable","lineItems","cart","total","outstandingBalance","height","viewBox","width","xmlns","d","item","id","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","TranslatedString","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","className","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","length","index","key","isNumber","ShopperCurrency","handleToggle","isExpanded","state","setState","render","items","this","count","getItemsCount","physicalItems","slice","sort","variantId","digitalItems","customItems","summaryItemProps","renderActions","getLineItemCount","onClick","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","children","currencyCode","label","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","coupon","discountedAmount","displayName","giftCertificate","used","tax","shopperCurrencyCode","storeCurrencyCode","orderAmount","hasDifferentCurrency","toStoreCurrency","reduce"],"sourceRoot":""}