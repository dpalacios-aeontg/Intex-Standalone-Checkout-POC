{"version":3,"file":"order-summary-drawer-045af387.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getLineItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    return (\r\n        physicalItems.length +\r\n        digitalItems.length +\r\n        giftCertificates.length +\r\n        (customItems || []).length\r\n    );\r\n}\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { TranslatedString } from '../locale';\r\nimport { IconClose } from '../ui/icon';\r\nimport { Modal, ModalHeader } from '../ui/modal';\r\n\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    additionalLineItems?: ReactNode;\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    isOpen: boolean;\r\n    headerLink?: ReactNode;\r\n    onRequestClose?(): void;\r\n    onAfterOpen?(): void;\r\n}\r\n\r\nconst OrderSummaryModal: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    children,\r\n    onRequestClose,\r\n    onAfterOpen,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    isOpen,\r\n    headerLink,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => (\r\n    <Modal\r\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\r\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\r\n        header={renderHeader({ headerLink, onRequestClose })}\r\n        isOpen={isOpen}\r\n        onAfterOpen={onAfterOpen}\r\n        onRequestClose={onRequestClose}\r\n    >\r\n        <OrderSummarySection>\r\n            <OrderSummaryItems items={lineItems} />\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummarySubtotals {...orderSummarySubtotalsProps} />\r\n            {additionalLineItems}\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummaryTotal\r\n                orderAmount={total}\r\n                shopperCurrencyCode={shopperCurrency.code}\r\n                storeCurrencyCode={storeCurrency.code}\r\n            />\r\n        </OrderSummarySection>\r\n    </Modal>\r\n);\r\n\r\nconst renderHeader: FunctionComponent<{\r\n    headerLink: ReactNode;\r\n    onRequestClose?(): void;\r\n}> = ({ onRequestClose, headerLink }) => (\r\n    <>\r\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"common.close_action\" />\r\n            </span>\r\n            <IconClose />\r\n        </a>\r\n        <ModalHeader additionalClassName=\"cart-modal-title\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </ModalHeader>\r\n\r\n        {headerLink}\r\n    </>\r\n);\r\n\r\nexport default OrderSummaryModal;\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\nimport { IconGiftCertificate } from '../ui/icon';\r\nimport { ModalTrigger } from '../ui/modal';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport getLineItemsCount from './getLineItemsCount';\r\nimport OrderSummaryModal from './OrderSummaryModal';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummaryDrawer: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    coupons,\r\n    discountAmount,\r\n    giftCertificates,\r\n    handlingAmount,\r\n    headerLink,\r\n    lineItems,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n    shippingAmount,\r\n    shopperCurrency,\r\n    storeCreditAmount,\r\n    giftWrappingAmount,\r\n    storeCurrency,\r\n    subtotalAmount,\r\n    taxes,\r\n    total,\r\n}) => {\r\n    const renderModal = useCallback(\r\n        (props) => (\r\n            <OrderSummaryModal\r\n                {...props}\r\n                additionalLineItems={additionalLineItems}\r\n                coupons={coupons}\r\n                discountAmount={discountAmount}\r\n                giftCertificates={giftCertificates}\r\n                giftWrappingAmount={giftWrappingAmount}\r\n                handlingAmount={handlingAmount}\r\n                headerLink={headerLink}\r\n                lineItems={lineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shippingAmount={shippingAmount}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                subtotalAmount={subtotalAmount}\r\n                taxes={taxes}\r\n                total={total}\r\n            />\r\n        ),\r\n        [\r\n            additionalLineItems,\r\n            coupons,\r\n            discountAmount,\r\n            giftCertificates,\r\n            handlingAmount,\r\n            headerLink,\r\n            lineItems,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            giftWrappingAmount,\r\n            shippingAmount,\r\n            shopperCurrency,\r\n            storeCreditAmount,\r\n            storeCurrency,\r\n            subtotalAmount,\r\n            taxes,\r\n            total,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <ModalTrigger modal={renderModal}>\r\n            {({ onClick, onKeyPress }) => (\r\n                <div\r\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\r\n                    onClick={onClick}\r\n                    onKeyPress={onKeyPress}\r\n                    tabIndex={0}\r\n                >\r\n                    <figure\r\n                        className={classNames('cartDrawer-figure', {\r\n                            'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1,\r\n                        })}\r\n                    >\r\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(lineItems)}</div>\r\n                    </figure>\r\n                    <div className=\"cartDrawer-body\">\r\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\r\n                            <TranslatedString\r\n                                data={{ count: getItemsCount(lineItems) }}\r\n                                id=\"cart.item_count_text\"\r\n                            />\r\n                        </h3>\r\n                        <a>\r\n                            <TranslatedString id=\"cart.show_details_action\" />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"cartDrawer-actions\">\r\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\r\n                            <ShopperCurrency amount={total} />\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </ModalTrigger>\r\n    );\r\n};\r\n\r\nfunction getImage(lineItems: LineItemMap): ReactNode {\r\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\r\n\r\n    if (productWithImage && productWithImage.imageUrl) {\r\n        return (\r\n            <img\r\n                alt={productWithImage.name}\r\n                data-test=\"cart-item-image\"\r\n                src={productWithImage.imageUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (lineItems.giftCertificates.length) {\r\n        return <IconGiftCertificate />;\r\n    }\r\n}\r\n\r\nexport default memo(OrderSummaryDrawer);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronUp: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronUp);\r\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        name: item.name,\r\n    };\r\n}\r\n\r\nexport default mapFromCustom;\r\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\r\n    if (!item.imageUrl) {\r\n        return;\r\n    }\r\n\r\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\r\n}\r\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedListPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        productOptions: [\r\n            ...(item.options || []).map((option) => ({\r\n                testId: 'cart-item-product-option',\r\n                content: `${option.name} ${option.value}`,\r\n            })),\r\n            getDigitalItemDescription(item),\r\n        ],\r\n    };\r\n}\r\n\r\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\r\n    if (!item.downloadPageUrl) {\r\n        return {\r\n            testId: 'cart-item-digital-product',\r\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\r\n        };\r\n    }\r\n\r\n    return {\r\n        testId: 'cart-item-digital-product-download',\r\n        content: (\r\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <TranslatedString id=\"cart.downloads_action\" />\r\n            </a>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromDigital;\r\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { IconGiftCertificate } from '../ui/icon';\r\n\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: 1,\r\n        amount: item.amount,\r\n        name: item.name,\r\n        image: (\r\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\r\n                <IconGiftCertificate />\r\n            </span>\r\n        ),\r\n    };\r\n}\r\n\r\nexport default mapFromGiftCertificate;\r\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\r\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\r\n\r\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\r\n    return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        amount: item.extendedComparisonPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        name: item.name,\r\n        image: getOrderSummaryItemImage(item),\r\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\r\n        productOptions: (item.options || []).map((option) => ({\r\n            testId: 'cart-item-product-option',\r\n            content: `${option.name} ${option.value}`,\r\n        })),\r\n    };\r\n}\r\n\r\nexport default mapFromPhysical;\r\n","import classNames from 'classnames';\r\nimport { isNumber } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryItemProps {\r\n    id: string | number;\r\n    amount: number;\r\n    quantity: number;\r\n    name: string;\r\n    amountAfterDiscount?: number;\r\n    image?: ReactNode;\r\n    description?: ReactNode;\r\n    productOptions?: OrderSummaryItemOption[];\r\n}\r\n\r\nexport interface OrderSummaryItemOption {\r\n    testId: string;\r\n    content: ReactNode;\r\n}\r\n\r\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\r\n    amount,\r\n    amountAfterDiscount,\r\n    image,\r\n    name,\r\n    productOptions,\r\n    quantity,\r\n    description,\r\n}) => (\r\n    <div className=\"product\" data-test=\"cart-item\">\r\n        <figure className=\"product-column product-figure\">{image}</figure>\r\n\r\n        <div className=\"product-column product-body\">\r\n            <h4\r\n                className=\"product-title optimizedCheckout-contentPrimary\"\r\n                data-test=\"cart-item-product-title\"\r\n            >\r\n                {`${quantity} x ${name}`}\r\n            </h4>\r\n            {productOptions && productOptions.length > 0 && (\r\n                <ul\r\n                    className=\"product-options optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-options\"\r\n                >\r\n                    {productOptions.map((option, index) => (\r\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\r\n                            {option.content}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {description && (\r\n                <div\r\n                    className=\"product-description optimizedCheckout-contentSecondary\"\r\n                    data-test=\"cart-item-product-description\"\r\n                >\r\n                    {description}\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n        <div className=\"product-column product-actions\">\r\n            <div\r\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\r\n                    'product-price--beforeDiscount':\r\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\r\n                })}\r\n                data-test=\"cart-item-product-price\"\r\n            >\r\n                <ShopperCurrency amount={amount} />\r\n            </div>\r\n\r\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\r\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\r\n                    <ShopperCurrency amount={amountAfterDiscount} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default memo(OrderSummaryItem);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport mapFromCustom from './mapFromCustom';\r\nimport mapFromDigital from './mapFromDigital';\r\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\r\nimport mapFromPhysical from './mapFromPhysical';\r\nimport OrderSummaryItem from './OrderSummaryItem';\r\n\r\nconst COLLAPSED_ITEMS_LIMIT = 4;\r\n\r\nexport interface OrderSummaryItemsProps {\r\n    items: LineItemMap;\r\n}\r\n\r\ninterface OrderSummaryItemsState {\r\n    isExpanded: boolean;\r\n}\r\n\r\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\r\n    constructor(props: OrderSummaryItemsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n        };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { items } = this.props;\r\n        const { isExpanded } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <h3\r\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\r\n                    data-test=\"cart-count-total\"\r\n                >\r\n                    <TranslatedString\r\n                        data={{ count: getItemsCount(items) }}\r\n                        id=\"cart.item_count_text\"\r\n                    />\r\n                </h3>\r\n\r\n                <ul aria-live=\"polite\" className=\"productList\">\r\n                    {[\r\n                        ...items.physicalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromPhysical),\r\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\r\n                        ...items.digitalItems\r\n                            .slice()\r\n                            .sort((item) => item.variantId)\r\n                            .map(mapFromDigital),\r\n                        ...(items.customItems || []).map(mapFromCustom),\r\n                    ]\r\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\r\n                        .map((summaryItemProps) => (\r\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\r\n                                <OrderSummaryItem {...summaryItemProps} />\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n\r\n                {this.renderActions()}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderActions(): ReactNode {\r\n        const { isExpanded } = this.state;\r\n\r\n        if (this.getLineItemCount() < 5) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"cart-actions\">\r\n                <button\r\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\r\n                    onClick={this.handleToggle}\r\n                    type=\"button\"\r\n                >\r\n                    {isExpanded ? (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_less_action\" />\r\n                            <IconChevronUp />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <TranslatedString id=\"cart.see_all_action\" />\r\n                            <IconChevronDown />\r\n                        </>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getLineItemCount(): number {\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            (items.customItems || []).length +\r\n            items.physicalItems.length +\r\n            items.digitalItems.length +\r\n            items.giftCertificates.length\r\n        );\r\n    }\r\n\r\n    private handleToggle: () => void = () => {\r\n        const { isExpanded } = this.state;\r\n\r\n        this.setState({ isExpanded: !isExpanded });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryItems;\r\n","import classNames from 'classnames';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface OrderSummaryPriceProps {\r\n    label: ReactNode;\r\n    amount?: number | null;\r\n    zeroLabel?: ReactNode;\r\n    className?: string;\r\n    testId?: string;\r\n    currencyCode?: string;\r\n    superscript?: string;\r\n    actionLabel?: ReactNode;\r\n    onActionTriggered?(): void;\r\n}\r\n\r\nexport interface OrderSummaryPriceState {\r\n    highlight: boolean;\r\n    previousAmount?: number;\r\n}\r\n\r\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\r\n    const notYetSetSymbol = '--';\r\n\r\n    if (typeof amount === 'undefined' || amount === null) {\r\n        return notYetSetSymbol;\r\n    }\r\n\r\n    if (zeroLabel && amount === 0) {\r\n        return zeroLabel;\r\n    }\r\n\r\n    return amount;\r\n}\r\n\r\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\r\n    return typeof displayValue === 'number';\r\n}\r\n\r\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\r\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\r\n        return {\r\n            highlight: props.amount !== state.previousAmount,\r\n            previousAmount: props.amount,\r\n        };\r\n    }\r\n\r\n    state = {\r\n        highlight: false,\r\n        previousAmount: 0,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const {\r\n            amount,\r\n            children,\r\n            className,\r\n            currencyCode,\r\n            label,\r\n            superscript,\r\n            testId,\r\n            zeroLabel,\r\n        } = this.props;\r\n\r\n        const { highlight } = this.state;\r\n        const displayValue = getDisplayValue(amount, zeroLabel);\r\n\r\n        return (\r\n            <div data-test={testId}>\r\n                <CSSTransition\r\n                    addEndListener={this.handleTransitionEnd}\r\n                    classNames=\"changeHighlight\"\r\n                    in={highlight}\r\n                    timeout={{}}\r\n                >\r\n                    <div\r\n                        aria-live=\"polite\"\r\n                        className={classNames(\r\n                            'cart-priceItem',\r\n                            'optimizedCheckout-contentPrimary',\r\n                            className,\r\n                        )}\r\n                    >\r\n                        <span className=\"cart-priceItem-label\">\r\n                            <span data-test=\"cart-price-label\">\r\n                                {label}\r\n                                {'  '}\r\n                            </span>\r\n                            {currencyCode && (\r\n                                <span className=\"cart-priceItem-currencyCode\">\r\n                                    {`(${currencyCode}) `}\r\n                                </span>\r\n                            )}\r\n                        </span>\r\n\r\n                        <span className=\"cart-priceItem-value\">\r\n                            <span data-test=\"cart-price-value\">\r\n                                {isNumberValue(displayValue) ? (\r\n                                    <ShopperCurrency amount={displayValue} />\r\n                                ) : (\r\n                                    displayValue\r\n                                )}\r\n                            </span>\r\n\r\n                            {superscript && (\r\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\r\n                            )}\r\n                        </span>\r\n\r\n                        {children}\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        const { previousAmount } = this.state;\r\n\r\n        node.addEventListener('animationend', ({ target }) => {\r\n            if (target === node) {\r\n                this.setState({\r\n                    highlight: false,\r\n                    previousAmount,\r\n                });\r\n                done();\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderSummaryPrice;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\r\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default OrderSummarySection;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\r\n    remaining?: number;\r\n    code?: string;\r\n    onRemoved?(code: string): void;\r\n}\r\n\r\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\r\n    code,\r\n    remaining,\r\n    amount,\r\n    onRemoved,\r\n    ...rest\r\n}) => (\r\n    <OrderSummaryPrice\r\n        {...rest}\r\n        {...(onRemoved && {\r\n            onActionTriggered: () => code && onRemoved(code),\r\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\r\n        })}\r\n        amount={-1 * (amount || 0)}\r\n    >\r\n        {!!remaining && remaining > 0 && (\r\n            <span\r\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\r\n                data-test=\"cart-price-remaining\"\r\n            >\r\n                <TranslatedString id=\"cart.remaining_text\" />\r\n                {': '}\r\n                <ShopperCurrency amount={remaining} />\r\n            </span>\r\n        )}\r\n    </OrderSummaryPrice>\r\n);\r\n\r\nexport default memo(OrderSummaryDiscount);\r\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummarySubtotalsProps {\r\n    coupons: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    discountAmount?: number;\r\n    taxes?: Tax[];\r\n    giftWrappingAmount?: number;\r\n    shippingAmount?: number;\r\n    handlingAmount?: number;\r\n    storeCreditAmount?: number;\r\n    subtotalAmount: number;\r\n    onRemovedGiftCertificate?(code: string): void;\r\n    onRemovedCoupon?(code: string): void;\r\n}\r\n\r\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\r\n    discountAmount,\r\n    giftCertificates,\r\n    taxes,\r\n    giftWrappingAmount,\r\n    shippingAmount,\r\n    subtotalAmount,\r\n    handlingAmount,\r\n    storeCreditAmount,\r\n    coupons,\r\n    onRemovedGiftCertificate,\r\n    onRemovedCoupon,\r\n}) => {\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={subtotalAmount}\r\n                className=\"cart-priceItem--subtotal\"\r\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\r\n                testId=\"cart-subtotal\"\r\n            />\r\n\r\n            {!!giftWrappingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={giftWrappingAmount}\r\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\r\n                    testId=\"cart-gift-wrapping\"\r\n                />\r\n            )}\r\n\r\n            <OrderSummaryPrice\r\n                amount={shippingAmount}\r\n                label={<TranslatedString id=\"cart.shipping_text\" />}\r\n                testId=\"cart-shipping\"\r\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\r\n            />\r\n\r\n            {!!shippingAmount && (coupons || []).map((coupon, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={coupon.discountedAmount}\r\n                    code={coupon.code}\r\n                    key={index}\r\n                    label={coupon.displayName}\r\n                    onRemoved={onRemovedCoupon}\r\n                    testId=\"cart-coupon\"\r\n                />\r\n            ))}\r\n\r\n            {!!discountAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={discountAmount}\r\n                    label={<TranslatedString id=\"cart.discount_text\" />}\r\n                    testId=\"cart-discount\"\r\n                />\r\n            )}\r\n\r\n            {(giftCertificates || []).map((giftCertificate, index) => (\r\n                <OrderSummaryDiscount\r\n                    amount={giftCertificate.used}\r\n                    code={giftCertificate.code}\r\n                    key={index}\r\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\r\n                    onRemoved={onRemovedGiftCertificate}\r\n                    remaining={giftCertificate.remaining}\r\n                    testId=\"cart-gift-certificate\"\r\n                />\r\n            ))}\r\n\r\n            {!!handlingAmount && (\r\n                <OrderSummaryPrice\r\n                    amount={handlingAmount}\r\n                    label={<TranslatedString id=\"cart.handling_text\" />}\r\n                    testId=\"cart-handling\"\r\n                />\r\n            )}\r\n\r\n            {(taxes || []).map((tax, index) => (\r\n                <OrderSummaryPrice\r\n                    amount={tax.amount}\r\n                    key={index}\r\n                    label={tax.name}\r\n                    testId=\"cart-taxes\"\r\n                />\r\n            ))}\r\n\r\n            {!!storeCreditAmount && (\r\n                <OrderSummaryDiscount\r\n                    amount={storeCreditAmount}\r\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\r\n                    testId=\"cart-store-credit\"\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(OrderSummarySubtotals);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '../locale';\r\n\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\n\r\nexport interface OrderSummaryTotalProps {\r\n    orderAmount: number;\r\n    shopperCurrencyCode: string;\r\n    storeCurrencyCode: string;\r\n}\r\n\r\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\r\n    shopperCurrencyCode,\r\n    storeCurrencyCode,\r\n    orderAmount,\r\n    currency,\r\n}) => {\r\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\r\n    const label = (\r\n        <>\r\n            {hasDifferentCurrency ? (\r\n                <TranslatedString id=\"cart.estimated_total_text\" />\r\n            ) : (\r\n                <TranslatedString id=\"cart.total_text\" />\r\n            )}\r\n            {` (${shopperCurrencyCode})`}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <OrderSummaryPrice\r\n                amount={orderAmount}\r\n                className=\"cart-priceItem--total\"\r\n                label={label}\r\n                superscript={hasDifferentCurrency ? '*' : undefined}\r\n                testId=\"cart-total\"\r\n            />\r\n            {hasDifferentCurrency && currency && (\r\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\r\n                    <TranslatedString\r\n                        data={{\r\n                            total: currency.toStoreCurrency(orderAmount),\r\n                            code: storeCurrencyCode,\r\n                        }}\r\n                        id=\"cart.billed_amount_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withCurrency(OrderSummaryTotal);\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\r\n        (total, item) => (total += item.quantity),\r\n        0,\r\n    );\r\n\r\n    return totalItemsCount + giftCertificates.length;\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronDown: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronDown);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst IconGiftCertificate: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default IconGiftCertificate;\r\n","import React, {\r\n    Component,\r\n    KeyboardEvent,\r\n    KeyboardEventHandler,\r\n    MouseEventHandler,\r\n    ReactNode,\r\n} from 'react';\r\n\r\nexport interface ModalTriggerProps {\r\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler }): ReactNode;\r\n    modal(props: ModalTriggerModalProps): ReactNode;\r\n}\r\n\r\nexport interface ModalTriggerModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose(): void;\r\n}\r\n\r\nexport interface ModalTriggerState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    private canHandleEvent = false;\r\n\r\n    componentDidMount(): void {\r\n        this.canHandleEvent = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        this.canHandleEvent = false;\r\n    }\r\n\r\n    render() {\r\n        const { children, modal } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {children({\r\n                    onClick: this.handleOpen,\r\n                    onKeyPress: this.handleKeyOpen,\r\n                })}\r\n\r\n                {modal({\r\n                    isOpen,\r\n                    onRequestClose: this.handleClose,\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private handleOpen: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n        });\r\n    };\r\n\r\n    private handleClose: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\r\n        keyboardEvent,\r\n    ) => {\r\n        if (keyboardEvent.key === 'Enter') {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n}\r\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","renderHeader","onRequestClose","headerLink","className","href","onClick","preventDefault","TranslatedString","id","IconClose","ModalHeader","additionalClassName","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","isOpen","lineItems","total","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","memo","coupons","discountAmount","handlingAmount","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","storeCreditAmount","giftWrappingAmount","subtotalAmount","taxes","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","name","src","IconGiftCertificate","getImage","data","count","getItemsCount","ShopperCurrency","amount","height","viewBox","width","xmlns","d","item","quantity","extendedListPrice","getOrderSummaryItemImage","getDigitalItemDescription","downloadPageUrl","testId","content","rel","target","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","extendedComparisonPrice","description","giftWrapping","undefined","index","key","isNumber","handleToggle","isExpanded","state","setState","render","this","slice","sort","variantId","summaryItemProps","renderActions","getLineItemCount","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","children","currencyCode","label","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","remaining","onRemoved","rest","OrderSummaryPrice","onActionTriggered","actionLabel","coupon","discountedAmount","displayName","giftCertificate","used","tax","currency","hasDifferentCurrency","toStoreCurrency","reduce","canHandleEvent","handleOpen","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","componentWillUnmount"],"sourceRoot":""}