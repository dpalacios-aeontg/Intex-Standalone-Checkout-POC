{"version":3,"file":"cart-summary-drawer-bcce4336.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { FunctionComponent, memo } from 'react';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport OrderSummaryDrawer from '../order/OrderSummaryDrawer';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\r\nimport withRedeemable from './withRedeemable';\r\n\r\nconst CartSummaryDrawer: FunctionComponent<WithCheckoutCartSummaryProps> = ({\r\n    cartUrl,\r\n    ...props\r\n}) =>\r\n    withRedeemable(OrderSummaryDrawer)({\r\n        ...props,\r\n        cartUrl\r\n    });\r\n\r\nexport default withCheckout(mapToCartSummaryProps)(memo(CartSummaryDrawer));\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function getLineItemsCount({\r\n    physicalItems,\r\n    digitalItems,\r\n    giftCertificates,\r\n    customItems,\r\n}: LineItemMap): number {\r\n    return (\r\n        physicalItems.length +\r\n        digitalItems.length +\r\n        giftCertificates.length +\r\n        (customItems || []).length\r\n    );\r\n}\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { TranslatedString } from '../locale';\r\nimport { IconClose } from '../ui/icon';\r\nimport { Modal, ModalHeader } from '../ui/modal';\r\n\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    additionalLineItems?: ReactNode;\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    isOpen: boolean;\r\n    headerLink?: ReactNode;\r\n    onRequestClose?(): void;\r\n    onAfterOpen?(): void;\r\n}\r\n\r\nconst OrderSummaryModal: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    children,\r\n    onRequestClose,\r\n    onAfterOpen,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    isOpen,\r\n    headerLink,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => (\r\n    <Modal\r\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\r\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\r\n        header={renderHeader({ headerLink, onRequestClose })}\r\n        isOpen={isOpen}\r\n        onAfterOpen={onAfterOpen}\r\n        onRequestClose={onRequestClose}\r\n    >\r\n        <OrderSummarySection>\r\n            <OrderSummaryItems items={lineItems} />\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummarySubtotals {...orderSummarySubtotalsProps} />\r\n            {additionalLineItems}\r\n        </OrderSummarySection>\r\n        <OrderSummarySection>\r\n            <OrderSummaryTotal\r\n                orderAmount={total}\r\n                shopperCurrencyCode={shopperCurrency.code}\r\n                storeCurrencyCode={storeCurrency.code}\r\n            />\r\n        </OrderSummarySection>\r\n    </Modal>\r\n);\r\n\r\nconst renderHeader: FunctionComponent<{\r\n    headerLink: ReactNode;\r\n    onRequestClose?(): void;\r\n}> = ({ onRequestClose, headerLink }) => (\r\n    <>\r\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"common.close_action\" />\r\n            </span>\r\n            <IconClose />\r\n        </a>\r\n        <ModalHeader additionalClassName=\"cart-modal-title\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </ModalHeader>\r\n\r\n        {headerLink}\r\n    </>\r\n);\r\n\r\nexport default OrderSummaryModal;\r\n","import {\r\n    LineItemMap,\r\n    ShopperCurrency as ShopperCurrencyType,\r\n    StoreCurrency,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\nimport { IconGiftCertificate } from '../ui/icon';\r\nimport { ModalTrigger } from '../ui/modal';\r\n\r\nimport getItemsCount from './getItemsCount';\r\nimport getLineItemsCount from './getLineItemsCount';\r\nimport OrderSummaryModal from './OrderSummaryModal';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n\r\nexport interface OrderSummaryDrawerProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrencyType;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummaryDrawer: FunctionComponent<\r\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\r\n> = ({\r\n    additionalLineItems,\r\n    coupons,\r\n    discountAmount,\r\n    giftCertificates,\r\n    handlingAmount,\r\n    headerLink,\r\n    lineItems,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n    shippingAmount,\r\n    shopperCurrency,\r\n    storeCreditAmount,\r\n    giftWrappingAmount,\r\n    storeCurrency,\r\n    subtotalAmount,\r\n    taxes,\r\n    total,\r\n}) => {\r\n    const renderModal = useCallback(\r\n        (props) => (\r\n            <OrderSummaryModal\r\n                {...props}\r\n                additionalLineItems={additionalLineItems}\r\n                coupons={coupons}\r\n                discountAmount={discountAmount}\r\n                giftCertificates={giftCertificates}\r\n                giftWrappingAmount={giftWrappingAmount}\r\n                handlingAmount={handlingAmount}\r\n                headerLink={headerLink}\r\n                lineItems={lineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shippingAmount={shippingAmount}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                subtotalAmount={subtotalAmount}\r\n                taxes={taxes}\r\n                total={total}\r\n            />\r\n        ),\r\n        [\r\n            additionalLineItems,\r\n            coupons,\r\n            discountAmount,\r\n            giftCertificates,\r\n            handlingAmount,\r\n            headerLink,\r\n            lineItems,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            giftWrappingAmount,\r\n            shippingAmount,\r\n            shopperCurrency,\r\n            storeCreditAmount,\r\n            storeCurrency,\r\n            subtotalAmount,\r\n            taxes,\r\n            total,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <ModalTrigger modal={renderModal}>\r\n            {({ onClick, onKeyPress }) => (\r\n                <div\r\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\r\n                    onClick={onClick}\r\n                    onKeyPress={onKeyPress}\r\n                    tabIndex={0}\r\n                >\r\n                    <figure\r\n                        className={classNames('cartDrawer-figure', {\r\n                            'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1,\r\n                        })}\r\n                    >\r\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(lineItems)}</div>\r\n                    </figure>\r\n                    <div className=\"cartDrawer-body\">\r\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\r\n                            <TranslatedString\r\n                                data={{ count: getItemsCount(lineItems) }}\r\n                                id=\"cart.item_count_text\"\r\n                            />\r\n                        </h3>\r\n                        <a>\r\n                            <TranslatedString id=\"cart.show_details_action\" />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"cartDrawer-actions\">\r\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\r\n                            <ShopperCurrency amount={total} />\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </ModalTrigger>\r\n    );\r\n};\r\n\r\nfunction getImage(lineItems: LineItemMap): ReactNode {\r\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\r\n\r\n    if (productWithImage && productWithImage.imageUrl) {\r\n        return (\r\n            <img\r\n                alt={productWithImage.name}\r\n                data-test=\"cart-item-image\"\r\n                src={productWithImage.imageUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (lineItems.giftCertificates.length) {\r\n        return <IconGiftCertificate />;\r\n    }\r\n}\r\n\r\nexport default memo(OrderSummaryDrawer);\r\n","import React, {\r\n    Component,\r\n    KeyboardEvent,\r\n    KeyboardEventHandler,\r\n    MouseEventHandler,\r\n    ReactNode,\r\n} from 'react';\r\n\r\nexport interface ModalTriggerProps {\r\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler }): ReactNode;\r\n    modal(props: ModalTriggerModalProps): ReactNode;\r\n}\r\n\r\nexport interface ModalTriggerModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose(): void;\r\n}\r\n\r\nexport interface ModalTriggerState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\r\n    state = {\r\n        isOpen: false,\r\n    };\r\n\r\n    private canHandleEvent = false;\r\n\r\n    componentDidMount(): void {\r\n        this.canHandleEvent = true;\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        this.canHandleEvent = false;\r\n    }\r\n\r\n    render() {\r\n        const { children, modal } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {children({\r\n                    onClick: this.handleOpen,\r\n                    onKeyPress: this.handleKeyOpen,\r\n                })}\r\n\r\n                {modal({\r\n                    isOpen,\r\n                    onRequestClose: this.handleClose,\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private handleOpen: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: true,\r\n        });\r\n    };\r\n\r\n    private handleClose: () => void = () => {\r\n        if (!this.canHandleEvent) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\r\n        keyboardEvent,\r\n    ) => {\r\n        if (keyboardEvent.key === 'Enter') {\r\n            this.handleOpen();\r\n        }\r\n    };\r\n}\r\n"],"names":["memo","cartUrl","props","getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","renderHeader","onRequestClose","headerLink","className","href","onClick","preventDefault","TranslatedString","id","IconClose","ModalHeader","additionalClassName","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","isOpen","lineItems","total","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","coupons","discountAmount","handlingAmount","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","storeCreditAmount","giftWrappingAmount","subtotalAmount","taxes","renderModal","useCallback","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","name","src","IconGiftCertificate","getImage","data","count","getItemsCount","ShopperCurrency","amount","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","key","componentDidMount","this","componentWillUnmount","render","children","Component"],"sourceRoot":""}