{"version":3,"file":"checkout-f0a54123.js","mappings":"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","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/common/dom/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutContext.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/hoc/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/dom/preventDefault.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorBoundary.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/core/src/app/common/hoc/createInjectHoc.tsx","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/locale/LocaleContext.ts","webpack://checkout/./packages/core/src/app/locale/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/locale/TranslatedHtml.tsx","webpack://checkout/./packages/core/src/app/locale/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/locale/getLanguageService.ts","webpack://checkout/./packages/core/src/app/locale/translations/index.ts","webpack://checkout/./packages/core/src/app/locale/withCurrency.tsx","webpack://checkout/./packages/core/src/app/locale/withLanguage.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormProvider.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName?: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    CheckoutService,\n    createBodlService,\n    createStepTracker,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName?: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","enum AddressType {\r\n    Billing = 'billing',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default AddressType;\r\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\r\nimport { find, isEmpty } from 'lodash';\r\n\r\nimport { LocalizedGeography } from '../geography';\r\n\r\nconst localizeAddress = <T1 extends Address>(\r\n    address: T1,\r\n    countries?: Country[],\r\n): T1 & LocalizedGeography => {\r\n    const country = find(countries, { code: address.countryCode });\r\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\r\n    const state = find(states, { code: address.stateOrProvinceCode });\r\n\r\n    return {\r\n        ...address,\r\n        localizedCountry: country ? country.name : address.country,\r\n        localizedProvince: state ? state.name : address.stateOrProvince,\r\n    };\r\n};\r\n\r\nexport default localizeAddress;\r\n","import {\r\n    Address,\r\n    CheckoutSelectors,\r\n    Country,\r\n    FormField,\r\n    ShippingInitializeOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { isEmpty } from 'lodash';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { CheckoutContextProps, withCheckout } from '../checkout';\r\n\r\nimport AddressType from './AddressType';\r\nimport isValidAddress from './isValidAddress';\r\nimport localizeAddress from './localizeAddress';\r\nimport './StaticAddress.scss';\r\n\r\nexport interface StaticAddressProps {\r\n    address: Address;\r\n    type?: AddressType;\r\n}\r\n\r\nexport interface StaticAddressEditableProps extends StaticAddressProps {\r\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\ninterface WithCheckoutStaticAddressProps {\r\n    countries?: Country[];\r\n    fields?: FormField[];\r\n}\r\n\r\nconst StaticAddress: FunctionComponent<\r\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\r\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\r\n    const address = localizeAddress(addressWithoutLocalization, countries);\r\n    const isValid = !fields\r\n        ? !isEmpty(address)\r\n        : isValidAddress(\r\n              address,\r\n              fields.filter((field) => !field.custom),\r\n          );\r\n\r\n    return !isValid ? null : (\r\n        <div className=\"vcard checkout-address--static\">\r\n            {(address.firstName || address.lastName) && (\r\n                <p className=\"fn address-entry\">\r\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\r\n                    <span className=\"family-name\">{address.lastName}</span>\r\n                </p>\r\n            )}\r\n\r\n            {(address.phone || address.company) && (\r\n                <p className=\"address-entry\">\r\n                    <span className=\"company-name\">{`${address.company} `}</span>\r\n                    <span className=\"tel\">{address.phone}</span>\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"adr\">\r\n                <p className=\"street-address address-entry\">\r\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\r\n                    {address.address2 && (\r\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\r\n                    )}\r\n                </p>\r\n\r\n                <p className=\"address-entry\">\r\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\r\n                    {address.localizedProvince && (\r\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\r\n                    )}\r\n                    {address.postalCode && (\r\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\r\n                    )}\r\n                    {address.localizedCountry && (\r\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport function mapToStaticAddressProps(\r\n    context: CheckoutContextProps,\r\n    { address, type }: StaticAddressProps,\r\n): WithCheckoutStaticAddressProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getBillingCountries, getBillingAddressFields, getShippingAddressFields },\r\n        },\r\n    } = context;\r\n\r\n    return {\r\n        countries: getBillingCountries(),\r\n        fields:\r\n            type === AddressType.Billing\r\n                ? getBillingAddressFields(address.countryCode)\r\n                : type === AddressType.Shipping\r\n                ? getShippingAddressFields(address.countryCode)\r\n                : undefined,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\r\n","import { memoize } from '@bigcommerce/memoize';\r\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\r\n\r\nimport getCustomFormFieldsValidationSchema, {\r\n    FormFieldsValidationSchemaOptions,\r\n} from './getCustomFormFieldsValidationSchema';\r\n\r\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\r\n\r\nexport interface FormFieldValues {\r\n    [key: string]: string | { [id: string]: any };\r\n}\r\n\r\nexport default memoize(function getFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return object({\r\n        ...formFields\r\n            .filter(({ custom }) => !custom)\r\n            .reduce((schema, { name, required, label }) => {\r\n                schema[name] = string();\r\n\r\n                if (required) {\r\n                    schema[name] = schema[name]\r\n                        .trim()\r\n                        .required(translate('required', { label, name }));\r\n                }\r\n\r\n                schema[name] = schema[name].matches(\r\n                    WHITELIST_REGEXP,\r\n                    translate('invalid', { name, label }),\r\n                );\r\n\r\n                return schema;\r\n            }, {} as { [key: string]: StringSchema }),\r\n    }).concat(\r\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\r\n    ) as ObjectSchema<FormFieldValues>;\r\n});\r\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from 'lodash';\r\nimport { ObjectSchema } from 'yup';\r\n\r\nimport {\r\n    FormFieldValues,\r\n    getFormFieldsValidationSchema,\r\n    TranslateValidationErrorFunction,\r\n} from '../formFields';\r\n\r\nexport interface AddressFormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    language?: LanguageService;\r\n}\r\n\r\nexport function getTranslateAddressError(\r\n    language?: LanguageService,\r\n): TranslateValidationErrorFunction {\r\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\r\n        countryCode: 'address.country',\r\n        firstName: 'address.first_name',\r\n        lastName: 'address.last_name',\r\n        company: 'address.company_name',\r\n        address1: 'address.address_line_1',\r\n        address2: 'address.address_line_2',\r\n        city: 'address.city',\r\n        stateOrProvince: 'address.state',\r\n        stateOrProvinceCode: 'address.state',\r\n        postalCode: 'address.postal_code',\r\n        phone: 'address.phone_number',\r\n    };\r\n\r\n    return (type, { label, name, min, max }) => {\r\n        if (!language) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'required') {\r\n            if (requiredFieldErrorTranslationIds[name]) {\r\n                return language.translate(\r\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\r\n                );\r\n            }\r\n\r\n            return language.translate(`address.custom_required_error`, { label });\r\n        }\r\n\r\n        if (type === 'max' && max) {\r\n            return language.translate(`address.custom_max_error`, { label, max });\r\n        }\r\n\r\n        if (type === 'min' && min) {\r\n            return language.translate(`address.custom_max_error`, { label, min });\r\n        }\r\n\r\n        if (type === 'invalid') {\r\n            return language.translate(`address.invalid_characters_error`, { label });\r\n        }\r\n    };\r\n}\r\n\r\nexport default memoize(function getAddressFormFieldsValidationSchema({\r\n    formFields,\r\n    language,\r\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return getFormFieldsValidationSchema({\r\n        formFields,\r\n        translate: getTranslateAddressError(language),\r\n    });\r\n});\r\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\r\nimport mapAddressToFormValues from './mapAddressToFormValues';\r\n\r\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\r\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\r\n\r\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\r\n}\r\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\r\n    customFields: { [id: string]: any };\r\n};\r\n\r\nexport default function mapAddressToFormValues(\r\n    fields: FormField[],\r\n    address?: Address,\r\n): AddressFormValues {\r\n    const values = {\r\n        ...fields.reduce(\r\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\r\n                if (custom) {\r\n                    if (!addressFormValues.customFields) {\r\n                        addressFormValues.customFields = {};\r\n                    }\r\n\r\n                    const field =\r\n                        address &&\r\n                        address.customFields &&\r\n                        address.customFields.find(({ fieldId }) => fieldId === name);\r\n\r\n                    const fieldValue = field && field.fieldValue;\r\n\r\n                    addressFormValues.customFields[name] = getValue(\r\n                        fieldType,\r\n                        fieldValue,\r\n                        defaultValue,\r\n                    );\r\n\r\n                    return addressFormValues;\r\n                }\r\n\r\n                if (isSystemAddressFieldName(name)) {\r\n                    addressFormValues[name] = (address && address[name]) || '';\r\n                }\r\n\r\n                return addressFormValues;\r\n            },\r\n            {} as AddressFormValues,\r\n        ),\r\n    };\r\n\r\n    values.shouldSaveAddress =\r\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\r\n\r\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\r\n    if (values.stateOrProvince === undefined) {\r\n        values.stateOrProvince = '';\r\n    }\r\n\r\n    if (values.stateOrProvinceCode === undefined) {\r\n        values.stateOrProvinceCode = '';\r\n    }\r\n\r\n    return values;\r\n}\r\n\r\nfunction getValue(\r\n    fieldType?: string,\r\n    fieldValue?: string | string[] | number,\r\n    defaultValue?: string,\r\n): string | string[] | number | Date | undefined {\r\n    if (fieldValue === undefined || fieldValue === null) {\r\n        return getDefaultValue(fieldType, defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\r\n        return fieldValue ? new Date(fieldValue) : undefined;\r\n    }\r\n\r\n    return fieldValue;\r\n}\r\n\r\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\r\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\r\n        return new Date(defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.checkbox) {\r\n        return [];\r\n    }\r\n\r\n    return defaultValue || '';\r\n}\r\n\r\nfunction isSystemAddressFieldName(\r\n    fieldName: string,\r\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\r\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\r\n}\r\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\r\n\r\nimport { createInjectHoc } from '../common/hoc';\r\n\r\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\r\n\r\nexport default withAnalytics;\r\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { AddressType, StaticAddress } from '../address';\r\nimport { CheckoutContextProps, withCheckout } from '../checkout';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\nimport { TranslatedString } from '../locale';\r\n\r\nexport interface StaticBillingAddressProps {\r\n    address: Address;\r\n}\r\n\r\ninterface WithCheckoutStaticBillingAddressProps {\r\n    fields: FormField[];\r\n    payments?: CheckoutPayment[];\r\n}\r\n\r\nconst StaticBillingAddress: FunctionComponent<\r\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\r\n> = ({ address, payments = EMPTY_ARRAY }) => {\r\n    if (payments.find((payment) => payment.providerId === 'amazon')) {\r\n        return (\r\n            <p>\r\n                <TranslatedString id=\"billing.billing_address_amazon\" />\r\n            </p>\r\n        );\r\n    }\r\n\r\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\r\n        return (\r\n            <p>\r\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\r\n            </p>\r\n        );\r\n    }\r\n\r\n    return <StaticAddress address={address} type={AddressType.Billing} />;\r\n};\r\n\r\nexport function mapToStaticBillingAddressProps(\r\n    { checkoutState }: CheckoutContextProps,\r\n    { address }: StaticBillingAddressProps,\r\n): WithCheckoutStaticBillingAddressProps | null {\r\n    const {\r\n        data: { getBillingAddressFields, getCheckout },\r\n    } = checkoutState;\r\n\r\n    const checkout = getCheckout();\r\n\r\n    return {\r\n        fields: getBillingAddressFields(address.countryCode),\r\n        payments: checkout && checkout.payments,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\r\n","import CheckoutSupport from './CheckoutSupport';\r\n\r\nexport default class NoopCheckoutSupport implements CheckoutSupport {\r\n    isSupported(): boolean {\r\n        return true;\r\n    }\r\n}\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\r\n    constructor(message: string) {\r\n        super({\r\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\r\n            message,\r\n        });\r\n\r\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport } from '../checkout';\r\n\r\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\r\n\r\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\r\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\r\n\r\n    isSupported(...ids: string[]): boolean {\r\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\r\n\r\n        if (unsupportedMethods.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        throw new EmbeddedCheckoutUnsupportedError(\r\n            this.langService.translate('embedded_checkout.unsupported_error', {\r\n                methods: unsupportedMethods.join(', '),\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\r\n\r\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\r\nimport isEmbedded from './isEmbedded';\r\n\r\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazon', 'chasepay', 'googlepay', 'klarna', 'masterpass'];\r\n\r\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\r\n    return isEmbedded()\r\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\r\n        : new NoopCheckoutSupport();\r\n}\r\n","import React, { PureComponent, ReactNode } from 'react';\r\n\r\nimport { TranslatedHtml } from '../locale';\r\nimport { LoadingOverlay } from '../ui/loading';\r\n\r\nexport interface EmptyCartMessageProps {\r\n    waitInterval?: number;\r\n    loginUrl: string;\r\n}\r\n\r\ninterface EmptyCartMessageState {\r\n    isWaiting: boolean;\r\n}\r\n\r\nexport default class EmptyCartMessage extends PureComponent<\r\n    EmptyCartMessageProps,\r\n    EmptyCartMessageState\r\n> {\r\n    state: EmptyCartMessageState = {\r\n        isWaiting: true,\r\n    };\r\n\r\n    private waitToken?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { waitInterval } = this.props;\r\n\r\n        this.waitToken = setTimeout(() => {\r\n            this.setState({ isWaiting: false });\r\n        }, waitInterval);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.waitToken);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { loginUrl } = this.props;\r\n        const { isWaiting } = this.state;\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\r\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\n\r\nimport { stopPropagation } from '../../common/dom';\r\nimport { TranslatedString } from '../../locale';\r\nimport { Button } from '../../ui/button';\r\nimport { IconBolt } from '../../ui/icon';\r\n\r\nexport interface BoltCheckoutSuggestionProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    methodId: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\r\n    isExecutingPaymentMethodCheckout,\r\n    methodId,\r\n    deinitializeCustomer,\r\n    executePaymentMethodCheckout,\r\n    initializeCustomer,\r\n    onUnhandledError = noop,\r\n}) => {\r\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    useEffect(() => {\r\n        deinitializeCustomer({ methodId });\r\n\r\n        try {\r\n            initializeCustomer({\r\n                methodId,\r\n                bolt: {\r\n                    onInit: (hasBoltAccount) => {\r\n                        setShowSuggestion(hasBoltAccount);\r\n                        analyticsTracker.customerSuggestionInit({hasBoltAccount});\r\n                    },\r\n                },\r\n            });\r\n        } catch (error) {\r\n            onUnhandledError(error);\r\n        }\r\n\r\n        return () => {\r\n            deinitializeCustomer({ methodId });\r\n        };\r\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\r\n\r\n    if (!showSuggestion) {\r\n        return null;\r\n    }\r\n\r\n    const handleActionClick = async () => {\r\n        await executePaymentMethodCheckout({ methodId });\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\r\n            <p className=\"checkoutSuggestion-message\">\r\n                <TranslatedString\r\n                    data={{\r\n                        provider: 'Bolt',\r\n                        providerFlow: 'Bolt Checkout',\r\n                    }}\r\n                    id=\"customer.suggestion_text\"\r\n                />\r\n            </p>\r\n            <Button\r\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\r\n                data-test=\"suggestion-action-button\"\r\n                isLoading={isExecutingPaymentMethodCheckout}\r\n                onClick={handleActionClick}\r\n            >\r\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\r\n                <TranslatedString\r\n                    data={{ providerFlow: 'Bolt Checkout' }}\r\n                    id=\"customer.suggestion_action\"\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(BoltCheckoutSuggestion);\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function stopPropagation<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.stopPropagation();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\n\r\nimport { CheckoutContextProps, withCheckout } from '../../checkout';\r\nimport { PaymentMethodId } from '../../payment/paymentMethod';\r\n\r\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\r\n\r\nexport interface CheckoutSuggestionProps {\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nexport interface WithCheckoutSuggestionsProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    providerWithCustomCheckout?: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CheckoutSuggestion: FunctionComponent<\r\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\r\n> = ({\r\n    providerWithCustomCheckout,\r\n    executePaymentMethodCheckout,\r\n    ...rest\r\n}) => {\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\r\n        analyticsTracker.customerSuggestionExecute();\n\r\n        return executePaymentMethodCheckout(options);\r\n    }\r\n\r\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\r\n        return <BoltCheckoutSuggestion\r\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\r\n                    methodId={providerWithCustomCheckout}\r\n                    {...rest}\r\n                />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst mapToCheckoutSuggestionProps = ({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\r\n    const {\r\n        data: { getCheckout, getConfig },\r\n        statuses: { isExecutingPaymentMethodCheckout },\r\n    } = checkoutState;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n\r\n    if (!checkout || !config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\r\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\r\n        initializeCustomer: checkoutService.initializeCustomer,\r\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\r\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\r\n    };\r\n};\r\n\r\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\r\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\r\n\r\nconst SUPPORTED_SIGNOUT_METHODS = ['amazon', 'amazonpay'];\r\n\r\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\r\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\r\n};\r\n\r\nexport default function canSignOut(\r\n    customer: Customer,\r\n    checkout: Checkout,\r\n    methodId: string,\r\n): boolean {\r\n    if (isSupportedSignoutMethod(methodId)) {\r\n        return true;\r\n    }\r\n\r\n    if (customer.isGuest) {\r\n        return false;\r\n    }\r\n\r\n    // Return false if payment method offers its own checkout button\r\n    return every(\r\n        checkout.payments,\r\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\r\n    );\r\n}\r\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { CheckoutContextProps, withCheckout } from '../checkout';\r\nimport { isErrorWithType } from '../common/error';\r\nimport { TranslatedString } from '../locale';\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\n\r\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\r\n\r\nexport interface CustomerInfoProps {\r\n    onSignOut?(event: CustomerSignOutEvent): void;\r\n    onSignOutError?(error: CustomError): void;\r\n}\r\n\r\nexport interface CustomerSignOutEvent {\r\n    isCartEmpty: boolean;\r\n}\r\n\r\ninterface WithCheckoutCustomerInfoProps {\r\n    email: string;\r\n    methodId: string;\r\n    isSignedIn: boolean;\r\n    isSigningOut: boolean;\r\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\r\n    email,\r\n    methodId,\r\n    isSignedIn,\r\n    isSigningOut,\r\n    onSignOut = noop,\r\n    onSignOutError = noop,\r\n    signOut,\r\n}) => {\r\n    const handleSignOut: () => Promise<void> = async () => {\r\n        try {\r\n            if (isSupportedSignoutMethod(methodId)) {\r\n                await signOut({ methodId });\r\n                onSignOut({ isCartEmpty: false });\r\n                window.location.reload();\r\n            } else {\r\n                await signOut();\r\n                onSignOut({ isCartEmpty: false });\r\n            }\r\n        } catch (error) {\r\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\r\n                onSignOut({ isCartEmpty: true });\r\n            } else {\r\n                onSignOutError(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\r\n            <div\r\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\r\n                data-test=\"customer-info\"\r\n            >\r\n                {email}\r\n            </div>\r\n\r\n            <div className=\"customerView-actions\">\r\n                {isSignedIn && (\r\n                    <Button\r\n                        isLoading={isSigningOut}\r\n                        onClick={handleSignOut}\r\n                        size={ButtonSize.Tiny}\r\n                        testId=\"sign-out-link\"\r\n                        variant={ButtonVariant.Secondary}\r\n                    >\r\n                        <TranslatedString id=\"customer.sign_out_action\" />\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapToWithCheckoutCustomerInfoProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\r\n    const {\r\n        data: { getBillingAddress, getCheckout, getCustomer },\r\n        statuses: { isSigningOut },\r\n    } = checkoutState;\r\n\r\n    const billingAddress = getBillingAddress();\r\n    const checkout = getCheckout();\r\n    const customer = getCustomer();\r\n\r\n    if (!billingAddress || !checkout || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const methodId =\r\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\r\n\r\n    return {\r\n        email: billingAddress.email || customer.email,\r\n        methodId,\r\n        isSignedIn: canSignOut(customer, checkout, methodId),\r\n        isSigningOut: isSigningOut(),\r\n        signOut: checkoutService.signOutCustomer,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconTag: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconTag);\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { IconTag } from '../ui/icon';\r\n\r\nexport interface PromotionBannerProps {\r\n    message: string;\r\n}\r\n\r\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\r\n    <Alert\r\n        additionalClassName=\"optimizedCheckout-discountBanner\"\r\n        icon={<IconTag />}\r\n        type={AlertType.Info}\r\n    >\r\n        <span\r\n            dangerouslySetInnerHTML={{\r\n                __html: DOMPurify.sanitize(message),\r\n            }}\r\n            data-test=\"promotion-banner-message\"\r\n        />\r\n    </Alert>\r\n);\r\n\r\nexport default memo(PromotionBanner);\r\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport PromotionBanner from './PromotionBanner';\r\nimport './PromotionBannerList.scss';\r\n\r\nexport interface PromotionBannerListProps {\r\n    promotions: Promotion[];\r\n}\r\n\r\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\r\n    const banners = (promotions || []).reduce(\r\n        (result, promotion) => [...result, ...promotion.banners],\r\n        [] as Banner[],\r\n    );\r\n\r\n    if (!banners.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"discountBanner\">\r\n            <ul className=\"discountBannerList\">\r\n                {banners.map((banner, index) => (\r\n                    <PromotionBanner key={index} message={banner.text} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PromotionBannerList);\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { some } from 'lodash';\r\n\r\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\r\n\r\nexport default function isUsingMultiShipping(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    if (consignments.length > 1) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\r\n        hasUnassignedLineItems(consignments, lineItems)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { AddressType, StaticAddress } from '../address';\r\n\r\nimport { StaticShippingOption } from './shippingOption';\r\nimport './StaticConsignment.scss';\r\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\r\n\r\ninterface StaticConsignmentProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n    compactView?: boolean;\r\n}\r\n\r\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\r\n    consignment,\r\n    cart,\r\n    compactView,\r\n}) => {\r\n    const { shippingAddress: address, selectedShippingOption } = consignment;\r\n\r\n    return (\r\n        <div className=\"staticConsignment\">\r\n            <StaticAddress address={address} type={AddressType.Shipping} />\r\n\r\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\r\n\r\n            {selectedShippingOption && (\r\n                <div>\r\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\r\n                        <StaticShippingOption\r\n                            displayAdditionalInformation={false}\r\n                            method={selectedShippingOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticConsignment);\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\nimport { getLanguageService } from '../../locale';\r\n\r\nexport default class ShippingOptionExpiredError extends CustomError {\r\n    constructor() {\r\n        super({\r\n            name: 'SHIPPING_OPTION_EXPIRED',\r\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\r\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\r\n        });\r\n\r\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\r\n    }\r\n}\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../../locale';\r\n\r\nexport interface LoadingNotificationProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingNotification\">\r\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\r\n                <div className=\"spinner\" />\r\n\r\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\r\n                    <TranslatedString id=\"common.loading_text\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingNotification);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconCheck: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconCheck);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { TranslatedString } from '../locale';\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\nimport { IconCheck } from '../ui/icon';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepHeaderProps {\r\n    heading: ReactNode;\r\n    isActive?: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onEdit?(type: CheckoutStepType): void;\r\n}\r\n\r\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\r\n    heading,\r\n    isActive,\r\n    isComplete,\r\n    isEditable,\r\n    onEdit,\r\n    summary,\r\n    type,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classNames('stepHeader', {\r\n                'is-readonly': !isEditable,\r\n                'is-clickable': isEditable && !isActive,\r\n            })}\r\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\r\n        >\r\n            <div className=\"stepHeader-figure stepHeader-column\">\r\n                <IconCheck\r\n                    additionalClassName={classNames(\r\n                        'stepHeader-counter',\r\n                        'optimizedCheckout-step',\r\n                        { 'stepHeader-counter--complete': isComplete },\r\n                    )}\r\n                />\r\n\r\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\r\n            </div>\r\n\r\n            <div\r\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\r\n                data-test=\"step-info\"\r\n            >\r\n                {!isActive && isComplete && summary}\r\n            </div>\r\n\r\n            {isEditable && !isActive && (\r\n                <div className=\"stepHeader-actions stepHeader-column\">\r\n                    <Button\r\n                        aria-expanded={isActive}\r\n                        size={ButtonSize.Tiny}\r\n                        testId=\"step-edit-button\"\r\n                        variant={ButtonVariant.Secondary}\r\n                    >\r\n                        <TranslatedString id=\"common.edit_action\" />\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutStepHeader);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { Component, createRef, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { isMobileView, MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStepHeader from './CheckoutStepHeader';\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepProps {\r\n    heading?: ReactNode;\r\n    isActive?: boolean;\r\n    isBusy: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    suggestion?: ReactNode;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onExpanded?(step: CheckoutStepType): void;\r\n    onEdit?(step: CheckoutStepType): void;\r\n}\r\n\r\nexport interface CheckoutStepState {\r\n    isClosed: boolean;\r\n}\r\n\r\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\r\n    state = {\r\n        isClosed: true,\r\n    };\r\n\r\n    private containerRef = createRef<HTMLLIElement>();\r\n    private contentRef = createRef<HTMLDivElement>();\r\n    private timeoutRef?: number;\r\n    private timeoutDelay?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive && isActive !== prevProps.isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.timeoutRef) {\r\n            window.clearTimeout(this.timeoutRef);\r\n\r\n            this.timeoutRef = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\r\n            this.props;\r\n\r\n        const { isClosed } = this.state;\r\n\r\n        return (\r\n            <li\r\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\r\n                    [`checkout-step--${type}`]: !!type,\r\n                })}\r\n                ref={this.containerRef}\r\n            >\r\n                <div className=\"checkout-view-header\">\r\n                    <CheckoutStepHeader\r\n                        heading={heading}\r\n                        isActive={isActive}\r\n                        isComplete={isComplete}\r\n                        isEditable={isEditable}\r\n                        onEdit={onEdit}\r\n                        summary={summary}\r\n                        type={type}\r\n                    />\r\n                </div>\r\n\r\n                {suggestion && isClosed && !isActive && (\r\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\r\n                        {suggestion}\r\n                    </div>\r\n                )}\r\n\r\n                {this.renderContent()}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { children, isActive, isBusy } = this.props;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => (\r\n                    <CSSTransition\r\n                        addEndListener={this.handleTransitionEnd}\r\n                        classNames=\"checkout-view-content\"\r\n                        enter={!matched}\r\n                        exit={!matched}\r\n                        in={isActive}\r\n                        mountOnEnter\r\n                        onExited={ this.onAnimationEnd }\r\n                        timeout={ {} }\r\n                        unmountOnExit\r\n                    >\r\n                        <div\r\n                            aria-busy={isBusy}\r\n                            className=\"checkout-view-content\"\r\n                            ref={this.contentRef}\r\n                        >\r\n                            {isActive ? children : null}\r\n                        </div>\r\n                    </CSSTransition>\r\n                )}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private focusStep(): void {\r\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\r\n\r\n        this.setState({ isClosed: false });\r\n\r\n        this.timeoutRef = window.setTimeout(() => {\r\n            const input = this.getChildInput();\r\n            const position = this.getScrollPosition();\r\n            const { type, onExpanded = noop } = this.props;\r\n\r\n            if (input) {\r\n                input.focus();\r\n            }\r\n\r\n            if (position !== undefined && !isNaN(position)) {\r\n                window.scrollTo(0, position);\r\n            }\r\n\r\n            onExpanded(type);\r\n\r\n            this.timeoutRef = undefined;\r\n        }, delay);\r\n    }\r\n\r\n    private getChildInput(): HTMLElement | undefined {\r\n        const container = this.containerRef.current;\r\n\r\n        if (!container) {\r\n            return;\r\n        }\r\n\r\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\r\n\r\n        return input || undefined;\r\n    }\r\n\r\n    private getScrollPosition(): number | undefined {\r\n        const container = this.getParentContainer();\r\n        const { isComplete } = this.props;\r\n\r\n        if (!container || window !== window.top) {\r\n            return;\r\n        }\r\n\r\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\r\n        const containerOffset =\r\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\r\n\r\n        return containerOffset - topOffset;\r\n    }\r\n\r\n    // For now, we need to find the parent container because `CheckoutStep`\r\n    // isn't the outer container yet. Once both the header and body are\r\n    // moved inside this component, we can remove the lookup.\r\n    private getParentContainer(): HTMLElement | undefined {\r\n        let container: HTMLElement | null = this.containerRef.current;\r\n\r\n        while (container && container.parentElement) {\r\n            if (container.parentElement.classList.contains('checkout-step')) {\r\n                return container.parentElement;\r\n            }\r\n\r\n            container = container.parentElement;\r\n        }\r\n\r\n        return this.containerRef.current ? this.containerRef.current : undefined;\r\n    }\r\n\r\n    private getTransitionDelay(): number {\r\n        if (this.timeoutDelay !== undefined) {\r\n            return this.timeoutDelay;\r\n        }\r\n\r\n        // Cache the result to avoid unnecessary reflow\r\n        this.timeoutDelay =\r\n            parseFloat(\r\n                this.contentRef.current\r\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\r\n                    : '0s',\r\n            ) * 1000;\r\n\r\n        return this.timeoutDelay;\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        node.addEventListener('transitionend', ({ target }) => {\r\n            if (target === node) {\r\n                done();\r\n            }\r\n        });\r\n    };\r\n\r\n    private onAnimationEnd = (): void => {\r\n        const { isActive } = this.props;\r\n\r\n        if (!isActive) {\r\n            this.setState({ isClosed: true });\r\n        }\r\n    }\r\n}\r\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nlet query: MediaQueryList;\r\n\r\nexport default function isMobileView() {\r\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\r\n\r\n    return query.matches;\r\n}\r\n","enum CheckoutStepType {\r\n    Billing = 'billing',\r\n    Customer = 'customer',\r\n    Payment = 'payment',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default CheckoutStepType;\r\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\r\n    if (!cart) {\r\n        return false;\r\n    }\r\n\r\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        config &&\r\n        config.checkoutSettings.features['CHECKOUT-4936.enable_custom_item_shipping'] &&\r\n        cart.lineItems.customItems\r\n    ) {\r\n        return cart.lineItems.customItems.length > 0;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport default itemsRequireShipping;\r\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\r\nimport { compact } from 'lodash';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { isValidAddress } from '../address';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\nimport { SUPPORTED_METHODS } from '../customer';\r\nimport { PaymentMethodId } from '../payment/paymentMethod';\r\nimport {\r\n    hasSelectedShippingOptions,\r\n    hasUnassignedLineItems,\r\n    itemsRequireShipping,\r\n} from '../shipping';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nconst getCustomerStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\r\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n    ({ data }: CheckoutSelectors) => data.getConfig(),\r\n    (checkout, customer, billingAddress, config) => {\r\n        const hasEmail = !!(\r\n            (customer && customer.email) ||\r\n            (billingAddress && billingAddress.email)\r\n        );\r\n        const isUsingWallet =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some(\r\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\r\n                  )\r\n                : false;\r\n        const isGuest = !!(customer && customer.isGuest);\r\n        const isComplete = hasEmail || isUsingWallet;\r\n        const isEditable = isComplete && !isUsingWallet && isGuest\r\n\r\n        if (config?.checkoutSettings.providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest) {\r\n            return {\r\n                type: CheckoutStepType.Customer,\r\n                isActive: false,\r\n                isComplete: customer?.isStripeLinkAuthenticated !== undefined ?? isComplete,\r\n                isEditable,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        return {\r\n            type: CheckoutStepType.Customer,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getBillingStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n    ({ data }: CheckoutSelectors) => {\r\n        const billingAddress = data.getBillingAddress();\r\n\r\n        return billingAddress\r\n            ? data.getBillingAddressFields(billingAddress.countryCode)\r\n            : EMPTY_ARRAY;\r\n    },\r\n    (checkout, billingAddress, billingAddressFields) => {\r\n        const hasAddress = billingAddress\r\n            ? isValidAddress(billingAddress, billingAddressFields)\r\n            : false;\r\n        const isUsingWallet =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some(\r\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\r\n                  )\r\n                : false;\r\n        const isComplete = hasAddress || isUsingWallet;\r\n        const isUsingAmazonPay =\r\n            checkout && checkout.payments\r\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\r\n                : false;\r\n\r\n        if (isUsingAmazonPay) {\r\n            const billingAddressCustomFields = billingAddressFields.filter(\r\n                ({ custom }: { custom: boolean }) => custom,\r\n            );\r\n            const hasCustomFields = billingAddressCustomFields.length > 0;\r\n            const isAmazonPayBillingStepComplete =\r\n                billingAddress && hasCustomFields\r\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\r\n                    : true;\r\n\r\n            return {\r\n                type: CheckoutStepType.Billing,\r\n                isActive: false,\r\n                isComplete: isAmazonPayBillingStepComplete,\r\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\r\n                isRequired: true,\r\n            };\r\n        }\r\n\r\n        return {\r\n            type: CheckoutStepType.Billing,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete && !isUsingWallet,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getShippingStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\r\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\r\n    ({ data }: CheckoutSelectors) => data.getCart(),\r\n    ({ data }: CheckoutSelectors) => data.getSelectedPaymentMethod(),\r\n    ({ data }: CheckoutSelectors) => {\r\n        const shippingAddress = data.getShippingAddress();\r\n\r\n        return shippingAddress\r\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\r\n            : EMPTY_ARRAY;\r\n    },\r\n    ({ data }: CheckoutSelectors) => data.getConfig(),\r\n    (shippingAddress, consignments, cart, payment, shippingAddressFields, config) => {\r\n        const hasAddress = shippingAddress\r\n            ? isValidAddress(shippingAddress, shippingAddressFields)\r\n            : false;\r\n        // @todo: interim solution, ideally we should render custom form fields below amazon shipping widget\r\n        const hasRemoteAddress = !!shippingAddress && !!payment && payment.id === 'amazon';\r\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\r\n        const hasUnassignedItems =\r\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\r\n        const isComplete = (hasAddress || hasRemoteAddress) && hasOptions && !hasUnassignedItems;\r\n        const isRequired = itemsRequireShipping(cart, config);\r\n\r\n        return {\r\n            type: CheckoutStepType.Shipping,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete && isRequired,\r\n            isRequired,\r\n        };\r\n    },\r\n);\r\n\r\nconst getPaymentStepStatus = createSelector(\r\n    ({ data }: CheckoutSelectors) => data.getOrder(),\r\n    (order) => {\r\n        const isComplete = order ? order.isComplete : false;\r\n\r\n        return {\r\n            type: CheckoutStepType.Payment,\r\n            isActive: false,\r\n            isComplete,\r\n            isEditable: isComplete,\r\n            isRequired: true,\r\n        };\r\n    },\r\n);\r\n\r\nconst getCheckoutStepStatuses = createSelector(\r\n    getCustomerStepStatus,\r\n    getShippingStepStatus,\r\n    getBillingStepStatus,\r\n    getPaymentStepStatus,\r\n    (customerStep, shippingStep, billingStep, paymentStep) => {\r\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\r\n\r\n        const defaultActiveStep =\r\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\r\n\r\n        return steps.map((step, index) => {\r\n            const isPrevStepComplete = steps\r\n                .slice(0, index)\r\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\r\n\r\n            return {\r\n                ...step,\r\n                isActive: defaultActiveStep.type === step.type,\r\n                isBusy: false,\r\n                // A step is only editable if its previous step is complete or not required\r\n                isEditable: isPrevStepComplete && step.isEditable,\r\n            };\r\n        });\r\n    },\r\n);\r\n\r\nexport default getCheckoutStepStatuses;\r\n","import {\r\n    Address,\r\n    Cart,\r\n    CartChangedError,\r\n    CheckoutParams,\r\n    CheckoutSelectors,\r\n    Consignment,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    FlashMessage,\r\n    Promotion,\r\n    RequestOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { find, findIndex } from 'lodash';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { AddressFormSkeleton, ChecklistSkeleton, CustomerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { StaticBillingAddress } from '../billing';\r\nimport { EmptyCartMessage } from '../cart';\r\nimport { CustomError, ErrorLogger, ErrorModal, isCustomError } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport {\r\n    CheckoutSuggestion,\r\n    CustomerInfo,\r\n    CustomerSignOutEvent,\r\n    CustomerViewType,\r\n} from '../customer';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '../locale';\r\nimport { PromotionBannerList } from '../promotion';\r\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\r\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\r\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStep from './CheckoutStep';\r\nimport CheckoutStepStatus from './CheckoutStepStatus';\r\nimport CheckoutStepType from './CheckoutStepType';\r\nimport CheckoutSupport from './CheckoutSupport';\r\nimport mapToCheckoutProps from './mapToCheckoutProps';\r\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\r\nimport withCheckout from './withCheckout';\r\n\r\nconst Billing = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"billing\" */\r\n                '../billing/Billing'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst CartSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary\" */\r\n                '../cart/CartSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst CartSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary-drawer\" */\r\n                '../cart/CartSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Customer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"customer\" */\r\n                '../customer/Customer'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Payment = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"payment\" */\r\n                '../payment/Payment'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Shipping = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"shipping\" */\r\n                '../shipping/Shipping'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface CheckoutProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    embeddedSupport: CheckoutSupport;\r\n    errorLogger: ErrorLogger;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\nexport interface CheckoutState {\r\n    activeStepType?: CheckoutStepType;\r\n    isBillingSameAsShipping: boolean;\r\n    customerViewType?: CustomerViewType;\r\n    defaultStepType?: CheckoutStepType;\r\n    error?: Error;\r\n    flashMessages?: FlashMessage[];\r\n    isMultiShippingMode: boolean;\r\n    isCartEmpty: boolean;\r\n    isRedirecting: boolean;\r\n    hasSelectedShippingOptions: boolean;\r\n    isBuyNowCartEnabled: boolean;\r\n    isSubscribed: boolean;\r\n}\r\n\r\nexport interface WithCheckoutProps {\r\n    billingAddress?: Address;\r\n    cart?: Cart;\r\n    consignments?: Consignment[];\r\n    error?: Error;\r\n    hasCartChanged: boolean;\r\n    flashMessages?: FlashMessage[];\r\n    isGuestEnabled: boolean;\r\n    isLoadingCheckout: boolean;\r\n    isPending: boolean;\r\n    isPriceHiddenFromGuests: boolean;\r\n    loginUrl: string;\r\n    cartUrl: string;\r\n    createAccountUrl: string;\r\n    canCreateAccountInCheckout: boolean;\r\n    promotions?: Promotion[];\r\n    steps: CheckoutStepStatus[];\r\n    clearError(error?: Error): void;\r\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\r\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\r\n}\r\n\r\nclass Checkout extends Component<\r\n    CheckoutProps & WithCheckoutProps & WithLanguageProps & AnalyticsContextProps,\r\n    CheckoutState\r\n> {\r\n    state: CheckoutState = {\r\n        isBillingSameAsShipping: true,\r\n        isCartEmpty: false,\r\n        isRedirecting: false,\r\n        isMultiShippingMode: false,\r\n        hasSelectedShippingOptions: false,\r\n        isBuyNowCartEnabled: false,\r\n        isSubscribed: false,\r\n    };\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n    private unsubscribeFromConsignments?: () => void;\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeFromConsignments) {\r\n            this.unsubscribeFromConsignments();\r\n            this.unsubscribeFromConsignments = undefined;\r\n        }\r\n\r\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\r\n        this.handleBeforeExit();\r\n    }\r\n\r\n    async componentDidMount(): Promise<void> {\r\n        const {\r\n            checkoutId,\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            loadCheckout,\r\n            subscribeToConsignments,\r\n            analyticsTracker\r\n        } = this.props;\r\n\r\n        try {\r\n            const { data } = await loadCheckout(checkoutId, {\r\n                params: {\r\n                    include: [\r\n                        'cart.lineItems.physicalItems.categoryNames',\r\n                        'cart.lineItems.digitalItems.categoryNames',\r\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\r\n                },\r\n            });\r\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\r\n            const errorFlashMessages = data.getFlashMessages('error') || [];\r\n\r\n            if (errorFlashMessages.length) {\r\n                const { language } = this.props;\r\n\r\n                this.setState({\r\n                    error: new CustomError({\r\n                        title:\r\n                            errorFlashMessages[0].title ||\r\n                            language.translate('common.error_heading'),\r\n                        message: errorFlashMessages[0].message,\r\n                        data: {},\r\n                        name: 'default',\r\n                    }),\r\n                });\r\n            }\r\n\r\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n            this.unsubscribeFromConsignments = subscribeToConsignments(\r\n                this.handleConsignmentsUpdated,\r\n            );\r\n            this.embeddedMessenger = messenger;\r\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n            messenger.postFrameLoaded({ contentId: containerId });\r\n            messenger.postLoaded();\r\n\r\n            analyticsTracker.checkoutBegin();\r\n\r\n            const consignments = data.getConsignments();\r\n            const cart = data.getCart();\r\n\r\n            const hasMultiShippingEnabled =\r\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\r\n            const checkoutBillingSameAsShippingEnabled =\r\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\r\n            const buyNowCartFlag =\r\n                data.getConfig()?.checkoutSettings.features['CHECKOUT-3190.enable_buy_now_cart'] ??\r\n                false;\r\n            const defaultNewsletterSignupOption =\r\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\r\n                false;\r\n            const isMultiShippingMode =\r\n                !!cart &&\r\n                !!consignments &&\r\n                hasMultiShippingEnabled &&\r\n                isUsingMultiShipping(consignments, cart.lineItems);\r\n\r\n            this.setState({\r\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\r\n                isBuyNowCartEnabled: buyNowCartFlag,\r\n                isSubscribed: defaultNewsletterSignupOption,\r\n            });\r\n\r\n            if (isMultiShippingMode) {\r\n                this.setState({ isMultiShippingMode }, this.handleReady);\r\n            } else {\r\n                this.handleReady();\r\n            }\r\n\r\n            window.addEventListener('beforeunload', this.handleBeforeExit);\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                this.handleUnhandledError(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { error } = this.state;\r\n        let errorModal = null;\r\n\r\n        if (error) {\r\n            if (isCustomError(error)) {\r\n                errorModal = (\r\n                    <ErrorModal\r\n                        error={error}\r\n                        onClose={this.handleCloseErrorModal}\r\n                        title={error.title}\r\n                    />\r\n                );\r\n            } else {\r\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classNames({ 'is-embedded': isEmbedded() })}>\r\n                <div className=\"layout optimizedCheckout-contentPrimary\">\r\n                    {this.renderContent()}\r\n                </div>\r\n                {errorModal}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { isPending, loginUrl, promotions = [], steps } = this.props;\r\n\r\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\r\n\r\n        if (isCartEmpty) {\r\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\r\n        }\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\r\n                <div className=\"layout-main\">\r\n                    <LoadingNotification isLoading={isPending} />\r\n\r\n                    <PromotionBannerList promotions={promotions} />\r\n\r\n                    <ol className=\"checkout-steps\">\r\n                        {steps\r\n                            .filter((step) => step.isRequired)\r\n                            .map((step) =>\r\n                                this.renderStep({\r\n                                    ...step,\r\n                                    isActive: activeStepType\r\n                                        ? activeStepType === step.type\r\n                                        : defaultStepType === step.type,\r\n                                    isBusy: isPending,\r\n                                }),\r\n                            )}\r\n                    </ol>\r\n                </div>\r\n\r\n                {this.renderCartSummary()}\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n\r\n    private renderStep(step: CheckoutStepStatus): ReactNode {\r\n        switch (step.type) {\r\n            case CheckoutStepType.Customer:\r\n                return this.renderCustomerStep(step);\r\n\r\n            case CheckoutStepType.Shipping:\r\n                return this.renderShippingStep(step);\r\n\r\n            case CheckoutStepType.Billing:\r\n                return this.renderBillingStep(step);\r\n\r\n            case CheckoutStepType.Payment:\r\n                return this.renderPaymentStep(step);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\r\n        const { isGuestEnabled } = this.props;\r\n        const {\r\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\r\n            isSubscribed,\r\n        } = this.state;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                suggestion={<CheckoutSuggestion />}\r\n                summary={\r\n                    <CustomerInfo\r\n                        onSignOut={this.handleSignOut}\r\n                        onSignOutError={this.handleError}\r\n                    />\r\n                }\r\n            >\r\n                <LazyContainer loadingSkeleton={<CustomerSkeleton />}>\r\n                    <Customer\r\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                        isEmbedded={isEmbedded()}\r\n                        isSubscribed={isSubscribed}\r\n                        onAccountCreated={this.navigateToNextIncompleteStep}\r\n                        onChangeViewType={this.setCustomerViewType}\r\n                        onContinueAsGuest={this.navigateToNextIncompleteStep}\r\n                        onContinueAsGuestError={this.handleError}\r\n                        onReady={this.handleReady}\r\n                        onSignIn={this.navigateToNextIncompleteStep}\r\n                        onSignInError={this.handleError}\r\n                        onSubscribeToNewsletter={this.handleNewsletterSubscription}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                        step={step}\r\n                        viewType={customerViewType}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\r\n        const { hasCartChanged, cart, consignments = [] } = this.props;\r\n\r\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\r\n\r\n        if (!cart) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                summary={consignments.map((consignment) => (\r\n                    <div className=\"staticConsignmentContainer\" key={consignment.id}>\r\n                        <StaticConsignment\r\n                            cart={cart}\r\n                            compactView={consignments.length < 2}\r\n                            consignment={consignment}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            >\r\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n                    <Shipping\r\n                        cartHasChanged={hasCartChanged}\r\n                        isBillingSameAsShipping={isBillingSameAsShipping}\r\n                        isMultiShippingMode={isMultiShippingMode}\r\n                        navigateNextStep={this.handleShippingNextStep}\r\n                        onCreateAccount={this.handleShippingCreateAccount}\r\n                        onReady={this.handleReady}\r\n                        onSignIn={this.handleShippingSignIn}\r\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                        step={step}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\r\n        const { billingAddress } = this.props;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\r\n            >\r\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n                    <Billing\r\n                        navigateNextStep={this.navigateToNextIncompleteStep}\r\n                        onReady={this.handleReady}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\r\n        const { consignments, cart, errorLogger } = this.props;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n            >\r\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\r\n                    <Payment\r\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                        errorLogger={errorLogger}\r\n                        isEmbedded={isEmbedded()}\r\n                        isUsingMultiShipping={\r\n                            cart && consignments\r\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\r\n                                : false\r\n                        }\r\n                        onCartChangedError={this.handleCartChangedError}\r\n                        onFinalize={this.navigateToOrderConfirmation}\r\n                        onReady={this.handleReady}\r\n                        onSubmit={this.navigateToOrderConfirmation}\r\n                        onSubmitError={this.handleError}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderCartSummary(): ReactNode {\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <CartSummaryDrawer />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <CartSummary />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\r\n        const { clearError, error, steps } = this.props;\r\n        const { activeStepType } = this.state;\r\n        const step = find(steps, { type });\r\n\r\n        if (!step) {\r\n            return;\r\n        }\r\n\r\n        if (activeStepType === step.type) {\r\n            return;\r\n        }\r\n\r\n        if (options && options.isDefault) {\r\n            this.setState({ defaultStepType: step.type });\r\n        } else {\r\n            this.setState({ activeStepType: step.type });\r\n        }\r\n\r\n        if (error) {\r\n            clearError(error);\r\n        }\r\n    }\r\n\r\n    private handleToggleMultiShipping: () => void = () => {\r\n        const { isMultiShippingMode } = this.state;\r\n\r\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\r\n    };\r\n\r\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\r\n        options,\r\n    ) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n        const activeStepIndex = findIndex(steps, { isActive: true });\r\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\r\n\r\n        if (!activeStep) {\r\n            return;\r\n        }\r\n\r\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\r\n\r\n        if (previousStep) {\r\n            analyticsTracker.trackStepCompleted(previousStep.type);\r\n        }\r\n\r\n        this.navigateToStep(activeStep.type, options);\r\n    };\r\n\r\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n        const { isBuyNowCartEnabled } = this.state;\r\n\r\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postComplete();\r\n        }\r\n\r\n        this.setState({ isRedirecting: true }, () => {\r\n            navigateToOrderConfirmation(isBuyNowCartEnabled, orderId);\r\n        });\r\n    };\r\n\r\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\r\n        const { embeddedSupport } = this.props;\r\n\r\n        return embeddedSupport.isSupported(...methodIds);\r\n    };\r\n\r\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\r\n        this.navigateToStep(CheckoutStepType.Shipping);\r\n    };\r\n\r\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\r\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType } =\r\n            this.state;\r\n\r\n        const { steps } = this.props;\r\n\r\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\r\n            data.getConsignments() || [],\r\n        );\r\n\r\n        if (\r\n            prevHasSelectedShippingOptions &&\r\n            !newHasSelectedShippingOptions &&\r\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\r\n                findIndex(steps, { type: activeStepType })\r\n        ) {\r\n            this.navigateToStep(CheckoutStepType.Shipping);\r\n            this.setState({ error: new ShippingOptionExpiredError() });\r\n        }\r\n\r\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\r\n    };\r\n\r\n    private handleCloseErrorModal: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\r\n        const { analyticsTracker } = this.props;\n\r\n        analyticsTracker.trackStepViewed(type);\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        this.handleError(error);\r\n\r\n        // For errors that are not caught and handled by child components, we\r\n        // handle them here by displaying a generic error modal to the shopper.\r\n        this.setState({ error });\r\n    };\r\n\r\n    private handleError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n\r\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\r\n        this.navigateToStep(type);\r\n    };\r\n\r\n    private handleReady: () => void = () => {\r\n        this.navigateToNextIncompleteStep({ isDefault: true });\r\n    };\r\n\r\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\r\n        this.setState({ isSubscribed: subscribed });\r\n    }\r\n\r\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\r\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\r\n\r\n        if (isPriceHiddenFromGuests) {\r\n            if (window.top) {\r\n                return (window.top.location.href = cartUrl);\r\n            }\r\n        }\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postSignedOut();\r\n        }\r\n\r\n        if (isGuestEnabled) {\r\n            this.setCustomerViewType(CustomerViewType.Guest);\r\n        }\r\n\r\n        if (isCartEmpty) {\r\n            this.setState({ isCartEmpty: true });\r\n\r\n            if (!isEmbedded()) {\r\n                if (window.top) {\r\n                    return window.top.location.assign(loginUrl);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n    };\r\n\r\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\r\n        isBillingSameAsShipping,\r\n    ) => {\r\n        this.setState({ isBillingSameAsShipping });\r\n\r\n        if (isBillingSameAsShipping) {\r\n            this.navigateToNextIncompleteStep();\r\n        } else {\r\n            this.navigateToStep(CheckoutStepType.Billing);\r\n        }\r\n    };\r\n\r\n    private handleShippingSignIn: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.Login);\r\n    };\r\n\r\n    private handleShippingCreateAccount: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\r\n    };\r\n\r\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\r\n        const { canCreateAccountInCheckout, createAccountUrl } = this.props;\r\n\r\n        if (\r\n            customerViewType === CustomerViewType.CreateAccount &&\r\n            (!canCreateAccountInCheckout || isEmbedded())\r\n        ) {\r\n            if (window.top) {\r\n                window.top.location.replace(createAccountUrl);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n        this.setState({ customerViewType });\r\n    };\r\n\r\n    private handleBeforeExit: () => void = () => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.exitCheckout();\r\n    }\r\n}\r\n\r\nexport default withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout)));\r\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { WithCheckoutProps } from './Checkout';\r\nimport { CheckoutContextProps } from './CheckoutContext';\r\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\r\n\r\nexport default function mapToCheckoutProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutProps {\r\n    const { data, errors, statuses } = checkoutState;\r\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\r\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\r\n    const {\r\n        checkoutSettings: { guestCheckoutEnabled: isGuestEnabled = false, features = {} } = {},\r\n        links: {\r\n            loginLink: loginUrl = '',\r\n            createAccountLink: createAccountUrl = '',\r\n            cartLink: cartUrl = '',\r\n        } = {},\r\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\r\n    } = data.getConfig() || {};\r\n\r\n    const subscribeToConsignmentsSelector = createSelector(\r\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\r\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\r\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\r\n        },\r\n    );\r\n\r\n    return {\r\n        billingAddress: data.getBillingAddress(),\r\n        cart: data.getCart(),\r\n        clearError: checkoutService.clearError,\r\n        consignments: data.getConsignments(),\r\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\r\n        isGuestEnabled,\r\n        isLoadingCheckout: statuses.isLoadingCheckout(),\r\n        isPending: statuses.isPending(),\r\n        isPriceHiddenFromGuests,\r\n        loadCheckout: checkoutService.loadCheckout,\r\n        loginUrl,\r\n        cartUrl,\r\n        createAccountUrl,\r\n        canCreateAccountInCheckout: features['CHECKOUT-4941.account_creation_in_checkout'],\r\n        promotions,\r\n        subscribeToConsignments: subscribeToConsignmentsSelector({\r\n            checkoutService,\r\n            checkoutState,\r\n        }),\r\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\r\n    };\r\n}\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\n\r\nimport '../../scss/App.scss';\r\nimport { createErrorLogger, ErrorBoundary, ErrorLogger } from '../common/error';\r\nimport {\r\n    createEmbeddedCheckoutStylesheet,\r\n    createEmbeddedCheckoutSupport,\r\n} from '../embeddedCheckout';\r\nimport { getLanguageService, LocaleProvider } from '../locale';\r\n\r\nimport Checkout from './Checkout';\r\nimport CheckoutProvider from './CheckoutProvider';\r\n\r\nexport interface CheckoutAppProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n}\r\n\r\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<CheckoutAppProps>) {\r\n        super(props);\r\n\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ErrorBoundary logger={ this.errorLogger }>\r\n                <LocaleProvider checkoutService={ this.checkoutService }>\r\n                    <CheckoutProvider checkoutService={ this.checkoutService }>\r\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\r\n                            <Checkout\r\n                                {...this.props}\r\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                embeddedStylesheet={this.embeddedStylesheet}\r\n                                embeddedSupport={this.embeddedSupport}\r\n                                errorLogger={this.errorLogger}\r\n                            />\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n}\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext } from 'react';\r\n\r\nexport interface CheckoutContextProps {\r\n    checkoutService: CheckoutService;\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\r\n\r\nexport default CheckoutContext;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport CheckoutContext from './CheckoutContext';\r\n\r\nexport interface CheckoutProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface CheckoutProviderState {\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nexport default class CheckoutProvider extends Component<\r\n    CheckoutProviderProps,\r\n    CheckoutProviderState\r\n> {\r\n    state: Readonly<CheckoutProviderState>;\r\n\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne((checkoutService, checkoutState) => {\r\n        return {\r\n            checkoutService,\r\n            checkoutState,\r\n        };\r\n    });\r\n\r\n    constructor(props: Readonly<CheckoutProviderProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checkoutState: props.checkoutService.getState(),\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\r\n            this.setState({ checkoutState }),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { checkoutService, children } = this.props;\r\n        const { checkoutState } = this.state;\r\n\r\n        return (\r\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\r\n                {children}\r\n            </CheckoutContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import { noop } from 'lodash';\r\n\r\nimport { isBuyNowCart } from '../common/utility';\r\n\r\nexport default function navigateToOrderConfirmation(\r\n    isBuyNowCartEnabled = false,\r\n    orderId?: number,\r\n): Promise<never> {\r\n    let url: string;\r\n\r\n    if (isBuyNowCartEnabled) {\r\n        if (orderId && isBuyNowCart()) {\r\n            url = `/checkout/order-confirmation/${orderId.toString()}`;\r\n        } else {\r\n            url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\r\n        }\r\n\r\n        window.location.replace(url);\r\n\r\n        return new Promise(noop);\r\n    }\r\n\r\n    url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\r\n    window.location.replace(url);\r\n\r\n    return new Promise(noop);\r\n}\r\n","export default function isBuyNowCart(): boolean {\r\n    const lastPathName = window.location.pathname.split('/').pop();\r\n\r\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\r\n}\r\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { MatchedProps } from './InjectHoc';\r\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\r\n\r\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\r\n    mapToProps:\r\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\r\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\r\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\r\n    return mapToProps.length === 0;\r\n}\r\n\r\nexport default function createMappableInjectHoc<TContextProps>(\r\n    ContextComponent: Context<TContextProps>,\r\n    options?: { displayNamePrefix?: string },\r\n): MappableInjectHoc<NonNullable<TContextProps>> {\r\n    return <TMappedProps, TOwnProps>(\r\n        mapToPropsOrFactory:\r\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\r\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\r\n    ) => {\r\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\r\n            OriginalComponent: ComponentType<TProps>,\r\n        ) => {\r\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n                <OriginalComponent {...props} />\r\n            ));\r\n\r\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\r\n                props,\r\n            ) => {\r\n                const context = useContext(ContextComponent);\r\n\r\n                const mapToProps = useMemo(\r\n                    () =>\r\n                        isMapToPropsFactory(mapToPropsOrFactory)\r\n                            ? mapToPropsOrFactory()\r\n                            : mapToPropsOrFactory,\r\n                    [],\r\n                );\r\n\r\n                const mappedProps = context\r\n                    ? mapToProps(\r\n                          context as NonNullable<TContextProps>,\r\n                          props as unknown as TOwnProps,\r\n                      )\r\n                    : context;\r\n\r\n                if (!mappedProps) {\r\n                    return null;\r\n                }\r\n\r\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\r\n\r\n                return <InnerDecoratedComponent {...mergedProps} />;\r\n            };\r\n\r\n            if (options && options.displayNamePrefix && OriginalComponent) {\r\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\r\n                    OriginalComponent.displayName || OriginalComponent.name\r\n                })`;\r\n            }\r\n\r\n            return DecoratedComponent;\r\n        };\r\n    };\r\n}\r\n","import { createMappableInjectHoc } from '../common/hoc';\r\n\r\nimport CheckoutContext, { CheckoutContextProps } from './CheckoutContext';\r\n\r\nexport type WithCheckoutProps = CheckoutContextProps;\r\n\r\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\r\n    displayNamePrefix: 'WithCheckout',\r\n});\r\n\r\nexport default withCheckout;\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function preventDefault<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.preventDefault();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","export default class CustomError extends Error {\r\n    static shouldReport: boolean;\r\n\r\n    data: any;\r\n    title: string;\r\n    type: string;\r\n\r\n    constructor({\r\n        data = {},\r\n        message = '',\r\n        title = '',\r\n        name = '',\r\n    }: {\r\n        data?: any;\r\n        message?: string;\r\n        title?: string;\r\n        name?: string;\r\n    }) {\r\n        super();\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, CustomError);\r\n        } else {\r\n            this.stack = new Error().stack;\r\n        }\r\n\r\n         \r\n        this.data = data;\r\n        this.message = message;\r\n        this.name = name;\r\n        this.title = title;\r\n        this.type = 'custom';\r\n    }\r\n\r\n    // todo: remove these methods when all error types has specific subclasses.\r\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n    // to proper error subclasses.\r\n    protected setDefaultValues({\r\n        name,\r\n        defaultError,\r\n        defaultTitle,\r\n    }: {\r\n        name: string;\r\n        defaultError: string;\r\n        defaultTitle: string;\r\n    }): void {\r\n        this.name = this.name || name;\r\n        this.message = this.message || defaultError;\r\n        this.title = this.title || defaultTitle;\r\n    }\r\n}\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport ErrorLogger from './ErrorLogger';\r\n\r\nexport interface ErrorBoundaryProps {\r\n    children: ReactNode;\r\n    fallback?: ReactNode;\r\n    logger?: ErrorLogger;\r\n    filter?(error: Error): boolean;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n    error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\r\n        return { error };\r\n    }\r\n\r\n    state: ErrorBoundaryState = {};\r\n\r\n    componentDidCatch(error: Error): void {\r\n        const { filter = () => true, logger } = this.props;\r\n\r\n        if (!filter(error)) {\r\n            throw error;\r\n        }\r\n\r\n        if (logger) {\r\n            logger.log(error);\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children, fallback, filter = () => true } = this.props;\r\n\r\n        const { error } = this.state;\r\n\r\n        if (error && filter(error)) {\r\n            return fallback || null;\r\n        }\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '../../locale';\r\n\r\nimport './ErrorCode.scss';\r\n\r\nexport interface ErrorCodeProps {\r\n    code: string;\r\n    label?: ReactNode;\r\n}\r\n\r\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\r\n    return (\r\n        <div className=\"errorCode\">\r\n            <span className=\"errorCode-label\">\r\n                {label ?? <TranslatedString id=\"common.error_code\" />}\r\n            </span>{' '}\r\n            <span className=\"errorCode-value\">{code}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ErrorCode);\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\r\n\r\nimport { TranslatedString } from '../../locale';\r\nimport { Button, ButtonSize } from '../../ui/button';\r\nimport { IconError, IconSize } from '../../ui/icon';\r\nimport { Modal, ModalHeader } from '../../ui/modal';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ErrorCode from './ErrorCode';\r\nimport isCustomError from './isCustomError';\r\nimport isRequestError from './isRequestError';\r\n\r\nexport interface ErrorModalProps {\r\n    error?: Error | RequestError;\r\n    message?: ReactNode;\r\n    title?: ReactNode;\r\n    shouldShowErrorCode?: boolean;\r\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\r\n}\r\n\r\nexport interface ErrorModalOnCloseProps {\r\n    error: Error;\r\n}\r\n\r\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\r\n    private aria = {\r\n        labelledby: 'errorModalMessage',\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                additionalModalClassName=\"modal--error\"\r\n                aria={this.aria}\r\n                footer={this.renderFooter()}\r\n                header={this.renderHeader()}\r\n                isOpen={!!error}\r\n                onRequestClose={this.handleOnRequestClose}\r\n            >\r\n                {this.renderBody()}\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    private renderHeader(): ReactNode {\r\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\r\n\r\n        return (\r\n            <ModalHeader>\r\n                <IconError\r\n                    additionalClassName=\"icon--error modal-header-icon\"\r\n                    size={IconSize.Small}\r\n                />\r\n                <span aria-live=\"assertive\" role=\"alert\">\r\n                    {title || <TranslatedString id=\"common.error_heading\" />}\r\n                </span>\r\n            </ModalHeader>\r\n        );\r\n    }\r\n\r\n    private renderBody(): ReactNode {\r\n        const { error, message = error && error.message } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {message && (\r\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\r\n                        {message}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderFooter(): ReactNode {\r\n        return (\r\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\r\n                <TranslatedString id=\"common.ok_action\" />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private renderErrorCode(): ReactNode {\r\n        const { error, shouldShowErrorCode = true } = this.props;\r\n\r\n        if (!error || !shouldShowErrorCode) {\r\n            return;\r\n        }\r\n        \r\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\r\n            return (\r\n                <ErrorCode\r\n                    code={error.headers['x-request-id']}\r\n                    label={<TranslatedString id=\"common.request_id\" />}\r\n                />\r\n            );\r\n        }\r\n\r\n        const errorCode = computeErrorCode(error);\r\n\r\n        if (!errorCode) {\r\n            return;\r\n        }\r\n\r\n        return <ErrorCode code={errorCode} />;\r\n    }\r\n\r\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\r\n        const { error, onClose = noop } = this.props;\r\n\r\n        if (error) {\r\n            onClose(event.nativeEvent, { error });\r\n        }\r\n    };\r\n}\r\n","import HashStatic from 'object-hash';\r\n\r\nexport default function computeErrorCode(value: any): string | undefined {\r\n    try {\r\n        return HashStatic(value).toUpperCase();\r\n    } catch (error) {}\r\n}\r\n","import CustomError from './CustomError';\r\n\r\n// todo: remove this method in favour of creating proper subclasses for each error type.\r\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n// to proper error subclasses.\r\nexport default function createCustomErrorType({\r\n    name,\r\n    defaultError = '',\r\n    defaultTitle = '',\r\n    shouldReport = false,\r\n}: {\r\n    name: string;\r\n    defaultError?: string;\r\n    defaultTitle?: string;\r\n    shouldReport?: boolean;\r\n}) {\r\n    class CustomErrorType extends CustomError {\r\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\r\n            super({\r\n                data,\r\n                message: errorMessage,\r\n                title: errorTitle,\r\n            });\r\n\r\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\r\n            setPrototypeOf(this, CustomErrorType.prototype);\r\n\r\n            this.setDefaultValues({\r\n                name,\r\n                defaultError,\r\n                defaultTitle,\r\n            });\r\n        }\r\n    }\r\n\r\n    CustomErrorType.shouldReport = shouldReport;\r\n\r\n    return CustomErrorType;\r\n}\r\n\r\nexport function setPrototypeOf(object: any, prototype: any) {\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else {\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n","import { BrowserOptions } from '@sentry/browser';\r\n\r\nexport default interface ErrorLogger {\r\n    /**\r\n     * Logs an error in, tagging it with an error code.\r\n     *\r\n     * @param error The error object to be logged\r\n     * @param tags The tags attached to the log entry\r\n     * @param level The level of the log\r\n     * @param meta Any extra meta data\r\n     */\r\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\r\n}\r\n\r\nexport interface ErrorLoggerOptions {\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n}\r\n\r\nexport interface ErrorLoggerServiceConfig {\r\n    sentry?: BrowserOptions;\r\n}\r\n\r\nexport interface ErrorTags {\r\n    /**\r\n     * A code that identifies uniquely each error type\r\n     */\r\n    errorCode: string;\r\n}\r\n\r\nexport interface ErrorMeta {\r\n    [key: string]: unknown;\r\n}\r\n\r\nexport enum ErrorLevelType {\r\n    Info = 'info',\r\n    Warning = 'warning',\r\n    Error = 'error',\r\n    Debug = 'debug',\r\n}\r\n","import ErrorLogger, { ErrorLevelType, ErrorMeta, ErrorTags } from './ErrorLogger';\r\n\r\nexport interface ConsoleErrorLoggerOptions {\r\n    console?: Console;\r\n    errorTypes?: string[];\r\n}\r\n\r\n// tslint:disable:no-console\r\nexport default class ConsoleErrorLogger implements ErrorLogger {\r\n    private console: Console;\r\n\r\n    constructor(options?: ConsoleErrorLoggerOptions) {\r\n        const { console: customConsole = console } = options || {};\r\n\r\n        this.console = customConsole;\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        meta?: ErrorMeta,\r\n    ): void {\r\n        switch (level) {\r\n            case ErrorLevelType.Error:\r\n                return this.console.error(error, tags, meta);\r\n\r\n            case ErrorLevelType.Info:\r\n                return this.console.info(error, tags, meta);\r\n\r\n            case ErrorLevelType.Warning:\r\n                return this.console.warn(error, tags, meta);\r\n\r\n            default:\r\n                return this.console.log(error, tags, meta);\r\n        }\r\n    }\r\n}\r\n","import ErrorLogger from './ErrorLogger';\r\n\r\nexport default class NoopErrorLogger implements ErrorLogger {\r\n    log() {}\r\n}\r\n","import {\r\n    BrowserOptions,\r\n    captureException,\r\n    Event,\r\n    init,\r\n    Integrations,\r\n    SeverityLevel,\r\n    StackFrame,\r\n    withScope,\r\n} from '@sentry/browser';\r\nimport { RewriteFrames } from '@sentry/integrations';\r\nimport { EventHint, Exception } from '@sentry/types';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport ErrorLogger, { ErrorLevelType, ErrorMeta, ErrorTags } from './ErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\n\r\nconst FILENAME_PREFIX = 'app://';\r\nconst SAMPLE_RATE = 0.1;\r\n\r\nexport interface SentryErrorLoggerOptions {\r\n    consoleLogger?: ConsoleErrorLogger;\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n}\r\n\r\nexport enum SeverityLevelEnum {\r\n    DEBUG = 'debug',\r\n    ERROR = 'error',\r\n    INFO = 'info',\r\n    WARNING = 'warning',\r\n}\r\n\r\nexport default class SentryErrorLogger implements ErrorLogger {\r\n    private consoleLogger: ErrorLogger;\r\n    private publicPath: string;\r\n\r\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\r\n        const { consoleLogger = new NoopErrorLogger(), publicPath = '' } = options || {};\r\n\r\n        this.consoleLogger = consoleLogger;\r\n        this.publicPath = publicPath;\r\n\r\n        init({\r\n            sampleRate: SAMPLE_RATE,\r\n            beforeSend: this.handleBeforeSend,\r\n            denyUrls: [...(config.denyUrls || []), 'polyfill~checkout', 'sentry~checkout', 'convertcart'],\r\n            integrations: [\r\n                new Integrations.GlobalHandlers({\r\n                    onerror: false,\r\n                    onunhandledrejection: true,\r\n                }),\r\n                new RewriteFrames({\r\n                    iteratee: this.handleRewriteFrame,\r\n                }),\r\n            ],\r\n            ...config,\r\n        });\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        payload?: ErrorMeta,\r\n    ): void {\r\n        this.consoleLogger.log(error, tags, level);\r\n\r\n        withScope((scope) => {\r\n            const { errorCode = computeErrorCode(error) } = tags || {};\r\n\r\n            if (errorCode) {\r\n                scope.setTags({ errorCode });\r\n            }\r\n\r\n            scope.setLevel(this.mapToSentryLevel(level));\r\n\r\n            if (payload) {\r\n                scope.setExtras(payload);\r\n            }\r\n\r\n            scope.setFingerprint(['{{ default }}']);\r\n\r\n            captureException(error);\r\n        });\r\n    }\r\n\r\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\r\n        switch (level) {\r\n            case ErrorLevelType.Info:\r\n                return SeverityLevelEnum.INFO;\r\n\r\n            case ErrorLevelType.Warning:\r\n                return SeverityLevelEnum.WARNING;\r\n\r\n            case ErrorLevelType.Debug:\r\n                return SeverityLevelEnum.DEBUG;\r\n\r\n            case ErrorLevelType.Error:\r\n            default:\r\n                return SeverityLevelEnum.ERROR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\r\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\r\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\r\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\r\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\r\n     * whose topmost frame is ours but frames below it are not.\r\n     */\r\n    private shouldReportExceptions(\r\n        exceptions: Exception[],\r\n        originalException: Error | string | null,\r\n    ): boolean {\r\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\r\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\r\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\r\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\r\n        if (!exceptions.length || !(originalException instanceof Error)) {\r\n            return false;\r\n        }\r\n\r\n        return exceptions.every((exception) => {\r\n            if (!exception.stacktrace?.frames?.length) {\r\n                return false;\r\n            }\r\n\r\n            return exception.stacktrace.frames.every((frame) =>\r\n                frame.filename?.startsWith(FILENAME_PREFIX),\r\n            );\r\n        });\r\n    }\r\n\r\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\r\n        if (\r\n            event.breadcrumbs?.filter((breadcrumb) => breadcrumb.data?.url?.includes('convertcart'))\r\n        ) {\r\n            return null;\r\n        }\r\n\r\n        if (event.exception) {\r\n            if (\r\n                !this.shouldReportExceptions(\r\n                    event.exception.values ?? [],\r\n                    hint?.originalException ?? null,\r\n                )\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return event;\r\n        }\r\n\r\n        return event;\r\n    };\r\n\r\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\r\n        if (this.publicPath && frame.filename) {\r\n            // We want to remove the base path of the filename, otherwise we\r\n            // will need to specify it when we upload the sourcemaps so that the\r\n            // filenames can match up.\r\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\r\n\r\n            // `frame` needs to be modified in-place (based on the example in\r\n            // their documentation).\r\n            if (filename !== frame.filename) {\r\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\r\n            }\r\n        }\r\n\r\n        return frame;\r\n    };\r\n}\r\n","import ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport ErrorLogger, { ErrorLoggerOptions, ErrorLoggerServiceConfig } from './ErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\nimport SentryErrorLogger from './SentryErrorLogger';\r\n\r\nexport default function createErrorLogger(\r\n    serviceConfig?: ErrorLoggerServiceConfig,\r\n    options?: ErrorLoggerOptions,\r\n): ErrorLogger {\r\n    if (serviceConfig && serviceConfig.sentry) {\r\n        return new SentryErrorLogger(serviceConfig.sentry, {\r\n            ...options,\r\n            consoleLogger: new ConsoleErrorLogger(options),\r\n        });\r\n    }\r\n\r\n    if (process.env.NODE_ENV === 'test') {\r\n        return new NoopErrorLogger();\r\n    }\r\n\r\n    return new ConsoleErrorLogger(options);\r\n}\r\n","import CustomError from './CustomError';\r\n\r\nexport default function isCustomError(error: Error): error is CustomError {\r\n    const customError = error as CustomError;\r\n\r\n    return (\r\n        typeof customError.title !== 'undefined' &&\r\n        typeof customError.data !== 'undefined' &&\r\n        typeof customError.type !== 'undefined'\r\n    );\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\ninterface ErrorWithType extends RequestError {\r\n    type: string;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\r\n    obj: X,\r\n    key: Y,\r\n): obj is X & Record<Y, unknown> {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\r\n    return (\r\n        typeof error === 'object' &&\r\n        error !== null &&\r\n        hasOwnProperty(error, 'type') &&\r\n        typeof error.type === 'string'\r\n    );\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isRequestError(error: unknown): error is RequestError {\r\n    const requestError = error as RequestError;\r\n\r\n    return requestError.type === 'request';\r\n}\r\n","import { isEmpty, pickBy } from 'lodash';\r\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\r\n\r\nimport InjectHoc from './InjectHoc';\r\n\r\nexport interface InjectHocOptions<TInjectedProps> {\r\n    displayNamePrefix?: string;\r\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\r\n}\r\n\r\nexport default function createInjectHoc<\r\n    TInjectedProps extends object | undefined,\r\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\r\n>(\r\n    ContextComponent: Context<TInjectedProps>,\r\n    options?: InjectHocOptions<TInjectedProps>,\r\n): InjectHoc<NonNullable<TPickedProps>> {\r\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\r\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\r\n\r\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n            <OriginalComponent {...props} />\r\n        ));\r\n\r\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\r\n            const context = useContext(ContextComponent);\r\n            const injectedProps = pickBy(context, (value, key) =>\r\n                pickProps(value, key as keyof TInjectedProps),\r\n            );\r\n\r\n            if (isEmpty(injectedProps)) {\r\n                return null;\r\n            }\r\n\r\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\r\n\r\n            return <InnerDecoratedComponent {...mergedProps} />;\r\n        };\r\n\r\n        if (displayNamePrefix) {\r\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\r\n                OriginalComponent.displayName || OriginalComponent.name\r\n            })`;\r\n        }\r\n\r\n        return DecoratedComponent;\r\n    };\r\n}\r\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\r\n// we'll need to change the props of all components as readonly.\r\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\r\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\r\n","const DEFAULT_OPTIONS = {\r\n    count: 5,\r\n    interval: 1000,\r\n};\r\n\r\nexport interface RetryOptions {\r\n    count?: number;\r\n    interval?: number;\r\n}\r\n\r\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\r\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n    try {\r\n        return await fn();\r\n    } catch (error) {\r\n        if (count === 1) {\r\n            throw error;\r\n        }\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, interval));\r\n\r\n        return retry(fn, { interval, count: count - 1 });\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { withCurrency, WithCurrencyProps } from '../locale';\r\n\r\nexport interface ShopperCurrencyProps {\r\n    amount: number;\r\n}\r\n\r\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\r\n    amount,\r\n    currency,\r\n}) => <>{currency.toCustomerCurrency(amount)}</>;\r\n\r\nexport default withCurrency(ShopperCurrency);\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { PureComponent } from 'react';\r\n\r\nexport interface CheckoutButtonProps {\r\n    containerId: string;\r\n    methodId: string;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n}\r\n\r\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\r\n    componentDidMount() {\r\n        const { containerId, initialize, methodId, onError } = this.props;\r\n\r\n        initialize({\r\n            methodId,\r\n            [methodId]: {\r\n                container: containerId,\r\n                onError,\r\n            },\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { deinitialize, methodId } = this.props;\r\n\r\n        deinitialize({ methodId });\r\n    }\r\n\r\n    render() {\r\n        const { containerId } = this.props;\r\n\r\n        return <div id={containerId} />;\r\n    }\r\n}\r\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\r\n\r\nimport { navigateToOrderConfirmation } from '../../checkout';\r\nimport { LocaleContext } from '../../locale';\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    initialize,\r\n    onError,\r\n    ...rest\r\n}) => {\r\n    const localeContext = useContext(LocaleContext);\r\n    const initializeOptions = useCallback(\r\n        (options: CustomerInitializeOptions) =>\r\n            initialize({\r\n                ...options,\r\n                applepay: {\r\n                    container: rest.containerId,\r\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\r\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\r\n                    onError,\r\n                    onPaymentAuthorize: navigateToOrderConfirmation,\r\n                },\r\n            }),\r\n        [initialize, localeContext, onError, rest.containerId],\r\n    );\r\n\r\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\r\n};\r\n\r\nexport default ApplePayButton;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => (\r\n    <div className=\"AmazonPayContainer\">\r\n        <CheckoutButton {...props} />\r\n    </div>\r\n);\r\n\r\nexport default AmazonPayV2Button;\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { isApplePayWindow } from '../common/utility';\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport CheckoutButton from './CheckoutButton';\r\nimport { AmazonPayV2Button, ApplePayButton } from './customWalletButton';\r\n\r\nconst APPLE_PAY = 'applepay';\r\n\r\n// TODO: The API should tell UI which payment method offers its own checkout button\r\nexport const SUPPORTED_METHODS: string[] = [\r\n    'amazon',\r\n    'amazonpay',\r\n    APPLE_PAY,\r\n    'braintreevisacheckout',\r\n    'chasepay',\r\n    'masterpass',\r\n    'googlepayadyenv2',\r\n    'googlepayadyenv3',\r\n    'googlepayauthorizenet',\r\n    'googlepaybnz',\r\n    'googlepaybraintree',\r\n    'googlepaycheckoutcom',\r\n    'googlepaycybersourcev2',\r\n    'googlepayorbital',\r\n    'googlepaystripe',\r\n    'googlepaystripeupe',\r\n];\r\n\r\nexport interface CheckoutButtonListProps {\r\n    methodIds?: string[];\r\n    isInitializing?: boolean;\r\n    checkEmbeddedSupport?(methodIds: string[]): void;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n}\r\n\r\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\r\n    checkEmbeddedSupport,\r\n    onError,\r\n    isInitializing = false,\r\n    methodIds,\r\n    ...rest\r\n}) => {\r\n    const supportedMethodIds = (methodIds ?? []).filter((methodId) => {\r\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\r\n            return false;\r\n        }\r\n\r\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\r\n    });\r\n\r\n    if (supportedMethodIds.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (checkEmbeddedSupport) {\r\n        try {\r\n            checkEmbeddedSupport(supportedMethodIds);\r\n        } catch (error) {\r\n            if (error instanceof Error && onError) {\r\n                onError(error);\r\n            } else {\r\n                throw error;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isInitializing && (\r\n                <p>\r\n                    <TranslatedString id=\"remote.continue_with_text\" />\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"checkoutRemote\">\r\n                {supportedMethodIds.map((methodId) => {\r\n                    if (methodId === 'applepay') {\r\n                        return (\r\n                            <ApplePayButton\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (methodId === 'amazonpay') {\r\n                        return (\r\n                            <AmazonPayV2Button\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <CheckoutButton\r\n                            containerId={`${methodId}CheckoutButton`}\r\n                            key={methodId}\r\n                            methodId={methodId}\r\n                            onError={onError}\r\n                            {...rest}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutButtonList);\r\n","interface ApplePayWindow extends Window {\r\n    ApplePaySession: void;\r\n}\r\n\r\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\r\n    return 'ApplePaySession' in window;\r\n}\r\n","enum CustomerViewType {\r\n    Guest = 'guest',\r\n    Login = 'login',\r\n    SuggestedLogin = 'suggested_login',\r\n    EnforcedLogin = 'enforced_login',\r\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\r\n    CreateAccount = 'create_account',\r\n}\r\n\r\nexport default CustomerViewType;\r\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nexport interface PasswordRequirements {\r\n    minLength: number;\r\n    alpha: RegExp;\r\n    numeric: RegExp;\r\n    description?: string;\r\n}\r\n\r\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\r\n    const {\r\n        passwordRequirements: { minlength, error: description, alpha, numeric },\r\n    } = config;\r\n\r\n    return getPasswordRequirements({\r\n        minlength,\r\n        description,\r\n        alpha,\r\n        numeric,\r\n    });\r\n}\r\n\r\nexport default function getPasswordRequirements({\r\n    minlength,\r\n    description,\r\n    alpha,\r\n    numeric,\r\n}: CustomerPasswordRequirements): PasswordRequirements {\r\n    const allSlashes = new RegExp('/', 'g');\r\n\r\n    return {\r\n        minLength: minlength,\r\n        description,\r\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\r\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\r\n    };\r\n}\r\n","import { assign, kebabCase, map, pickBy } from 'lodash';\r\n\r\nexport default function toCSSRule(\r\n    selector: string,\r\n    ...styles: Array<{ [key: string]: any } | undefined>\r\n): string {\r\n    const mergedStyles = assign({}, ...styles);\r\n    const props = map(\r\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\r\n        (value, key) => `${kebabCase(key)}: ${value};`,\r\n    ).join(' ');\r\n\r\n    return `${selector} {${props}}`;\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { toCSSRule } from '../common/dom';\r\n\r\nexport default class EmbeddedCheckoutStyleParser {\r\n    parse(styles: EmbeddedCheckoutStyles): string[] {\r\n        const rules: string[] = [];\r\n\r\n        if (styles.body) {\r\n            rules.push(toCSSRule('body', styles.body));\r\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\r\n        }\r\n\r\n        if (styles.text) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\r\n        }\r\n\r\n        if (styles.secondaryText) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\r\n        }\r\n\r\n        if (styles.heading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\r\n        }\r\n\r\n        if (styles.secondaryHeading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\r\n        }\r\n\r\n        if (styles.link) {\r\n            rules.push(toCSSRule('a', styles.link));\r\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\r\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\r\n        }\r\n\r\n        if (styles.label) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-label',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .form-inlineMessage',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.button) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:active',\r\n                    styles.button,\r\n                    styles.button.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:focus',\r\n                    styles.button,\r\n                    styles.button.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:hover',\r\n                    styles.button,\r\n                    styles.button.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.secondaryButton) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.input) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-input::placeholder',\r\n                    styles.input,\r\n                    styles.input.placeholder,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:focus',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:hover',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.select) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.checkbox) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.radio) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.step) {\r\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\r\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\r\n        }\r\n\r\n        if (styles.checklist) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item:hover',\r\n                    styles.checklist,\r\n                    styles.checklist.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item--selected',\r\n                    styles.checklist,\r\n                    styles.checklist.checked,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.discountBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\r\n        }\r\n\r\n        if (styles.loadingBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\r\n        }\r\n\r\n        if (styles.orderSummary) {\r\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\r\n            );\r\n        }\r\n\r\n        return rules;\r\n    }\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { appendStylesheet } from '../common/dom';\r\n\r\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\n\r\nexport default class EmbeddedCheckoutStylesheet {\r\n    private _parser: EmbeddedCheckoutStyleParser;\r\n\r\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\r\n        this._parser = embeddedCheckoutStyleParser;\r\n    }\r\n\r\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\r\n        return appendStylesheet(this._parser.parse(styles));\r\n    }\r\n}\r\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\r\n    const style = document.createElement('style');\r\n\r\n    document.head.appendChild(style);\r\n\r\n    if (style.sheet instanceof CSSStyleSheet) {\r\n        const { sheet } = style;\r\n\r\n        rules.forEach((rule, index) => {\r\n            sheet.insertRule(rule, index);\r\n        });\r\n    }\r\n\r\n    return style;\r\n}\r\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\r\n\r\nexport default function createEmbeddedCheckoutStylesheet() {\r\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\r\n\r\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\r\n}\r\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\r\n    const basePath = `/${pathname.split('/')[1]}`;\r\n\r\n    return basePath === '/embedded-checkout';\r\n}\r\n","import { FormField } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from '@bigcommerce/memoize';\r\nimport {\r\n    array,\r\n    ArraySchema,\r\n    date,\r\n    number,\r\n    NumberSchema,\r\n    object,\r\n    ObjectSchema,\r\n    Schema,\r\n    string,\r\n} from 'yup';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type TranslateValidationErrorFunction = (\r\n    validationType: 'max' | 'min' | 'required' | 'invalid',\r\n    field: {\r\n        name: string;\r\n        label: string;\r\n        min?: number;\r\n        max?: number;\r\n    },\r\n) => string | undefined;\r\n\r\nexport interface FormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    translate?: TranslateValidationErrorFunction;\r\n}\r\n\r\nexport interface CustomFormFieldValues {\r\n    customFields: CustomFormFields;\r\n}\r\n\r\nexport interface CustomFormFields {\r\n    [id: string]: string | string[] | number;\r\n}\r\n\r\nexport default memoize(function getCustomFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\r\n    return object({\r\n        customFields: object(\r\n            formFields\r\n                .filter(({ custom }) => !!custom)\r\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\r\n                    let maxValue: number | undefined;\r\n                    let minValue: number | undefined;\r\n\r\n                    if (type === 'date') {\r\n                        schema[name] = date()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\r\n                            // validation when it's optional\r\n                            .strict(true)\r\n                            .nullable(true)\r\n                            .transform((value, originalValue) =>\r\n                                originalValue === '' ? null : value,\r\n                            );\r\n                    } else if (type === 'integer') {\r\n                        schema[name] = number()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\r\n                            // validation when it's optional\r\n                            .strict(true)\r\n                            .transform((value) => (isNaN(value) ? undefined : value));\r\n\r\n                        maxValue = typeof max === 'number' ? max : undefined;\r\n                        minValue = typeof min === 'number' ? min : undefined;\r\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\r\n                        schema[name] = array();\r\n                    } else {\r\n                        schema[name] = string();\r\n                    }\r\n\r\n                    if (maxValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).max(\r\n                            maxValue,\r\n                            translate('max', { label, name, max: maxValue + 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (minValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).min(\r\n                            minValue,\r\n                            translate('min', { label, name, min: minValue - 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (required) {\r\n                        const requiredErrorMessage = translate('required', { name, label });\r\n\r\n                        schema[name] =\r\n                            fieldType === DynamicFormFieldType.checkbox\r\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\r\n                                : (schema[name] as ArraySchema<string>).required(\r\n                                      requiredErrorMessage,\r\n                                  );\r\n                    }\r\n\r\n                    return schema;\r\n                }, {} as { [key: string]: Schema<any> }),\r\n        ).nullable(true),\r\n    }) as ObjectSchema<CustomFormFieldValues>;\r\n});\r\n","import {\r\n    CheckoutPayment,\r\n    GiftCertificateOrderPayment,\r\n    OrderPayment,\r\n} from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isGiftCertificatePayment(\r\n    payment: OrderPayment | CheckoutPayment,\r\n): payment is GiftCertificateOrderPayment {\r\n    return payment.providerId === 'giftcertificate';\r\n}\r\n","// `document.currentScript` can only be called at the global level as it only\r\n// holds a reference to the script when it is initially processed.\r\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\r\n\r\nexport default function getCurrentScriptPath(): string | undefined {\r\n    return path;\r\n}\r\n","import getCurrentScriptPath from './getCurrentScriptPath';\r\n\r\nexport default function configurePublicPath(publicPath?: string): string {\r\n    if (!publicPath) {\r\n        const scriptPath = getCurrentScriptPath();\r\n\r\n        if (!scriptPath) {\r\n            throw new Error(\r\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\r\n            );\r\n        }\r\n\r\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\r\n\r\n        return __webpack_public_path__;\r\n    }\r\n\r\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\r\n\r\n    return __webpack_public_path__;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { CheckoutAppProps } from './CheckoutApp';\r\n\r\nexport type RenderCheckoutOptions = CheckoutAppProps;\r\nexport type RenderCheckout = typeof renderCheckout;\r\n\r\nexport default function renderCheckout({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderCheckoutOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: CheckoutApp } = require('./CheckoutApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\r\n\r\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\r\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\r\n\r\nexport default function renderOrderConfirmation({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderOrderConfirmationOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <OrderConfirmationApp\r\n            containerId={containerId}\r\n            publicPath={configuredPublicPath}\r\n            {...props}\r\n        />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext } from 'react';\r\n\r\nexport interface LocaleContextType {\r\n    language: LanguageService;\r\n    date?: {\r\n        inputFormat: string;\r\n    };\r\n    currency?: CurrencyService;\r\n}\r\n\r\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\r\n\r\nexport default LocaleContext;\r\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport getLanguageService from './getLanguageService';\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface LocaleProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface LocaleProviderState {\r\n    config?: StoreConfig;\r\n}\r\n\r\nclass LocaleProvider extends Component<LocaleProviderProps> {\r\n    state: Readonly<LocaleProviderState> = {};\r\n\r\n    private languageService = getLanguageService();\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\r\n        return {\r\n            currency: config ? createCurrencyService(config) : undefined,\r\n            date: config\r\n                ? {\r\n                      inputFormat: config.inputDateFormat,\r\n                  }\r\n                : undefined,\r\n            language: this.languageService,\r\n        };\r\n    });\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe(\r\n            ({ data }) => {\r\n                this.setState({ config: data.getConfig() });\r\n            },\r\n            ({ data }) => data.getConfig(),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { config } = this.state;\r\n\r\n        return (\r\n            <LocaleContext.Provider value={this.getContextValue(config)}>\r\n                {children}\r\n            </LocaleContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocaleProvider;\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport withLanguage, { WithLanguageProps } from './withLanguage';\r\n\r\nexport interface TranslatedHtmlProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nconst TranslatedHtml: FunctionComponent<TranslatedHtmlProps & WithLanguageProps> = ({\r\n    data,\r\n    id,\r\n    language,\r\n}) => (\r\n    <span\r\n        dangerouslySetInnerHTML={{\r\n            __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\r\n        }}\r\n    />\r\n);\r\n\r\nexport default withLanguage(TranslatedHtml);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withLanguage, { WithLanguageProps } from './withLanguage';\r\n\r\nexport interface TranslatedStringProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nconst TranslatedString: FunctionComponent<TranslatedStringProps & WithLanguageProps> = ({\r\n    data,\r\n    id,\r\n    language,\r\n}) => <>{language.translate(id, data)}</>;\r\n\r\nexport default withLanguage(TranslatedString);\r\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\r\n\r\nlet languageService: LanguageService | undefined;\r\n\r\nexport default function getLanguageService(): LanguageService {\r\n    languageService =\r\n        languageService ??\r\n        createLanguageService({\r\n            fallbackLocale: FALLBACK_LOCALE,\r\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n        });\r\n\r\n    return languageService;\r\n}\r\n\r\nexport type InitializeLanguageService = typeof initializeLanguageService;\r\n\r\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\r\n    languageService = createLanguageService({\r\n        ...config,\r\n        defaultLocale: config.locale,\r\n        defaultTranslations: config.defaultTranslations,\r\n        fallbackLocale: FALLBACK_LOCALE,\r\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n    });\r\n\r\n    return languageService;\r\n}\r\n","import FALLBACK_TRANSLATIONS from './en.json';\r\n\r\nexport const FALLBACK_LOCALE = 'en';\r\n\r\nexport { FALLBACK_TRANSLATIONS };\r\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { createInjectHoc, InjectHoc } from '../common/hoc';\r\n\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface WithCurrencyProps {\r\n    currency: CurrencyService;\r\n}\r\n\r\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithCurrency',\r\n    pickProps: (value, key) => key === 'currency' && !!value,\r\n});\r\n\r\nexport default withCurrency;\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { createInjectHoc, InjectHoc } from '../common/hoc';\r\n\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface WithLanguageProps {\r\n    language: LanguageService;\r\n}\r\n\r\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithLanguage',\r\n    pickProps: (value, key) => key === 'language' && !!value,\r\n});\r\n\r\nexport default withLanguage;\r\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\r\n\r\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\r\n\r\nexport interface CustomerCreateRequestBody {\r\n    confirmPassword: string;\r\n    newsletter: boolean;\r\n    orderId: number;\r\n    password: string;\r\n}\r\n\r\nexport default class AccountService {\r\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\r\n\r\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\r\n        return this.requestSender\r\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\r\n            .then((response) => response.body.data.customer);\r\n    }\r\n}\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { FormField, TextInput } from '../ui/form';\r\n\r\nexport interface PasswordField {\r\n    minLength: number;\r\n}\r\n\r\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\r\n    const renderPasswordInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const renderPasswordConfirmationInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const passwordLabelContent = useMemo(\r\n        () => (\r\n            <>\r\n                <TranslatedString id=\"customer.password_label\" />{' '}\r\n                <small>\r\n                    {`${minLength}-`}\r\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\r\n                </small>\r\n            </>\r\n        ),\r\n        [minLength],\r\n    );\r\n\r\n    const passwordConfirmationLabelContent = useMemo(\r\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <FormField\r\n                input={renderPasswordInput}\r\n                labelContent={passwordLabelContent}\r\n                name=\"password\"\r\n            />\r\n\r\n            <FormField\r\n                input={renderPasswordConfirmationInput}\r\n                labelContent={passwordConfirmationLabelContent}\r\n                name=\"confirmPassword\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(SignUpPasswordField);\r\n","import { FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo } from 'react';\r\nimport { object, ref, string } from 'yup';\r\n\r\nimport { PasswordRequirements } from '../customer';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '../locale';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport SignUpPasswordField from './SignUpPasswordField';\r\n\r\nexport interface SignUpFormProps {\r\n    isSigningUp?: boolean;\r\n    customerCanBeCreated: boolean;\r\n    passwordRequirements: PasswordRequirements;\r\n    onSignUp(data: SignUpFormValues): void;\r\n}\r\n\r\nexport interface SignUpFormValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\nconst GuestSignUpForm: FunctionComponent<\r\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\r\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\r\n    <Fieldset\r\n        legend={\r\n            <Legend>\r\n                <TranslatedString\r\n                    id={\r\n                        customerCanBeCreated\r\n                            ? 'customer.create_account_text'\r\n                            : 'customer.set_password_text'\r\n                    }\r\n                />\r\n            </Legend>\r\n        }\r\n    >\r\n        {!customerCanBeCreated && (\r\n            <p>\r\n                <TranslatedString id=\"customer.account_created_text\" />\r\n            </p>\r\n        )}\r\n\r\n        <Form className=\"guest-signup form\">\r\n            <SignUpPasswordField minLength={minLength} />\r\n\r\n            <div className=\"form-actions\">\r\n                <Button\r\n                    id=\"createAccountButton\"\r\n                    isLoading={isSigningUp}\r\n                    type=\"submit\"\r\n                    variant={ButtonVariant.Primary}\r\n                >\r\n                    <TranslatedString\r\n                        id={\r\n                            customerCanBeCreated\r\n                                ? 'customer.create_account_action'\r\n                                : 'customer.set_password_action'\r\n                        }\r\n                    />\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    </Fieldset>\r\n);\r\n\r\nexport default withLanguage(\r\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\r\n        mapPropsToValues: () => ({\r\n            password: '',\r\n            confirmPassword: '',\r\n        }),\r\n        handleSubmit: (values, { props: { onSignUp } }) => {\r\n            onSignUp(values);\r\n        },\r\n        validationSchema: ({\r\n            language,\r\n            passwordRequirements: { description, numeric, alpha, minLength },\r\n        }: SignUpFormProps & WithLanguageProps) =>\r\n            object({\r\n                password: string()\r\n                    .required(description || language.translate('customer.password_required_error'))\r\n                    .matches(\r\n                        numeric,\r\n                        description ||\r\n                            language.translate('customer.password_number_required_error'),\r\n                    )\r\n                    .matches(\r\n                        alpha,\r\n                        description ||\r\n                            language.translate('customer.password_letter_required_error'),\r\n                    )\r\n                    .min(\r\n                        minLength,\r\n                        description ||\r\n                            language.translate('customer.password_under_minimum_length_error'),\r\n                    )\r\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\r\n                confirmPassword: string()\r\n                    .required(language.translate('customer.password_confirmation_required_error'))\r\n                    .oneOf(\r\n                        [ref('password')],\r\n                        language.translate('customer.password_confirmation_error'),\r\n                    ),\r\n            }),\r\n    })(memo(GuestSignUpForm)),\r\n);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.set_password_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default PasswordSavedSuccessAlert;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst SignedUpSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.create_account_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default SignedUpSuccessAlert;\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\nimport { getLanguageService } from '../../locale';\r\n\r\nexport default class AccountCreationRequirementsError extends CustomError {\r\n    constructor(data: Error, requirements: string) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\r\n            message: requirements,\r\n            title: getLanguageService().translate(\r\n                'customer.create_account_requirements_error_heading',\r\n            ),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\r\n    }\r\n}\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\nimport { getLanguageService } from '../../locale';\r\n\r\nexport default class AccountCreationFailedError extends CustomError {\r\n    constructor(data: Error) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_FAILED',\r\n            message: getLanguageService().translate('customer.create_account_error'),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\r\n    }\r\n}\r\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isGiftCertificatePayment } from '../giftCertificate';\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport interface PaymentInstructionsProps {\r\n    order: Order;\r\n}\r\n\r\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\r\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\r\n}\r\n\r\nfunction getPaymentInstructions(order: Order): string {\r\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\r\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\r\n\r\n    return instructions || '';\r\n}\r\n\r\nexport default getPaymentInstructions;\r\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\r\n\r\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\r\n\r\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\r\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\r\n        code: detail.code,\r\n        remaining: detail.remaining,\r\n        used: amount,\r\n        balance: amount + detail.remaining,\r\n        purchaseDate: '',\r\n    }));\r\n}\r\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\r\n    return (payments || [])\r\n        .filter(isStoreCreditPayment)\r\n        .reduce((total, payment) => total + payment.amount, 0);\r\n}\r\n","import { Order } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { mapFromPayments } from '../giftCertificate';\r\n\r\nimport getStoreCreditAmount from './getStoreCreditAmount';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    baseAmount,\r\n    discountAmount,\r\n    shippingCostBeforeDiscount,\r\n    payments,\r\n    handlingCostTotal,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n}: Order): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: baseAmount,\r\n        shippingAmount: shippingCostBeforeDiscount,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        discountAmount,\r\n        storeCreditAmount: getStoreCreditAmount(payments),\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        giftCertificates: payments && mapFromPayments(payments),\r\n        taxes,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\r\n    <section className=\"orderConfirmation-section\">{children}</section>\r\n);\r\n\r\nexport default OrderConfirmationSection;\r\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedHtml, TranslatedString } from '../locale';\r\n\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\n\r\nexport interface OrderStatusProps {\r\n    supportEmail: string;\r\n    supportPhoneNumber?: string;\r\n    order: Order;\r\n}\r\n\r\ntype PaymentWithMandate = GatewayOrderPayment &\r\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\r\n\r\nconst isPaymentWithMandate = (\r\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\r\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\r\n\r\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\r\n    order,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\r\n\r\n    return (\r\n        <OrderConfirmationSection>\r\n            {order.orderId && (\r\n                <p data-test=\"order-confirmation-order-number-text\">\r\n                    <TranslatedHtml\r\n                        data={{ orderNumber: order.orderId }}\r\n                        id=\"order_confirmation.order_number_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n\r\n            <p data-test=\"order-confirmation-order-status-text\">\r\n                <OrderStatusMessage\r\n                    orderNumber={order.orderId}\r\n                    orderStatus={order.status}\r\n                    supportEmail={supportEmail}\r\n                    supportPhoneNumber={supportPhoneNumber}\r\n                />\r\n            </p>\r\n            {paymentsWithMandates.map((payment) => {\r\n                if (payment.mandate.url) {\r\n                    return (\r\n                        <a\r\n                            data-test=\"order-confirmation-mandate-link-text\"\r\n                            href={payment.mandate.url}\r\n                            key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <TranslatedString\r\n                                id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                            />\r\n                        </a>\r\n                    );\r\n                } else if (payment.mandate.id) {\r\n                    return (\r\n                        <p\r\n                            data-test=\"order-confirmation-mandate-id-text\"\r\n                            key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                        >\r\n                            <TranslatedString\r\n                                data={{ mandate: payment.mandate.id }}\r\n                                id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                            />\r\n                        </p>\r\n                    );\r\n                }\r\n            })}\r\n\r\n            {order.hasDigitalItems && (\r\n                <p data-test=\"order-confirmation-digital-items-text\">\r\n                    <TranslatedHtml\r\n                        id={\r\n                            order.isDownloadable\r\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\r\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\r\n                        }\r\n                    />\r\n                </p>\r\n            )}\r\n        </OrderConfirmationSection>\r\n    );\r\n};\r\n\r\ninterface OrderStatusMessageProps {\r\n    orderNumber: number;\r\n    orderStatus: string;\r\n    supportEmail?: string;\r\n    supportPhoneNumber?: string;\r\n}\r\n\r\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\r\n    orderNumber,\r\n    orderStatus,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    switch (orderStatus) {\r\n        case 'MANUAL_VERIFICATION_REQUIRED':\r\n        case 'AWAITING_PAYMENT':\r\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\r\n\r\n        case 'PENDING':\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_pending_status_text\"\r\n                />\r\n            );\r\n\r\n        case 'INCOMPLETE':\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_incomplete_status_text\"\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\r\n                    id={\r\n                        supportPhoneNumber\r\n                            ? 'order_confirmation.order_with_support_number_text'\r\n                            : 'order_confirmation.order_without_support_number_text'\r\n                    }\r\n                />\r\n            );\r\n    }\r\n};\r\n\r\nexport default memo(OrderStatus);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconPrint: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconPrint);\r\n","import { throttle } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { TranslatedString } from '../locale';\r\nimport { IconPrint } from '../ui/icon';\r\n\r\nexport interface PrintLinkProps {\r\n    className?: string;\r\n}\r\n\r\nconst PRINT_MODAL_THROTTLE = 500;\r\n\r\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\r\n    const handleClick = useCallback(\r\n        throttle(() => {\r\n            window.print();\r\n        }, PRINT_MODAL_THROTTLE),\r\n        [],\r\n    );\r\n\r\n    if (typeof window.print !== 'function') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <a\r\n            className={className || 'cart-header-link'}\r\n            href=\"#\"\r\n            id=\"cart-print-link\"\r\n            onClick={preventDefault(handleClick)}\r\n        >\r\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default memo(PrintLink);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface HeaderProps {\r\n    testId?: string;\r\n}\r\n\r\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\r\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\r\n        {children}\r\n    </h1>\r\n);\r\n\r\nexport default PrimaryHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { PrimaryHeader } from '../ui/header';\r\n\r\nexport interface HeaderProps {\r\n    name?: string;\r\n}\r\n\r\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\r\n    <PrimaryHeader testId=\"order-confirmation-heading\">\r\n        {name && (\r\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\r\n        )}\r\n\r\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\r\n    </PrimaryHeader>\r\n);\r\n\r\nexport default memo(ThankYouHeader);\r\n","import {\r\n    CheckoutSelectors,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    Order,\r\n    ShopperConfig,\r\n    StoreConfig,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport DOMPurify from 'dompurify';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { CheckoutContextProps, withCheckout } from '../checkout';\r\nimport { ErrorLogger, ErrorModal } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport { getPasswordRequirementsFromConfig } from '../customer';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport {\r\n    CreatedCustomer,\r\n    GuestSignUpForm,\r\n    PasswordSavedSuccessAlert,\r\n    SignedUpSuccessAlert,\r\n    SignUpFormValues,\r\n} from '../guestSignup';\r\nimport {\r\n    AccountCreationFailedError,\r\n    AccountCreationRequirementsError,\r\n} from '../guestSignup/errors';\r\nimport { TranslatedString } from '../locale';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport getPaymentInstructions from './getPaymentInstructions';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\nimport OrderStatus from './OrderStatus';\r\nimport PrintLink from './PrintLink';\r\nimport ThankYouHeader from './ThankYouHeader';\r\n\r\nconst OrderSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary\" */\r\n                './OrderSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst OrderSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary-drawer\" */\r\n                './OrderSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface OrderConfirmationState {\r\n    error?: Error;\r\n    hasSignedUp?: boolean;\r\n    isSigningUp?: boolean;\r\n}\r\n\r\nexport interface OrderConfirmationProps {\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    errorLogger: ErrorLogger;\r\n    orderId: number;\r\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\ninterface WithCheckoutOrderConfirmationProps {\r\n    order?: Order;\r\n    config?: StoreConfig;\r\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\r\n    isLoadingOrder(): boolean;\r\n}\r\n\r\nclass OrderConfirmation extends Component<\r\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\r\n    OrderConfirmationState\r\n> {\r\n    state: OrderConfirmationState = {};\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n\r\n    componentDidMount(): void {\r\n        const {\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            loadOrder,\r\n            orderId,\r\n            analyticsTracker\r\n        } = this.props;\r\n\r\n        loadOrder(orderId)\r\n            .then(({ data }) => {\r\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\r\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n                this.embeddedMessenger = messenger;\r\n\r\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n                messenger.postFrameLoaded({ contentId: containerId });\r\n\r\n                analyticsTracker.orderPurchased();\r\n            })\r\n            .catch(this.handleUnhandledError);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { order, config, isLoadingOrder } = this.props;\r\n\r\n        if (!order || !config || isLoadingOrder()) {\r\n            return <LoadingSpinner isLoading={true} />;\r\n        }\r\n\r\n        const paymentInstructions = getPaymentInstructions(order);\r\n        const {\r\n            storeProfile: { orderEmail, storePhoneNumber },\r\n            shopperConfig,\r\n            links: { siteLink },\r\n        } = config;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('layout optimizedCheckout-contentPrimary', {\r\n                    'is-embedded': isEmbedded(),\r\n                })}\r\n            >\r\n                <div className=\"layout-main\">\r\n                    <div className=\"orderConfirmation\">\r\n                        <ThankYouHeader name={order.billingAddress.firstName} />\r\n\r\n                        <OrderStatus\r\n                            order={order}\r\n                            supportEmail={orderEmail}\r\n                            supportPhoneNumber={storePhoneNumber}\r\n                        />\r\n\r\n                        {paymentInstructions && (\r\n                            <OrderConfirmationSection>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: DOMPurify.sanitize(paymentInstructions),\r\n                                    }}\r\n                                    data-test=\"payment-instructions\"\r\n                                />\r\n                            </OrderConfirmationSection>\r\n                        )}\r\n\r\n                        {this.renderGuestSignUp({\r\n                            shouldShowPasswordForm: order.customerCanBeCreated,\r\n                            customerCanBeCreated: !order.customerId,\r\n                            shopperConfig,\r\n                        })}\r\n\r\n                        <div className=\"continueButtonContainer\">\r\n                            <form action={siteLink} method=\"get\" target=\"_top\">\r\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\r\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.renderOrderSummary()}\r\n                {this.renderErrorModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderGuestSignUp({\r\n        customerCanBeCreated,\r\n        shouldShowPasswordForm,\r\n        shopperConfig,\r\n    }: {\r\n        customerCanBeCreated: boolean;\r\n        shouldShowPasswordForm: boolean;\r\n        shopperConfig: ShopperConfig;\r\n    }): ReactNode {\r\n        const { isSigningUp, hasSignedUp } = this.state;\r\n\r\n        const { order } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {shouldShowPasswordForm && !hasSignedUp && (\r\n                    <GuestSignUpForm\r\n                        customerCanBeCreated={customerCanBeCreated}\r\n                        isSigningUp={isSigningUp}\r\n                        onSignUp={this.handleSignUp}\r\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\r\n                    />\r\n                )}\r\n\r\n                {hasSignedUp &&\r\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderOrderSummary(): ReactNode {\r\n        const { order, config } = this.props;\r\n\r\n        if (!order || !config) {\r\n            return null;\r\n        }\r\n\r\n        const { currency, shopperCurrency } = config;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <OrderSummaryDrawer\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    headerLink={\r\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\r\n                                    }\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <OrderSummary\r\n                                    headerLink={<PrintLink />}\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private renderErrorModal(): ReactNode {\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <ErrorModal\r\n                error={error}\r\n                onClose={this.handleErrorModalClose}\r\n                shouldShowErrorCode={false}\r\n            />\r\n        );\r\n    }\r\n\r\n    private handleErrorModalClose: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\r\n        const { createAccount, config } = this.props;\r\n\r\n        const shopperConfig = config && config.shopperConfig;\r\n        const passwordRequirements =\r\n            (shopperConfig &&\r\n                shopperConfig.passwordRequirements &&\r\n                shopperConfig.passwordRequirements.error) ||\r\n            '';\r\n\r\n        this.setState({\r\n            isSigningUp: true,\r\n        });\r\n\r\n        createAccount({\r\n            password,\r\n            confirmPassword,\r\n        })\r\n            .then(() => {\r\n                this.setState({\r\n                    hasSignedUp: true,\r\n                    isSigningUp: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    error:\r\n                        error.status < 500\r\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\r\n                            : new AccountCreationFailedError(error),\r\n                    hasSignedUp: false,\r\n                    isSigningUp: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        this.setState({ error });\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport function mapToOrderConfirmationProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutOrderConfirmationProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getOrder, getConfig },\r\n            statuses: { isLoadingOrder },\r\n        },\r\n        checkoutService,\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n    const order = getOrder();\r\n\r\n    return {\r\n        config,\r\n        isLoadingOrder,\r\n        loadOrder: checkoutService.loadOrder,\r\n        order,\r\n    };\r\n}\r\n\r\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\n\r\nimport '../../scss/App.scss';\r\nimport { CheckoutProvider } from '../checkout';\r\nimport { createErrorLogger, ErrorBoundary, ErrorLogger } from '../common/error';\r\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\r\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\r\nimport { getLanguageService, LocaleProvider } from '../locale';\r\n\r\nimport OrderConfirmation from './OrderConfirmation';\r\n\r\nexport interface OrderConfirmationAppProps {\r\n    containerId: string;\r\n    orderId: number;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n}\r\n\r\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\r\n    private accountService = new AccountService();\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\r\n        super(props);\r\n\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <ErrorBoundary logger={this.errorLogger}>\r\n                <LocaleProvider checkoutService={this.checkoutService}>\r\n                    <CheckoutProvider checkoutService={this.checkoutService}>\r\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\r\n                            <OrderConfirmation\r\n                                {...this.props}\r\n                                createAccount={this.createAccount}\r\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                embeddedStylesheet={this.embeddedStylesheet}\r\n                                errorLogger={this.errorLogger}\r\n                            />\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        const { orderId } = this.props;\r\n\r\n        return this.accountService.create({\r\n            orderId,\r\n            newsletter: false,\r\n            password,\r\n            confirmPassword,\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderConfirmationApp;\r\n","enum PaymentMethodId {\r\n    Adyen = 'adyen',\r\n    AdyenV2 = 'adyenv2',\r\n    AdyenV2GooglePay = 'googlepayadyenv2',\r\n    AdyenV3GooglePay = 'googlepayadyenv3',\r\n    AdyenV3 = 'adyenv3',\r\n    Affirm = 'affirm',\r\n    Afterpay = 'afterpay',\r\n    Amazon = 'amazon',\r\n    AmazonPay = 'amazonpay',\r\n    ApplePay = 'applepay',\r\n    Barclaycard = 'barclaycard',\r\n    BlueSnapV2 = 'bluesnapv2',\r\n    Boleto = 'boleto',\r\n    Bolt = 'bolt',\r\n    Braintree = 'braintree',\r\n    BraintreeVenmo = 'braintreevenmo',\r\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\r\n    BNZGooglePay = 'googlepaybnz',\r\n    BraintreeGooglePay = 'googlepaybraintree',\r\n    BraintreeVisaCheckout = 'braintreevisacheckout',\r\n    BraintreePaypalCredit = 'braintreepaypalcredit',\r\n    CBAMPGS = 'cba_mpgs',\r\n    CCAvenueMars = 'ccavenuemars',\r\n    ChasePay = 'chasepay',\r\n    Checkoutcom = 'checkoutcom',\r\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\r\n    Clearpay = 'clearpay',\r\n    Converge = 'converge',\r\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\r\n    DigitalRiver = 'digitalriver',\r\n    Fawry = 'fawry',\r\n    Humm = 'humm',\r\n    Ideal = 'ideal',\r\n    Klarna = 'klarna',\r\n    Laybuy = 'laybuy',\r\n    Masterpass = 'masterpass',\r\n    Mollie = 'mollie',\r\n    Moneris = 'moneris',\r\n    Opy = 'opy',\r\n    OrbitalGooglePay = 'googlepayorbital',\r\n    Oxxo = 'oxxo',\r\n    PaypalExpress = 'paypalexpress',\r\n    PaypalPaymentsPro = 'paypal',\r\n    PaypalCommerce = 'paypalcommerce',\r\n    PaypalCommerceCredit = 'paypalcommercecredit',\r\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\r\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\r\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\r\n    Qpay = 'qpay',\r\n    Quadpay = 'quadpay',\r\n    SagePay = 'sagepay',\r\n    Sepa = 'sepa',\r\n    Sezzle = 'sezzle',\r\n    SquareV2 = 'squarev2',\r\n    StripeGooglePay = 'googlepaystripe',\r\n    StripeUPEGooglePay = 'googlepaystripeupe',\r\n    StripeV3 = 'stripev3',\r\n    StripeUPE = 'stripeupe',\r\n    WorldpayAccess = 'worldpayaccess',\r\n    Zip = 'zip',\r\n}\r\n\r\nexport default PaymentMethodId;\r\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\r\n    return payment.providerId === 'storecredit';\r\n}\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nimport findLineItems from './findLineItems';\r\nimport getLineItemsCount from './getLineItemsCount';\r\n\r\nexport interface StaticConsignmentItemListProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n}\r\n\r\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\r\n    cart,\r\n    consignment,\r\n}) => {\r\n    const lineItems = findLineItems(cart, consignment);\r\n\r\n    return (\r\n        <div className=\"staticConsignment-items\">\r\n            <strong>\r\n                <TranslatedString\r\n                    data={{ count: getLineItemsCount(lineItems) }}\r\n                    id=\"cart.item_count_text\"\r\n                />\r\n            </strong>\r\n\r\n            <ul>\r\n                {lineItems.map((item) => (\r\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticConsignmentItemList);\r\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport { compact, find, isNil, map } from 'lodash';\r\n\r\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\r\n    return compact(\r\n        map(consignment.lineItemIds, (itemId) =>\r\n            find(\r\n                cart.lineItems.physicalItems,\r\n                (item) => item.id === itemId && isNil(item.parentId),\r\n            ),\r\n        ),\r\n    );\r\n}\r\n","import { LineItem } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\r\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\r\n}\r\n","import { Consignment } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\r\n    if (!consignments.length) {\r\n        return false;\r\n    }\r\n\r\n    return every(\r\n        consignments,\r\n        (consignment) =>\r\n            consignment.selectedShippingOption &&\r\n            consignment.selectedShippingOption.id &&\r\n            // Selected option is available\r\n            consignment.availableShippingOptions &&\r\n            consignment.availableShippingOptions.filter(\r\n                ({ id }) => id === consignment.selectedShippingOption?.id,\r\n            ).length,\r\n    );\r\n}\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function hasUnassignedLineItems(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    const totalAssigned = reduce(\r\n        consignments,\r\n        (total, consignment) => total + consignment.lineItemIds.length,\r\n        0,\r\n    );\r\n\r\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\r\n}\r\n","import React, { memo } from 'react';\r\n\r\nimport { preventDefault } from '../../common/dom';\r\nimport { TranslatedString } from '../../locale';\r\nimport { Toggle } from '../../ui/toggle';\r\n\r\ninterface ShippingOptionAdditionalDescriptionProps {\r\n    description: string;\r\n}\r\n\r\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\r\n    ShippingOptionAdditionalDescriptionProps\r\n> = ({ description }) => {\r\n    const CHRACTER_LIMIT = 45;\r\n\r\n    return (\r\n        <div className=\"shippingOption-additionalDescription--container\">\r\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\r\n                {({ isOpen, toggle }) => (\r\n                    <>\r\n                        <span\r\n                            className={`shippingOption-additionalDescription ${\r\n                                isOpen\r\n                                    ? 'shippingOption-additionalDescription--expanded'\r\n                                    : 'shippingOption-additionalDescription--collapsed'\r\n                            }`}\r\n                        >\r\n                            {description}\r\n                        </span>\r\n                        {!isOpen && (\r\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\r\n                                <TranslatedString id=\"common.show_more\" />\r\n                            </a>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Toggle>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ShippingOptionAdditionalDescription);\r\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { ShopperCurrency } from '../../currency';\r\n\r\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\r\nimport './StaticShippingOption.scss';\r\n\r\ninterface StaticShippingOptionProps {\r\n    displayAdditionalInformation?: boolean;\r\n    method: ShippingOption;\r\n}\r\n\r\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\r\n    displayAdditionalInformation = true,\r\n    method,\r\n}) => {\r\n    return (\r\n        <div className=\"shippingOption shippingOption--alt\">\r\n            {method.imageUrl && (\r\n                <span className=\"shippingOption-figure\">\r\n                    <img\r\n                        alt={method.description}\r\n                        className=\"shippingOption-img\"\r\n                        src={method.imageUrl}\r\n                    />\r\n                </span>\r\n            )}\r\n            <span className=\"shippingOption-desc\">\r\n                {method.description}\r\n                {method.transitTime && (\r\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\r\n                )}\r\n                {method.additionalDescription && displayAdditionalInformation && (\r\n                    <ShippingOptionAdditionalDescription\r\n                        description={method.additionalDescription}\r\n                    />\r\n                )}\r\n            </span>\r\n            <span className=\"shippingOption-price\">\r\n                <ShopperCurrency amount={method.cost} />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaticShippingOption;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconSuccess: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconSuccess);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconInfo: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconInfo);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport { IconError, IconInfo, IconSuccess } from '../icon';\r\n\r\nexport interface AlertProps {\r\n    additionalClassName?: string;\r\n    icon?: ReactNode;\r\n    testId?: string;\r\n    type?: AlertType;\r\n}\r\n\r\nexport enum AlertType {\r\n    Error = 'error',\r\n    Info = 'info',\r\n    Success = 'success',\r\n    Warning = 'warning',\r\n}\r\n\r\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\r\n    switch (type) {\r\n        case AlertType.Error:\r\n        case AlertType.Warning:\r\n            return <IconError />;\r\n\r\n        case AlertType.Success:\r\n            return <IconSuccess />;\r\n\r\n        case AlertType.Info:\r\n        default:\r\n            return <IconInfo />;\r\n    }\r\n}\r\n\r\nconst Alert: FunctionComponent<AlertProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    icon,\r\n    testId,\r\n    type,\r\n}) => (\r\n    <div\r\n        className={classNames(\r\n            'alertBox',\r\n            additionalClassName,\r\n            { 'alertBox--info': type === AlertType.Info || !type },\r\n            { 'alertBox--error': type === AlertType.Error },\r\n            { 'alertBox--success': type === AlertType.Success },\r\n            { 'alertBox--warning': type === AlertType.Warning },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\r\n\r\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Alert;\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\r\nimport { isDate, noop } from 'lodash';\r\nimport React, {\r\n    Component,\r\n    createElement,\r\n    FunctionComponent,\r\n    memo,\r\n    useCallback,\r\n    useMemo,\r\n} from 'react';\r\nimport shallowEqual from 'shallowequal';\r\n\r\nimport FormFieldContainer from './FormFieldContainer';\r\n\r\nexport interface BasicFormFieldProps extends FieldConfig {\r\n    additionalClassName?: string;\r\n    className?: string;\r\n    testId?: string;\r\n    onChange?(value: any): void;\r\n    disabledFields?: boolean\r\n}\r\n\r\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\r\n    additionalClassName,\r\n    className,\r\n    component,\r\n    disabledFields,\r\n    render,\r\n    testId,\r\n    onChange,\r\n    ...rest\r\n}) => {\r\n    const renderInnerField = useCallback(\r\n        (props: FieldProps) => (\r\n            <InnerField\r\n                {...props}\r\n                additionalClassName={additionalClassName}\r\n                className={className}\r\n                component={component}\r\n                disabledFields={disabledFields}\r\n                onChange={onChange}\r\n                render={render}\r\n                testId={testId}\r\n            />\r\n        ),\r\n        [additionalClassName, className, disabledFields, component, render, testId, onChange],\r\n    );\r\n\r\n    return <Field {...rest} render={renderInnerField} />;\r\n};\r\n\r\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\r\n\r\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\r\n    ({ additionalClassName, component, disabledFields, field, form, onChange, render, testId }) => {\r\n        const input = useMemo(\r\n            () => (\r\n                <InnerFieldInput\r\n                    component={component}\r\n                    disabledFields={disabledFields}\r\n                    field={field}\r\n                    form={form}\r\n                    onChange={onChange}\r\n                    render={render}\r\n                />\r\n            ),\r\n            [field, form, onChange, component, disabledFields, render],\r\n        );\r\n\r\n        return (\r\n            <FormFieldContainer\r\n                additionalClassName={additionalClassName}\r\n                hasError={getIn(form.errors, field.name)}\r\n                testId={testId}\r\n            >\r\n                {input}\r\n            </FormFieldContainer>\r\n        );\r\n    },\r\n    (\r\n        { form: prevForm, field: prevField, ...prevProps },\r\n        { form: nextForm, field: nextField, ...nextProps },\r\n    ) =>\r\n        shallowEqual(prevProps, nextProps) &&\r\n        shallowEqual(prevForm, nextForm) &&\r\n        shallowEqual(prevField, nextField),\r\n);\r\n\r\ntype InnerFieldInputProps = FieldProps &\r\n    Pick<FieldConfig, 'component' | 'render'> & {\r\n        onChange?(value: string): void;\r\n        disabledFields?: boolean;\r\n    };\r\n\r\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\r\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\r\n        const {\r\n            field: { value },\r\n            onChange = noop,\r\n        } = this.props;\r\n        const comparableValue = isDate(value) ? value.getTime() : value;\r\n        const comparablePrevValue = isDate(prevField.value)\r\n            ? prevField.value.getTime()\r\n            : prevField.value;\r\n\r\n        if (comparableValue !== comparablePrevValue) {\r\n            onChange(value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { component = 'input', field, render } = this.props;\r\n\r\n        if (render) {\r\n            return (render as any)(this.props);\r\n        }\r\n\r\n        if (typeof component === 'string') {\r\n            return createElement(component as any, field);\r\n        }\r\n\r\n        return createElement(component as any, this.props);\r\n    }\r\n}\r\n\r\nexport default memo(BasicFormField);\r\n","enum DynamicFormFieldType {\r\n    telephone = 'tel',\r\n    dropdown = 'dropdown',\r\n    number = 'number',\r\n    password = 'password',\r\n    checkbox = 'checkbox',\r\n    multiline = 'multiline',\r\n    date = 'date',\r\n    radio = 'radio',\r\n    text = 'text',\r\n}\r\n\r\nexport default DynamicFormFieldType;\r\n","import classNames from 'classnames';\r\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\r\n\r\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\r\n    additionalClassName?: string;\r\n    testId?: string;\r\n    legend?: ReactNode;\r\n}\r\n\r\nconst Fieldset = forwardRef(\r\n    (\r\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\r\n        ref: Ref<HTMLFieldSetElement>,\r\n    ) => (\r\n        <fieldset\r\n            {...rest}\r\n            className={className || classNames('form-fieldset', additionalClassName)}\r\n            data-test={testId}\r\n            ref={ref}\r\n        >\r\n            {legend}\r\n\r\n            <div className=\"form-body\">{children}</div>\r\n        </fieldset>\r\n    ),\r\n);\r\n\r\nexport default Fieldset;\r\n","import { memoizeOne } from '@bigcommerce/memoize';\r\nimport { Form as FormikForm, FormikFormProps } from 'formik';\r\nimport { values } from 'lodash';\r\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\r\n\r\nimport FormProvider, { FormContextType } from './FormProvider';\r\n\r\nexport interface FormProps extends FormikFormProps {\r\n    testId?: string;\r\n}\r\n\r\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\r\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\r\n\r\n    const focusOnError = () => {\r\n        const { current } = ref.current.containerRef;\r\n\r\n        if (!current) {\r\n            return;\r\n        }\r\n\r\n        const errorInputSelectors = [\r\n            '.form-field--error input',\r\n            '.form-field--error textarea',\r\n            '.form-field--error select',\r\n        ];\r\n\r\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\r\n\r\n        if (erroredFormField) {\r\n            erroredFormField.focus({ preventScroll: true });\r\n\r\n            try {\r\n                erroredFormField.offsetParent?.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'center',\r\n                    inline: 'center',\r\n                });\r\n            } catch {\r\n                erroredFormField.offsetParent?.scrollIntoView();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmitCapture = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\r\n            return () => {\r\n                setSubmitted(true);\r\n\r\n                // use timeout to allow Formik validation to happen\r\n                setTimeout(() => focusOnError());\r\n            };\r\n        }),\r\n        [focusOnError],\r\n    );\r\n\r\n    const renderContent = useCallback(\r\n        memoizeOne(({ setSubmitted }: FormContextType) => {\r\n            return (\r\n                <div ref={ref.current.containerRef}>\r\n                    <FormikForm\r\n                        {...rest}\r\n                        className={className}\r\n                        data-test={testId}\r\n                        noValidate\r\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\r\n                    />\r\n                </div>\r\n            );\r\n        }),\r\n        [className, handleSubmitCapture, testId, ...values(rest)],\r\n    );\r\n\r\n    return <FormProvider>{renderContent}</FormProvider>;\r\n};\r\n\r\nexport default memo(Form);\r\n","import { FieldProps } from 'formik';\r\nimport { kebabCase } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport BasicFormField from './BasicFormField';\r\nimport FormFieldError from './FormFieldError';\r\nimport Label from './Label';\r\n\r\nexport interface FormFieldProps {\r\n    additionalClassName?: string;\r\n    name: string;\r\n    label?: ReactNode | ((fieldName: string) => ReactNode);\r\n    labelContent?: ReactNode;\r\n    footer?: ReactNode;\r\n    id?: string;\r\n    useFloatingLabel?: boolean;\r\n    input(field: FieldProps<string>): ReactNode;\r\n    onChange?(value: string): void;\r\n    disabledFields?: boolean\r\n}\r\n\r\nconst FormField: FunctionComponent<FormFieldProps> = ({\r\n    additionalClassName,\r\n    labelContent,\r\n    label,\r\n    onChange,\r\n    footer,\r\n    input,\r\n    name,\r\n    id,\r\n    useFloatingLabel,\r\n    disabledFields\r\n}) => {\r\n    const renderField = useCallback(\r\n        (props) => (\r\n            <>\r\n                {useFloatingLabel && input(props)}\r\n\r\n                {label && (typeof label === 'function' ? label(name) : label)}\r\n                {labelContent && !label && (\r\n                    <Label\r\n                        htmlFor={name}\r\n                        id={`${id ?? name}-label`}\r\n                        useFloatingLabel={useFloatingLabel}\r\n                    >\r\n                        {labelContent}\r\n                    </Label>\r\n                )}\r\n\r\n                {!useFloatingLabel && input(props)}\r\n\r\n                <FormFieldError\r\n                    errorId={`${id ?? name}-field-error-message`}\r\n                    name={name}\r\n                    testId={`${kebabCase(name)}-field-error-message`}\r\n                />\r\n\r\n                {footer}\r\n            </>\r\n        ),\r\n        [label, labelContent, id, input, name, footer, useFloatingLabel],\r\n    );\r\n\r\n    return (\r\n        <BasicFormField\r\n            additionalClassName={additionalClassName}\r\n            disabledFields={disabledFields}\r\n            name={name}\r\n            onChange={onChange}\r\n            render={renderField}\r\n        />\r\n    );\r\n};\r\n\r\nexport default memo(FormField);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { FormContext } from './FormProvider';\r\n\r\nexport interface FormFieldContainerProps {\r\n    additionalClassName?: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n    hasError?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    className,\r\n    hasError,\r\n    testId,\r\n}) => (\r\n    <FormContext.Consumer>\r\n        {({ isSubmitted }) => (\r\n            <div\r\n                className={\r\n                    className ||\r\n                    classNames('form-field', additionalClassName, {\r\n                        'form-field--error': hasError && isSubmitted,\r\n                    })\r\n                }\r\n                data-test={testId}\r\n            >\r\n                {children}\r\n            </div>\r\n        )}\r\n    </FormContext.Consumer>\r\n);\r\n\r\nexport default memo(FormFieldContainer);\r\n","import { ErrorMessage } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { FormContext } from './FormProvider';\r\n\r\nexport interface FormFieldErrorProps {\r\n    name: string;\r\n    testId?: string;\r\n    errorId: string;\r\n}\r\n\r\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\r\n    const renderMessage = useCallback(\r\n        (message: string) => (\r\n            <ul className=\"form-field-errors\" data-test={testId}>\r\n                <li className=\"form-field-error\">\r\n                    <label\r\n                        aria-live=\"polite\"\r\n                        className=\"form-inlineMessage\"\r\n                        htmlFor={name}\r\n                        id={errorId}\r\n                        role=\"alert\"\r\n                    >\r\n                        {message}\r\n                    </label>\r\n                </li>\r\n            </ul>\r\n        ),\r\n        [errorId, name, testId],\r\n    );\r\n\r\n    return (\r\n        <FormContext.Consumer>\r\n            {({ isSubmitted }) =>\r\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\r\n            }\r\n        </FormContext.Consumer>\r\n    );\r\n};\r\n\r\nexport default memo(FormFieldError);\r\n","import { isFunction, noop } from 'lodash';\r\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\r\n\r\nexport interface FormContextType {\r\n    isSubmitted: boolean;\r\n    setSubmitted(isSubmitted: boolean): void;\r\n}\r\n\r\ntype FormContextFunction = (props: FormContextType) => ReactNode;\r\n\r\nexport interface FormProviderProps {\r\n    initialIsSubmitted?: boolean;\r\n    children: ReactNode | FormContextFunction;\r\n}\r\n\r\nexport const FormContext = createContext<FormContextType>({\r\n    isSubmitted: false,\r\n    setSubmitted: noop,\r\n});\r\n\r\nconst FormProvider: FunctionComponent<FormProviderProps> = ({\r\n    children,\r\n    initialIsSubmitted = false,\r\n}) => {\r\n    const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\r\n    const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\r\n\r\n    return (\r\n        <FormContext.Provider value={contextValue}>\r\n            {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n\r\nexport default memo(FormProvider);\r\n","import classNames from 'classnames';\r\nimport { includes } from 'lodash';\r\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\r\n\r\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    testId?: string;\r\n    useFloatingLabel?: boolean;\r\n}\r\n\r\nconst Input = forwardRef(\r\n    (\r\n        { className, testId, placeholder, name, useFloatingLabel, ...rest }: InputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => {\r\n        const notUseFloatingLabelFieldNames = ['orderComment', 'redeemableCode'];\r\n\r\n        return (\r\n            <input\r\n                {...{\r\n                    ...rest,\r\n                    className: classNames(className, {\r\n                        'floating-input':\r\n                            useFloatingLabel && !includes(notUseFloatingLabelFieldNames, name),\r\n                    }),\r\n                    name,\r\n                }}\r\n                data-test={testId}\r\n                placeholder={useFloatingLabel ? ' ' : placeholder}\r\n                ref={ref}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport default Input;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\r\n\r\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\r\n    testId?: string;\r\n    hidden?: boolean;\r\n    useFloatingLabel?: boolean;\r\n}\r\n\r\nconst Label: FunctionComponent<LabelProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    useFloatingLabel,\r\n    ...rest\r\n}) => (\r\n    <label\r\n        { ...rest }\r\n        className={ classNames(\r\n            { 'floating-label': useFloatingLabel },\r\n            className || 'form-label',\r\n            { 'is-srOnly': hidden },\r\n            'optimizedCheckout-form-label'\r\n        ) }\r\n        data-test={ testId }\r\n    >\r\n        { children }\r\n    </label>\r\n);\r\n\r\nexport default Label;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\r\n    hidden?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst Legend: FunctionComponent<LegendProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    ...rest\r\n}) => (\r\n    <legend\r\n        {...rest}\r\n        className={classNames(\r\n            className || 'form-legend',\r\n            { 'is-srOnly': hidden },\r\n            { 'optimizedCheckout-headingSecondary': !hidden },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        {children}\r\n    </legend>\r\n);\r\n\r\nexport default Legend;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\n\r\nexport interface TextInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    appearFocused?: boolean;\r\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\r\n    useFloatingLabel?: boolean;\r\n}\r\n\r\nconst TextInput = forwardRef(\r\n    (\r\n        {\r\n            additionalClassName,\r\n            useFloatingLabel,\r\n            appearFocused,\r\n            type = 'text',\r\n            ...rest\r\n        }: TextInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <Input\r\n            {...rest}\r\n            className={classNames(\r\n                'form-input',\r\n                'optimizedCheckout-form-input',\r\n                { 'form-input--focus': appearFocused },\r\n                { 'optimizedCheckout-form-input--focus': appearFocused },\r\n                additionalClassName,\r\n            )}\r\n            ref={ref}\r\n            type={type}\r\n            useFloatingLabel={useFloatingLabel}\r\n        />\r\n    ),\r\n);\r\n\r\nexport default TextInput;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconBolt: FunctionComponent = () => (\r\n    <svg\r\n        aria-labelledby=\"iconCardBoltTitle\"\r\n        height=\"12\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 12 12\"\r\n        width=\"12\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <title id=\"iconCardBoltTitle\">Bolt</title>\r\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconBolt);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconClose: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconClose);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconError: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconError);\r\n","import classNames from 'classnames';\r\nimport React, { ComponentType, memo } from 'react';\r\n\r\nexport enum IconSize {\r\n    Regular = 'regular',\r\n    Small = 'small',\r\n    Medium = 'medium',\r\n    Large = 'large',\r\n}\r\n\r\nexport interface IconProps {\r\n    additionalClassName?: string;\r\n    size?: IconSize;\r\n    testId?: string;\r\n}\r\n\r\nexport default function withIconContainer<TProps>(\r\n     \r\n    OriginalComponent: ComponentType<TProps>,\r\n): ComponentType<TProps & IconProps> {\r\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\r\n        <div\r\n            className={classNames(\r\n                'icon',\r\n                additionalClassName,\r\n                size === IconSize.Small ? 'icon--small' : null,\r\n                size === IconSize.Large ? 'icon--large' : null,\r\n                size === IconSize.Medium ? 'icon--medium' : null,\r\n            )}\r\n            data-test={testId}\r\n        >\r\n            <OriginalComponent {...(rest as TProps)} />\r\n        </div>\r\n    ));\r\n}\r\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\r\n\r\nimport { ErrorBoundary } from '../../common/error';\r\nimport { TranslatedString } from '../../locale';\r\n\r\nimport './LazyContainer.scss';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LazyContainerProps {\r\n    children: ReactNode;\r\n    loadingSkeleton?: ReactNode;\r\n}\r\n\r\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\r\n\r\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\r\n    <ErrorBoundary\r\n        fallback={\r\n            <div className=\"lazyContainer-error\">\r\n                <TranslatedString id=\"common.unstable_network_error\" />\r\n            </div>\r\n        }\r\n        filter={filterError}\r\n    >\r\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\r\n    </ErrorBoundary>\r\n);\r\n\r\nexport default LazyContainer;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LoadingOverlayProps {\r\n    isLoading: boolean;\r\n    hideContentWhenLoading?: boolean;\r\n    unmountContentWhenLoading?: boolean;\r\n}\r\n\r\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\r\n    children,\r\n    hideContentWhenLoading,\r\n    unmountContentWhenLoading,\r\n    isLoading,\r\n}) => {\r\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\r\n        return (\r\n            <>\r\n                <LoadingSpinner isLoading={isLoading} />\r\n                {unmountContentWhenLoading && isLoading ? null : (\r\n                    <div\r\n                        style={{\r\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingOverlay-container\">\r\n            {children}\r\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingOverlay;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nexport interface LoadingSpinnerProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\r\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingSpinner);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { preventDefault } from '../../common/dom';\r\nimport { IconClose } from '../icon';\r\n\r\nexport type ModalProps = Omit<\r\n    ReactModal.Props,\r\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\r\n> & {\r\n    children: ReactNode;\r\n    closeButtonLabel?: string | ReactNode;\r\n    footer?: ReactNode;\r\n    header?: ReactNode;\r\n    additionalHeaderClassName?: string;\r\n    additionalBodyClassName?: string;\r\n    additionalModalClassName?: string;\r\n    shouldShowCloseButton?: boolean;\r\n};\r\n\r\nconst Modal: FunctionComponent<ModalProps> = ({\r\n    children,\r\n    closeButtonLabel = 'Close',\r\n    footer,\r\n    header,\r\n    additionalHeaderClassName,\r\n    additionalBodyClassName,\r\n    additionalModalClassName,\r\n    onRequestClose = noop,\r\n    shouldShowCloseButton = false,\r\n    ...rest\r\n}) => {\r\n    const handleClose = useCallback(\r\n        (event: MouseEvent | KeyboardEvent) => {\r\n            onRequestClose(event);\r\n        },\r\n        [onRequestClose],\r\n    );\r\n\r\n    return (\r\n        <ReactModal\r\n            {...rest}\r\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\r\n            bodyOpenClassName=\"has-activeModal\"\r\n            className={{\r\n                base: classNames(\r\n                    'modal optimizedCheckout-contentPrimary',\r\n                    additionalModalClassName,\r\n                ),\r\n                afterOpen: 'modal--afterOpen',\r\n                beforeClose: 'modal--beforeClose',\r\n            }}\r\n            closeTimeoutMS={200}\r\n            onRequestClose={onRequestClose}\r\n            overlayClassName={{\r\n                base: 'modalOverlay',\r\n                afterOpen: 'modalOverlay--afterOpen',\r\n                beforeClose: 'modalOverlay--beforeClose',\r\n            }}\r\n            shouldCloseOnEsc={true}\r\n            shouldCloseOnOverlayClick={false}\r\n        >\r\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\r\n                {header}\r\n\r\n                {shouldShowCloseButton && (\r\n                     \r\n                    <a\r\n                        className=\"modal-close\"\r\n                        data-test=\"modal-close-button\"\r\n                        href=\"#\"\r\n                        onClick={preventDefault(handleClose)}\r\n                    >\r\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\r\n\r\n                        <IconClose />\r\n                    </a>\r\n                )}\r\n            </div>\r\n\r\n            <div\r\n                className={classNames('modal-body', additionalBodyClassName)}\r\n                data-test=\"modal-body\"\r\n            >\r\n                {children}\r\n            </div>\r\n\r\n            {Boolean(footer) && (\r\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\r\n                    {footer}\r\n                </div>\r\n            )}\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface ModalHeaderProps {\r\n    children: React.ReactNode;\r\n    additionalClassName?: string;\r\n}\r\n\r\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\r\n    <h2\r\n        className={classNames(\r\n            'modal-header-title optimizedCheckout-headingSecondary',\r\n            additionalClassName,\r\n        )}\r\n        data-test=\"modal-heading\"\r\n    >\r\n        {children}\r\n    </h2>\r\n);\r\n\r\nexport default ModalHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\r\n\r\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nconst queries = {\r\n    print: 'print',\r\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\r\n};\r\n\r\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\r\n    children,\r\n}) => {\r\n    return <Media queries={queries}>{children}</Media>;\r\n};\r\n\r\nexport default memo(ViewPicker);\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport ViewPicker from './ViewPicker';\r\n\r\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\r\n    children,\r\n}) => {\r\n    return (\r\n        <ViewPicker>\r\n            {(matches: { mobile: boolean }) => {\r\n                return children(matches.mobile);\r\n            }}\r\n        </ViewPicker>\r\n    );\r\n};\r\n\r\nexport default memo(MobileView);\r\n","// These values have to match with screensizes.scss\r\nexport const MOBILE_MAX_WIDTH = 968;\r\n","import { Component, ReactNode } from 'react';\r\n\r\nexport interface ToggleProps {\r\n    openByDefault?: boolean;\r\n    children(props: any): ReactNode;\r\n}\r\n\r\nexport interface ToggleState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\r\n    constructor(props: ToggleProps) {\r\n        super(props);\r\n\r\n        this.state = { isOpen: !!props.openByDefault };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return children({\r\n            isOpen,\r\n            toggle: this.toggle,\r\n        });\r\n    }\r\n\r\n    private toggle: (event: Event) => void = (event) => {\r\n        const { isOpen } = this.state;\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({ isOpen: !isOpen });\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form\">\r\n            <div className=\"form-legend-container\">\r\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\r\n            </div>\r\n            <div className=\"address-form-skeleton\">\r\n                <div className=\"name-fields-skeleton\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"skeleton-container\">\r\n                    <div className=\"input-skeleton\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default AddressFormSkeleton;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\ninterface ChecklistSkeletonProps {\r\n    additionalClassName?: string;\r\n    rows?: number;\r\n}\r\n\r\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    isLoading = true,\r\n    rows = 3,\r\n}) => {\r\n    const content = [];\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n        content.push(\r\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\r\n                <div className=\"checklist-skeleton-circle\" />\r\n                <div className=\"checklist-skeleton-rectangle\" />\r\n            </div>,\r\n        );\r\n    }\r\n\r\n    const skeleton = (\r\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default ChecklistSkeleton;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form customer-skeleton\">\r\n            <div className=\"customerEmail-container\">\r\n                <div className=\"customerEmail-body\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\r\n                </div>\r\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\r\n                    <div className=\"button-skeleton skeleton-container\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default CustomerSkeleton;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nexport interface LoadingSkeletonProps {\r\n    isLoading?: boolean;\r\n    skeleton?: ReactNode;\r\n}\r\n\r\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\r\n    children,\r\n    isLoading = true,\r\n    skeleton,\r\n}) => (\r\n    <>\r\n        {isLoading && skeleton}\r\n        {!isLoading && !!children && <div className=\"loading-skeleton\">{children}</div>}\r\n    </>\r\n);\r\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","clickPayButton","paymentRejected","paymentComplete","exitCheckout","AnalyticsContext","value","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","state","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","type","getBillingCountries","getBillingAddressFields","getShippingAddressFields","fields","memo","addressWithoutLocalization","isValidAddress","filter","field","custom","className","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","values","addressFormValues","fieldName","fieldType","defaultValue","customFields","fieldValue","Date","getDefaultValue","getValue","shouldSaveAddress","displayNamePrefix","checkoutState","checkout","getCheckout","payments","payment","providerId","id","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","this","methods","join","UNSUPPORTED_METHODS","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","data","url","PureComponent","analyticsContext","useContext","Error","isExecutingPaymentMethodCheckout","methodId","deinitializeCustomer","executePaymentMethodCheckout","initializeCustomer","onUnhandledError","noop","useState","showSuggestion","setShowSuggestion","useEffect","bolt","onInit","hasBoltAccount","error","fn","onClick","event","stopPropagation","TranslatedString","provider","providerFlow","Button","IconBolt","additionalClassName","getConfig","config","providerWithCustomCheckout","checkoutSettings","rest","PaymentMethodId","options","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","customer","isGuest","every","getBillingAddress","getCustomer","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","window","location","reload","isErrorWithType","size","testId","variant","withIconContainer","height","viewBox","width","xmlns","d","Alert","icon","dangerouslySetInnerHTML","__html","banners","result","promotion","map","banner","index","key","text","isUsingMultiShipping","consignments","lineItems","some","consignment","lineItemIds","hasUnassignedLineItems","cart","compactView","selectedShippingOption","StaticAddress","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","getLanguageService","title","ShippingOptionExpiredError","role","heading","isActive","isComplete","isEditable","onEdit","summary","preventDefault","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","input","getChildInput","position","getScrollPosition","onExpanded","focus","isNaN","scrollTo","container","current","querySelector","getParentContainer","top","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","Component","CheckoutStepType","physicalItems","lineItem","isShippingRequired","features","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isStripeLinkAuthenticated","isRequired","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","getCart","getSelectedPaymentMethod","shippingAddress","shippingAddressFields","hasRemoteAddress","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","getPaymentStepStatus","getOrder","order","customerStep","shippingStep","billingStep","paymentStep","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","Billing","lazy","retry","CartSummary","CartSummaryDrawer","Customer","Payment","Shipping","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","isBuyNowCartEnabled","isSubscribed","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","Math","navigateToStep","navigateToOrderConfirmation","orderId","embeddedMessenger","postComplete","checkEmbeddedSupport","methodIds","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","newHasSelectedShippingOptions","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","isGuestEnabled","href","postSignedOut","setCustomerViewType","CustomerViewType","isEmbedded","assign","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","canCreateAccountInCheckout","createAccountUrl","replace","handleBeforeExit","unsubscribeFromConsignments","removeEventListener","checkoutId","containerId","createEmbeddedMessenger","embeddedStylesheet","loadCheckout","subscribeToConsignments","params","include","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","buyNowCartFlag","defaultNewsletterSignupOption","shopperConfig","defaultNewsletterSignup","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","defaultStepType","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","LazyContainer","loadingSkeleton","CustomerSkeleton","onAccountCreated","onChangeViewType","onContinueAsGuest","onContinueAsGuestError","onReady","onSignIn","onSignInError","onSubscribeToNewsletter","viewType","hasCartChanged","AddressFormSkeleton","cartHasChanged","navigateNextStep","onCreateAccount","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmit","onSubmitError","clearError","withAnalytics","withLanguage","errors","statuses","submitOrderError","getSubmitOrderError","guestCheckoutEnabled","links","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","getContextValue","memoizeOne","getState","unsubscribe","lastPathName","pathname","split","pop","toString","Promise","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","getDerivedStateFromError","componentDidCatch","fallback","aria","labelledby","handleOnRequestClose","nativeEvent","Modal","additionalModalClassName","footer","renderFooter","header","renderHeader","isOpen","onRequestClose","renderBody","ModalHeader","IconError","renderErrorCode","shouldShowErrorCode","isRequestError","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","Object","__proto__","ErrorLevelType","customConsole","console","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","breadcrumbs","breadcrumb","includes","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","sampleRate","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","createInjectHoc","pickProps","injectedProps","pickBy","EMPTY_ARRAY","freeze","DEFAULT_OPTIONS","count","interval","resolve","amount","currency","toCustomerCurrency","initialize","onError","deinitialize","localeContext","LocaleContext","initializeOptions","useCallback","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","APPLE_PAY","SUPPORTED_METHODS","isInitializing","supportedMethodIds","isApplePayWindow","getPasswordRequirementsFromConfig","getPasswordRequirements","minlength","description","alpha","numeric","allSlashes","minLength","toCSSRule","selector","mergedStyles","kebabCase","parse","rules","body","push","secondaryText","secondaryHeading","link","hover","button","active","disabled","secondaryButton","placeholder","select","checkbox","radio","checklist","checked","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","style","document","createElement","head","appendChild","sheet","CSSStyleSheet","forEach","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","getElementById","renderOrderConfirmation","OrderConfirmationApp","languageService","createCurrencyService","date","inputFormat","inputDateFormat","ADD_ATTR","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","requestSender","create","put","then","response","renderPasswordInput","TextInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","FormField","labelContent","withFormik","mapPropsToValues","password","confirmPassword","handleSubmit","onSignUp","validationSchema","passwordRequirements","oneOf","isSigningUp","customerCanBeCreated","Fieldset","legend","Legend","Form","requirements","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","isPaymentWithMandate","mandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","paymentsWithMandates","status","rel","target","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","createAccount","hasSignedUp","catch","loadOrder","isLoadingOrder","LoadingSpinner","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","itemId","item","isNil","parentId","findLineItems","getLineItemsCount","quantity","availableShippingOptions","addedByPromotion","Toggle","openByDefault","toggle","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","component","disabledFields","form","onChange","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","isDate","getTime","renderInnerField","Field","DynamicFormFieldType","forwardRef","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","setSubmitted","noValidate","onSubmitCapture","useFloatingLabel","renderField","htmlFor","errorId","isSubmitted","renderMessage","ErrorMessage","FormContext","initialIsSubmitted","contextValue","Provider","isFunction","hidden","appearFocused","fill","IconSize","Medium","filterError","Suspense","unmountContentWhenLoading","display","closeButtonLabel","additionalHeaderClassName","additionalBodyClassName","shouldShowCloseButton","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","Boolean","queries","mobile","MOBILE_MAX_WIDTH","skeleton","rows","content","i","LoadingSkeleton"],"sourceRoot":""}